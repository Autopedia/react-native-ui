// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Atoms/Button Color/Default 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#FFFFFF",
        "borderColor": "#D9D9D9",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": 5,
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 10,
      }
    }
  >
    <Text
      color="default"
      includeFontPadding={false}
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 15,
            "lineHeight": 22,
            "textAlign": "center",
          },
        ]
      }
    >
      Default
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#007AFF",
        "borderColor": "black",
        "borderRadius": 4,
        "borderStyle": "solid",
        "borderWidth": 0,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": 5,
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 10,
      }
    }
  >
    <Text
      color="primary"
      includeFontPadding={false}
      style={
        Array [
          Object {
            "color": "#FFFFFF",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 15,
            "lineHeight": 22,
            "textAlign": "center",
          },
        ]
      }
    >
      Primary
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#FEE500",
        "borderColor": "black",
        "borderRadius": 4,
        "borderStyle": "solid",
        "borderWidth": 0,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": 5,
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 10,
      }
    }
  >
    <Text
      color="kakao"
      includeFontPadding={false}
      style={
        Array [
          Object {
            "color": "#000000",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 15,
            "lineHeight": 22,
            "textAlign": "center",
          },
        ]
      }
    >
      Kakao
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#000000",
        "borderColor": "black",
        "borderRadius": 4,
        "borderStyle": "solid",
        "borderWidth": 0,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": 5,
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 10,
      }
    }
  >
    <Text
      color="apple"
      includeFontPadding={false}
      style={
        Array [
          Object {
            "color": "#FFFFFF",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 15,
            "lineHeight": 22,
            "textAlign": "center",
          },
        ]
      }
    >
      Apple
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#FFFFFF",
        "borderColor": "#D9D9D9",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 10,
      }
    }
  >
    <Text
      color="google"
      includeFontPadding={false}
      style={
        Array [
          Object {
            "color": "#000000",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 15,
            "lineHeight": 22,
            "textAlign": "center",
          },
        ]
      }
    >
      Google
    </Text>
  </View>
</View>
`;

exports[`Storyshots Atoms/Button Color/Link 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": 5,
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 10,
      }
    }
  >
    <Text
      color="default"
      includeFontPadding={false}
      style={
        Array [
          Object {
            "color": "#007AFF",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 15,
            "lineHeight": 22,
            "textAlign": "center",
          },
        ]
      }
      type="link"
    >
      Default
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 10,
      }
    }
  >
    <Text
      color="muted"
      includeFontPadding={false}
      style={
        Array [
          Object {
            "color": "#8C8C8C",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 15,
            "lineHeight": 22,
            "textAlign": "center",
          },
        ]
      }
      type="link"
    >
      Muted
    </Text>
  </View>
</View>
`;

exports[`Storyshots Atoms/Button Disabled 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#FFFFFF",
        "borderColor": "#D9D9D9",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": 5,
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 10,
      }
    }
  >
    <Text
      includeFontPadding={false}
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 15,
            "lineHeight": 22,
            "textAlign": "center",
          },
        ]
      }
    >
      Default
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#F5F5F5",
        "borderColor": "#D9D9D9",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": 5,
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 10,
      }
    }
  >
    <Text
      disabled={true}
      includeFontPadding={false}
      style={
        Array [
          Object {
            "color": "#8C8C8C",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 15,
            "lineHeight": 22,
            "textAlign": "center",
          },
        ]
      }
    >
      Default Disabled
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": 5,
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 10,
      }
    }
  >
    <Text
      includeFontPadding={false}
      style={
        Array [
          Object {
            "color": "#007AFF",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 15,
            "lineHeight": 22,
            "textAlign": "center",
          },
        ]
      }
      type="link"
    >
      Link
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 10,
      }
    }
  >
    <Text
      disabled={true}
      includeFontPadding={false}
      style={
        Array [
          Object {
            "color": "#8C8C8C",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 15,
            "lineHeight": 22,
            "textAlign": "center",
          },
        ]
      }
      type="link"
    >
      Link Disabled
    </Text>
  </View>
</View>
`;

exports[`Storyshots Atoms/Button Icon/Absolute 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#FFFFFF",
        "borderColor": "#D9D9D9",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": 5,
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 10,
        "width": "100%",
      }
    }
  >
    <Image
      source={
        Object {
          "testUri": "../../../src/assets/icons/shop/shop.png",
        }
      }
      style={
        Array [
          Object {
            "tintColor": "#1F1F1F",
          },
          Object {
            "height": 20,
            "left": 16,
            "position": "absolute",
            "width": 20,
          },
        ]
      }
    />
    <Text
      includeFontPadding={false}
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 15,
            "lineHeight": 22,
            "textAlign": "center",
          },
        ]
      }
    >
      Absolute Icon Left
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#FFFFFF",
        "borderColor": "#D9D9D9",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": 5,
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 10,
        "width": "100%",
      }
    }
  >
    <Text
      includeFontPadding={false}
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 15,
            "lineHeight": 22,
            "textAlign": "center",
          },
        ]
      }
    >
      Absolute Icon Right
    </Text>
    <Image
      source={
        Object {
          "testUri": "../../../src/assets/icons/shop/shop.png",
        }
      }
      style={
        Array [
          Object {
            "tintColor": "#1F1F1F",
          },
          Object {
            "height": 20,
            "position": "absolute",
            "right": 16,
            "width": 20,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`Storyshots Atoms/Button Icon/Default 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#FFFFFF",
        "borderColor": "#D9D9D9",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": 5,
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 10,
      }
    }
  >
    <Image
      source={
        Object {
          "testUri": "../../../src/assets/icons/shop/shop.png",
        }
      }
      style={
        Array [
          Object {
            "tintColor": "#1F1F1F",
          },
          Object {
            "height": 20,
            "marginRight": 6,
            "width": 20,
          },
        ]
      }
    />
    <Text
      includeFontPadding={false}
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 15,
            "lineHeight": 22,
            "textAlign": "center",
          },
        ]
      }
    >
      Icon Left
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#FFFFFF",
        "borderColor": "#D9D9D9",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": 5,
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 10,
      }
    }
  >
    <Text
      includeFontPadding={false}
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 15,
            "lineHeight": 22,
            "textAlign": "center",
          },
        ]
      }
    >
      Icon Right
    </Text>
    <Image
      source={
        Object {
          "testUri": "../../../src/assets/icons/shop/shop.png",
        }
      }
      style={
        Array [
          Object {
            "tintColor": "#1F1F1F",
          },
          Object {
            "height": 20,
            "marginLeft": 6,
            "width": 20,
          },
        ]
      }
    />
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#FFFFFF",
        "borderColor": "#D9D9D9",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": 5,
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 10,
        "width": "100%",
      }
    }
  >
    <Image
      source={
        Object {
          "testUri": "../../../src/assets/icons/shop/shop.png",
        }
      }
      style={
        Array [
          Object {
            "tintColor": "#1F1F1F",
          },
          Object {
            "height": 20,
            "marginRight": 6,
            "width": 20,
          },
        ]
      }
    />
    <Text
      includeFontPadding={false}
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 15,
            "lineHeight": 22,
            "textAlign": "center",
          },
        ]
      }
    >
      Block Icon Left
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#FFFFFF",
        "borderColor": "#D9D9D9",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": 5,
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 10,
        "width": "100%",
      }
    }
  >
    <Text
      includeFontPadding={false}
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 15,
            "lineHeight": 22,
            "textAlign": "center",
          },
        ]
      }
    >
      Block Icon Right
    </Text>
    <Image
      source={
        Object {
          "testUri": "../../../src/assets/icons/shop/shop.png",
        }
      }
      style={
        Array [
          Object {
            "tintColor": "#1F1F1F",
          },
          Object {
            "height": 20,
            "marginLeft": 6,
            "width": 20,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`Storyshots Atoms/Button Layout/Block 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#FFFFFF",
        "borderColor": "#D9D9D9",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 10,
        "width": "100%",
      }
    }
  >
    <Text
      includeFontPadding={false}
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 15,
            "lineHeight": 22,
            "textAlign": "center",
          },
        ]
      }
    >
      Block Button
    </Text>
  </View>
</View>
`;

exports[`Storyshots Atoms/Button Layout/Inline 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "borderColor": "#D9D9D9",
          "borderRadius": 4,
          "borderWidth": 1,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginRight": 5,
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 10,
        }
      }
    >
      <Text
        includeFontPadding={false}
        style={
          Array [
            Object {
              "color": "#1F1F1F",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 15,
              "lineHeight": 22,
              "textAlign": "center",
            },
          ]
        }
      >
        Btn 1
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "borderColor": "#D9D9D9",
          "borderRadius": 4,
          "borderWidth": 1,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginRight": 5,
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 10,
        }
      }
    >
      <Text
        includeFontPadding={false}
        style={
          Array [
            Object {
              "color": "#1F1F1F",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 15,
              "lineHeight": 22,
              "textAlign": "center",
            },
          ]
        }
      >
        Btn 2
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "borderColor": "#D9D9D9",
          "borderRadius": 4,
          "borderWidth": 1,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginRight": 5,
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 10,
        }
      }
    >
      <Text
        includeFontPadding={false}
        style={
          Array [
            Object {
              "color": "#1F1F1F",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 15,
              "lineHeight": 22,
              "textAlign": "center",
            },
          ]
        }
      >
        Btn 3
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "borderColor": "#D9D9D9",
          "borderRadius": 4,
          "borderWidth": 1,
          "flexDirection": "row",
          "justifyContent": "center",
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 10,
        }
      }
    >
      <Text
        includeFontPadding={false}
        style={
          Array [
            Object {
              "color": "#1F1F1F",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 15,
              "lineHeight": 22,
              "textAlign": "center",
            },
          ]
        }
      >
        Btn 4
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Button Layout/Sticky 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#007AFF",
        "borderColor": "black",
        "borderStyle": "solid",
        "borderWidth": 0,
        "bottom": 0,
        "flexDirection": "row",
        "justifyContent": "center",
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 10,
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <Text
      color="primary"
      includeFontPadding={false}
      style={
        Array [
          Object {
            "color": "#FFFFFF",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 15,
            "lineHeight": 22,
            "textAlign": "center",
          },
        ]
      }
    >
      Sticky Button
    </Text>
  </View>
</View>
`;

exports[`Storyshots Atoms/Button Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#FFFFFF",
        "borderColor": "#D9D9D9",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 10,
      }
    }
  >
    <Text
      color="default"
      disabled={false}
      includeFontPadding={false}
      size="md"
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 15,
            "lineHeight": 22,
            "textAlign": "center",
          },
        ]
      }
    >
      Button
    </Text>
  </View>
</View>
`;

exports[`Storyshots Atoms/Button Size 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#FFFFFF",
        "borderColor": "#D9D9D9",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": 5,
        "opacity": 1,
        "paddingBottom": 6,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 6,
      }
    }
  >
    <Text
      includeFontPadding={false}
      size="sm"
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 13,
            "lineHeight": 19,
            "textAlign": "center",
          },
        ]
      }
    >
      Small
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#FFFFFF",
        "borderColor": "#D9D9D9",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": 5,
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 10,
      }
    }
  >
    <Text
      includeFontPadding={false}
      size="md"
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 15,
            "lineHeight": 22,
            "textAlign": "center",
          },
        ]
      }
    >
      Medium
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#FFFFFF",
        "borderColor": "#D9D9D9",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "opacity": 1,
        "paddingBottom": 14,
        "paddingLeft": 20,
        "paddingRight": 20,
        "paddingTop": 14,
      }
    }
  >
    <Text
      includeFontPadding={false}
      size="lg"
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontFamily": "NotoSansKR-Bold",
            "fontSize": 20,
            "lineHeight": 29,
            "textAlign": "center",
          },
        ]
      }
    >
      Large
    </Text>
  </View>
</View>
`;

exports[`Storyshots Atoms/Button Type 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#FFFFFF",
        "borderColor": "#D9D9D9",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": 5,
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 10,
      }
    }
  >
    <Text
      includeFontPadding={false}
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 15,
            "lineHeight": 22,
            "textAlign": "center",
          },
        ]
      }
    >
      Default
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 10,
      }
    }
  >
    <Text
      includeFontPadding={false}
      style={
        Array [
          Object {
            "color": "#007AFF",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 15,
            "lineHeight": 22,
            "textAlign": "center",
          },
        ]
      }
      type="link"
    >
      Link
    </Text>
  </View>
</View>
`;

exports[`Storyshots Atoms/Checkbox Default 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "opacity": 1,
      }
    }
  >
    <Image
      source={
        Object {
          "testUri": "../../../src/assets/icons/checkbox/checkbox-checked.png",
        }
      }
      style={
        Array [
          Object {
            "tintColor": "#1F1F1F",
          },
          Object {
            "marginRight": 4,
          },
        ]
      }
    />
    <Text>
      defaultValue : true
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "opacity": 1,
      }
    }
  >
    <Image
      source={
        Object {
          "testUri": "../../../src/assets/icons/checkbox/checkbox-unchecked.png",
        }
      }
      style={
        Array [
          Object {
            "tintColor": "#1F1F1F",
          },
          Object {
            "marginRight": 4,
          },
        ]
      }
    />
    <Text>
      defaultValue : false
    </Text>
  </View>
</View>
`;

exports[`Storyshots Atoms/Checkbox Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "opacity": 1,
      }
    }
  >
    <Image
      source={
        Object {
          "testUri": "../../../src/assets/icons/checkbox/checkbox-unchecked.png",
        }
      }
      style={
        Array [
          Object {
            "tintColor": "#1F1F1F",
          },
          Object {
            "marginRight": 4,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`Storyshots Atoms/Divider Margin 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    margin={0}
    style={
      Array [
        Object {
          "borderBottomColor": "#F5F5F5",
          "borderBottomWidth": 1,
          "height": 0,
          "marginBottom": 0,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 0,
          "width": "100%",
        },
      ]
    }
  />
  <View
    style={
      Array [
        Object {
          "borderBottomColor": "#F5F5F5",
          "borderBottomWidth": 1,
          "height": 0,
          "marginBottom": 16,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 16,
          "width": "100%",
        },
      ]
    }
  />
</View>
`;

exports[`Storyshots Atoms/Divider Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    margin={16}
    style={
      Array [
        Object {
          "borderBottomColor": "#F5F5F5",
          "borderBottomWidth": 1,
          "height": 0,
          "marginBottom": 16,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 16,
          "width": "100%",
        },
      ]
    }
  />
</View>
`;

exports[`Storyshots Atoms/FormDivider Invisible 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "borderBottomColor": "#D9D9D9",
          "borderBottomWidth": 1,
          "height": 0,
          "marginBottom": 8,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 8,
          "width": "100%",
        },
      ]
    }
  />
  <View
    invisible={true}
    style={
      Array [
        Object {
          "height": 0,
          "marginBottom": 8,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 8,
          "width": "100%",
        },
      ]
    }
  />
</View>
`;

exports[`Storyshots Atoms/FormDivider Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    invisible={false}
    style={
      Array [
        Object {
          "borderBottomColor": "#D9D9D9",
          "borderBottomWidth": 1,
          "height": 0,
          "marginBottom": 8,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 8,
          "width": "100%",
        },
      ]
    }
  />
</View>
`;

exports[`Storyshots Atoms/SelectOption Block(Solo) 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#E6F6FF",
        "borderColor": "#2997FF",
        "borderRadius": 4,
        "borderWidth": 1,
        "marginBottom": 2,
        "marginLeft": 0,
        "marginRight": 0,
        "marginTop": 2,
        "opacity": 1,
        "paddingBottom": 8,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 8,
      }
    }
  >
    <Text
      layout="block"
      selected={true}
      style={
        Array [
          Object {
            "color": "#007AFF",
            "fontFamily": "NotoSansKR-Medium",
            "fontSize": 18,
            "lineHeight": 26,
          },
        ]
      }
      value={null}
    >
      Block label selected
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#FFFFFF",
        "borderColor": "#D9D9D9",
        "borderRadius": 4,
        "borderWidth": 1,
        "marginBottom": 2,
        "marginLeft": 0,
        "marginRight": 0,
        "marginTop": 2,
        "opacity": 1,
        "paddingBottom": 8,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 8,
      }
    }
  >
    <Text
      layout="block"
      selected={false}
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontFamily": "NotoSansKR-Medium",
            "fontSize": 18,
            "lineHeight": 26,
          },
        ]
      }
      value={null}
    >
      Block label unselected
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#F5F5F5",
        "borderColor": "#D9D9D9",
        "borderRadius": 4,
        "borderWidth": 1,
        "marginBottom": 2,
        "marginLeft": 0,
        "marginRight": 0,
        "marginTop": 2,
        "opacity": 1,
        "paddingBottom": 8,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 8,
      }
    }
  >
    <Text
      disabled={true}
      layout="block"
      selected={true}
      style={
        Array [
          Object {
            "color": "#8C8C8C",
            "fontFamily": "NotoSansKR-Medium",
            "fontSize": 18,
            "lineHeight": 26,
          },
        ]
      }
      value={null}
    >
      Block label disabled
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#E6F6FF",
        "borderColor": "#2997FF",
        "borderRadius": 4,
        "borderWidth": 1,
        "marginBottom": 2,
        "marginLeft": 0,
        "marginRight": 0,
        "marginTop": 2,
        "opacity": 1,
        "paddingBottom": 8,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 8,
      }
    }
  >
    <Text
      layout="block"
      selected={true}
      size="sm"
      style={
        Array [
          Object {
            "color": "#007AFF",
            "fontFamily": "NotoSansKR-Medium",
            "fontSize": 15,
            "lineHeight": 22,
          },
        ]
      }
      value={null}
    >
      Block small label selected
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#FFFFFF",
        "borderColor": "#D9D9D9",
        "borderRadius": 4,
        "borderWidth": 1,
        "marginBottom": 2,
        "marginLeft": 0,
        "marginRight": 0,
        "marginTop": 2,
        "opacity": 1,
        "paddingBottom": 8,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 8,
      }
    }
  >
    <Text
      layout="block"
      selected={false}
      size="sm"
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontFamily": "NotoSansKR-Medium",
            "fontSize": 15,
            "lineHeight": 22,
          },
        ]
      }
      value={null}
    >
      Block small label unselected
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#F5F5F5",
        "borderColor": "#D9D9D9",
        "borderRadius": 4,
        "borderWidth": 1,
        "marginBottom": 2,
        "marginLeft": 0,
        "marginRight": 0,
        "marginTop": 2,
        "opacity": 1,
        "paddingBottom": 8,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 8,
      }
    }
  >
    <Text
      disabled={true}
      layout="block"
      selected={true}
      size="sm"
      style={
        Array [
          Object {
            "color": "#8C8C8C",
            "fontFamily": "NotoSansKR-Medium",
            "fontSize": 15,
            "lineHeight": 22,
          },
        ]
      }
      value={null}
    >
      Block small label disabled
    </Text>
  </View>
</View>
`;

exports[`Storyshots Atoms/SelectOption Block(Sublabel) 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#E6F6FF",
        "borderColor": "#2997FF",
        "borderRadius": 4,
        "borderWidth": 1,
        "marginBottom": 2,
        "marginLeft": 0,
        "marginRight": 0,
        "marginTop": 2,
        "opacity": 1,
        "paddingBottom": 12,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 12,
      }
    }
  >
    <Text
      layout="block"
      selected={true}
      style={
        Array [
          Object {
            "color": "#007AFF",
            "fontFamily": "NotoSansKR-Medium",
            "fontSize": 18,
            "lineHeight": 26,
          },
        ]
      }
      value={null}
    >
      Block label selected
    </Text>
    <Text
      layout="block"
      selected={true}
      style={
        Array [
          Object {
            "color": "#007AFF",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 13,
            "lineHeight": 19,
          },
        ]
      }
      value={null}
    >
      Block sublabel selected
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#FFFFFF",
        "borderColor": "#D9D9D9",
        "borderRadius": 4,
        "borderWidth": 1,
        "marginBottom": 2,
        "marginLeft": 0,
        "marginRight": 0,
        "marginTop": 2,
        "opacity": 1,
        "paddingBottom": 12,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 12,
      }
    }
  >
    <Text
      layout="block"
      selected={false}
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontFamily": "NotoSansKR-Medium",
            "fontSize": 18,
            "lineHeight": 26,
          },
        ]
      }
      value={null}
    >
      Block label unselected
    </Text>
    <Text
      layout="block"
      selected={false}
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 13,
            "lineHeight": 19,
          },
        ]
      }
      value={null}
    >
      Block sublabel unselected
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#F5F5F5",
        "borderColor": "#D9D9D9",
        "borderRadius": 4,
        "borderWidth": 1,
        "marginBottom": 2,
        "marginLeft": 0,
        "marginRight": 0,
        "marginTop": 2,
        "opacity": 1,
        "paddingBottom": 12,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 12,
      }
    }
  >
    <Text
      disabled={true}
      layout="block"
      selected={true}
      style={
        Array [
          Object {
            "color": "#8C8C8C",
            "fontFamily": "NotoSansKR-Medium",
            "fontSize": 18,
            "lineHeight": 26,
          },
        ]
      }
      value={null}
    >
      Block label disabled
    </Text>
    <Text
      disabled={true}
      layout="block"
      selected={true}
      style={
        Array [
          Object {
            "color": "#8C8C8C",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 13,
            "lineHeight": 19,
          },
        ]
      }
      value={null}
    >
      Block sublabel disabled
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#E6F6FF",
        "borderColor": "#2997FF",
        "borderRadius": 4,
        "borderWidth": 1,
        "marginBottom": 2,
        "marginLeft": 0,
        "marginRight": 0,
        "marginTop": 2,
        "opacity": 1,
        "paddingBottom": 8,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 8,
      }
    }
  >
    <Text
      layout="block"
      selected={true}
      size="sm"
      style={
        Array [
          Object {
            "color": "#007AFF",
            "fontFamily": "NotoSansKR-Medium",
            "fontSize": 15,
            "lineHeight": 22,
          },
        ]
      }
      value={null}
    >
      Block small label selected
    </Text>
    <Text
      layout="block"
      selected={true}
      size="sm"
      style={
        Array [
          Object {
            "color": "#007AFF",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 13,
            "lineHeight": 19,
          },
        ]
      }
      value={null}
    >
      Block small sublabel selected
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#FFFFFF",
        "borderColor": "#D9D9D9",
        "borderRadius": 4,
        "borderWidth": 1,
        "marginBottom": 2,
        "marginLeft": 0,
        "marginRight": 0,
        "marginTop": 2,
        "opacity": 1,
        "paddingBottom": 8,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 8,
      }
    }
  >
    <Text
      layout="block"
      selected={false}
      size="sm"
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontFamily": "NotoSansKR-Medium",
            "fontSize": 15,
            "lineHeight": 22,
          },
        ]
      }
      value={null}
    >
      Block small label unselected
    </Text>
    <Text
      layout="block"
      selected={false}
      size="sm"
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 13,
            "lineHeight": 19,
          },
        ]
      }
      value={null}
    >
      Block small sublabel unselected
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#F5F5F5",
        "borderColor": "#D9D9D9",
        "borderRadius": 4,
        "borderWidth": 1,
        "marginBottom": 2,
        "marginLeft": 0,
        "marginRight": 0,
        "marginTop": 2,
        "opacity": 1,
        "paddingBottom": 8,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 8,
      }
    }
  >
    <Text
      disabled={true}
      layout="block"
      selected={true}
      size="sm"
      style={
        Array [
          Object {
            "color": "#8C8C8C",
            "fontFamily": "NotoSansKR-Medium",
            "fontSize": 15,
            "lineHeight": 22,
          },
        ]
      }
      value={null}
    >
      Block small label disabled
    </Text>
    <Text
      disabled={true}
      layout="block"
      selected={true}
      size="sm"
      style={
        Array [
          Object {
            "color": "#8C8C8C",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 13,
            "lineHeight": 19,
          },
        ]
      }
      value={null}
    >
      Block small sublabel disabled
    </Text>
  </View>
</View>
`;

exports[`Storyshots Atoms/SelectOption Inline 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#E6F6FF",
        "borderColor": "#2997FF",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": 0,
        "marginLeft": 2,
        "marginRight": 2,
        "marginTop": 0,
        "opacity": 1,
        "paddingBottom": 8,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 8,
      }
    }
  >
    <Text
      layout="inline"
      selected={true}
      style={
        Array [
          Object {
            "color": "#007AFF",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 15,
            "lineHeight": 22,
          },
        ]
      }
      value={null}
    >
      Inline label selected
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#FFFFFF",
        "borderColor": "#D9D9D9",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": 0,
        "marginLeft": 2,
        "marginRight": 2,
        "marginTop": 0,
        "opacity": 1,
        "paddingBottom": 8,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 8,
      }
    }
  >
    <Text
      layout="inline"
      selected={false}
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 15,
            "lineHeight": 22,
          },
        ]
      }
      value={null}
    >
      Inline label unselected
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#F5F5F5",
        "borderColor": "#D9D9D9",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": 0,
        "marginLeft": 2,
        "marginRight": 2,
        "marginTop": 0,
        "opacity": 1,
        "paddingBottom": 8,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 8,
      }
    }
  >
    <Text
      disabled={true}
      layout="inline"
      selected={true}
      style={
        Array [
          Object {
            "color": "#8C8C8C",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 15,
            "lineHeight": 22,
          },
        ]
      }
      value={null}
    >
      Inline label selected
    </Text>
  </View>
</View>
`;

exports[`Storyshots Atoms/SelectOption Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#FFFFFF",
        "borderColor": "#D9D9D9",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": 0,
        "marginLeft": 2,
        "marginRight": 2,
        "marginTop": 0,
        "opacity": 1,
        "paddingBottom": 8,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 8,
      }
    }
  >
    <Text
      disabled={false}
      layout="inline"
      selected={false}
      size="md"
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 15,
            "lineHeight": 22,
          },
        ]
      }
      value={null}
    >
      Label
    </Text>
  </View>
</View>
`;

exports[`Storyshots Atoms/TextInput Multiline 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderColor": "#D9D9D9",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
            "position": "relative",
          },
        ]
      }
    >
      <TextInput
        allowFontScaling={true}
        editable={true}
        onChangeText={[Function]}
        placeholderTextColor="#8C8C8C"
        rejectResponderTermination={true}
        style={
          Array [
            Object {
              "color": "#1F1F1F",
              "fontSize": 15,
              "height": 22,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
            Object {},
          ]
        }
        underlineColorAndroid="transparent"
        value="Single Line"
      />
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
        },
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderColor": "#D9D9D9",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
            "position": "relative",
          },
        ]
      }
    >
      <TextInput
        allowFontScaling={true}
        editable={true}
        multiline={true}
        numberOfLines={3}
        onChangeText={[Function]}
        placeholderTextColor="#8C8C8C"
        rejectResponderTermination={true}
        style={
          Array [
            Object {
              "color": "#1F1F1F",
              "fontSize": 15,
              "height": 66,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlignVertical": "top",
            },
            Object {},
          ]
        }
        underlineColorAndroid="transparent"
        value="Multi Line Long Text Multi Line Long Text Multi Line Long Text Multi Line Long Text Multi Line Long Text "
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/TextInput Placeholder 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
        },
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderColor": "#D9D9D9",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
            "position": "relative",
          },
        ]
      }
    >
      <TextInput
        allowFontScaling={true}
        editable={true}
        onChangeText={[Function]}
        placeholder="Placeholder"
        placeholderTextColor="#8C8C8C"
        rejectResponderTermination={true}
        style={
          Array [
            Object {
              "color": "#1F1F1F",
              "fontSize": 15,
              "height": 22,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
            Object {},
          ]
        }
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/TextInput Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
        },
        Object {},
      ]
    }
  >
    <View
      disabled={false}
      secureTextEntry={false}
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderColor": "#D9D9D9",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
            "position": "relative",
          },
        ]
      }
      suffix={false}
    >
      <TextInput
        allowFontScaling={true}
        disabled={false}
        editable={true}
        multiline={false}
        numberOfLines={3}
        onChangeText={[Function]}
        placeholder="placeholder"
        placeholderTextColor="#8C8C8C"
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "color": "#1F1F1F",
              "fontSize": 15,
              "height": 22,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
            Object {},
          ]
        }
        suffix={false}
        underlineColorAndroid="transparent"
        value="Text Input"
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/TextInput SecureTextEntry 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderColor": "#D9D9D9",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
            "position": "relative",
          },
        ]
      }
    >
      <TextInput
        allowFontScaling={true}
        editable={true}
        onChangeText={[Function]}
        placeholderTextColor="#8C8C8C"
        rejectResponderTermination={true}
        style={
          Array [
            Object {
              "color": "#1F1F1F",
              "fontSize": 15,
              "height": 22,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
            Object {},
          ]
        }
        underlineColorAndroid="transparent"
        value="Example Text"
      />
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      secureTextEntry={true}
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderColor": "#D9D9D9",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
            "position": "relative",
          },
        ]
      }
    >
      <TextInput
        allowFontScaling={true}
        editable={true}
        onChangeText={[Function]}
        placeholderTextColor="#8C8C8C"
        rejectResponderTermination={true}
        secureTextEntry={true}
        style={
          Array [
            Object {
              "color": "#1F1F1F",
              "fontSize": 15,
              "height": 22,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
            Object {},
          ]
        }
        underlineColorAndroid="transparent"
        value="Example Text"
      />
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "opacity": 1,
            "paddingBottom": 4,
            "paddingLeft": 4,
            "paddingRight": 4,
            "paddingTop": 4,
            "position": "absolute",
            "right": 8,
          }
        }
      >
        <Image
          source={
            Object {
              "testUri": "../../../src/assets/icons/eye/eye-opened.png",
            }
          }
          style={
            Array [
              Object {
                "tintColor": "#1F1F1F",
              },
              Object {},
            ]
          }
        />
      </View>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
        },
        Object {},
      ]
    }
  >
    <View
      disabled={true}
      secureTextEntry={true}
      style={
        Array [
          Object {
            "backgroundColor": "#F5F5F5",
            "borderColor": "#D9D9D9",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
            "position": "relative",
          },
        ]
      }
    >
      <TextInput
        allowFontScaling={true}
        disabled={true}
        editable={false}
        onChangeText={[Function]}
        placeholderTextColor="#8C8C8C"
        rejectResponderTermination={true}
        secureTextEntry={true}
        style={
          Array [
            Object {
              "color": "#8C8C8C",
              "fontSize": 15,
              "height": 22,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
            Object {},
          ]
        }
        underlineColorAndroid="transparent"
        value="Example Text"
      />
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "opacity": 1,
            "paddingBottom": 4,
            "paddingLeft": 4,
            "paddingRight": 4,
            "paddingTop": 4,
            "position": "absolute",
            "right": 8,
          }
        }
      >
        <Image
          disabled={true}
          source={
            Object {
              "testUri": "../../../src/assets/icons/eye/eye-opened.png",
            }
          }
          style={
            Array [
              Object {
                "tintColor": "#8C8C8C",
              },
              Object {},
            ]
          }
        />
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/TextInput Suffix 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
        },
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderBottomRightRadius": 0,
            "borderColor": "#D9D9D9",
            "borderRadius": 4,
            "borderTopRightRadius": 0,
            "borderWidth": 1,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
            "position": "relative",
          },
        ]
      }
      suffix={
        <Text>
          Suffix
        </Text>
      }
    >
      <TextInput
        allowFontScaling={true}
        editable={true}
        onChangeText={[Function]}
        placeholderTextColor="#8C8C8C"
        rejectResponderTermination={true}
        style={
          Array [
            Object {
              "color": "#1F1F1F",
              "fontSize": 15,
              "height": 22,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
            Object {},
          ]
        }
        suffix={
          <Text>
            Suffix
          </Text>
        }
        underlineColorAndroid="transparent"
        value="Text Input with Suffix"
      />
    </View>
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderBottomRightRadius": 4,
            "borderColor": "#D9D9D9",
            "borderLeftWidth": 0,
            "borderTopRightRadius": 4,
            "borderWidth": 1,
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 24,
            "paddingRight": 24,
            "paddingTop": 8,
          },
        ]
      }
    >
      <Text>
        Suffix
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/TextInput Type 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
        },
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderColor": "#D9D9D9",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
            "position": "relative",
          },
        ]
      }
      type="default"
    >
      <TextInput
        allowFontScaling={true}
        editable={true}
        onChangeText={[Function]}
        placeholderTextColor="#8C8C8C"
        rejectResponderTermination={true}
        style={
          Array [
            Object {
              "color": "#1F1F1F",
              "fontSize": 15,
              "height": 22,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
            Object {},
          ]
        }
        type="default"
        underlineColorAndroid="transparent"
        value="Default Text Input"
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Typography Bold 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <Text
    bold={true}
    style={
      Array [
        Object {
          "color": "#1F1F1F",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Medium",
          "fontSize": 15,
          "lineHeight": 22,
          "textDecorationColor": "#1F1F1F",
        },
      ]
    }
  >
    Bold Paragraph
  </Text>
  <Text
    style={
      Array [
        Object {
          "color": "#1F1F1F",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Regular",
          "fontSize": 15,
          "lineHeight": 22,
          "textDecorationColor": "#1F1F1F",
        },
      ]
    }
  >
    Normal Paragraph
  </Text>
</View>
`;

exports[`Storyshots Atoms/Typography Color 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <Text
    color="default"
    size={3}
    style={
      Array [
        Object {
          "color": "#000000",
          "fontFamily": "NotoSansKR-Medium",
          "fontSize": 22,
          "lineHeight": 35,
          "marginBottom": 12,
          "textDecorationColor": "#000000",
        },
      ]
    }
  >
    Default Heading
  </Text>
  <Text
    color="primary"
    size={3}
    style={
      Array [
        Object {
          "color": "#007AFF",
          "fontFamily": "NotoSansKR-Medium",
          "fontSize": 22,
          "lineHeight": 35,
          "marginBottom": 12,
          "textDecorationColor": "#007AFF",
        },
      ]
    }
  >
    Primary Heading
  </Text>
  <Text
    color="error"
    size={3}
    style={
      Array [
        Object {
          "color": "#EB5757",
          "fontFamily": "NotoSansKR-Medium",
          "fontSize": 22,
          "lineHeight": 35,
          "marginBottom": 12,
          "textDecorationColor": "#EB5757",
        },
      ]
    }
  >
    Error Heading
  </Text>
  <Text
    color="muted"
    size={3}
    style={
      Array [
        Object {
          "color": "#8C8C8C",
          "fontFamily": "NotoSansKR-Medium",
          "fontSize": 22,
          "lineHeight": 35,
          "marginBottom": 12,
          "textDecorationColor": "#8C8C8C",
        },
      ]
    }
  >
    Muted Heading
  </Text>
  <Text
    color="default"
    style={
      Array [
        Object {
          "color": "#1F1F1F",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Regular",
          "fontSize": 15,
          "lineHeight": 22,
          "textDecorationColor": "#1F1F1F",
        },
      ]
    }
  >
    Default Paragraph
  </Text>
  <Text
    color="primary"
    style={
      Array [
        Object {
          "color": "#007AFF",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Regular",
          "fontSize": 15,
          "lineHeight": 22,
          "textDecorationColor": "#007AFF",
        },
      ]
    }
  >
    Primary Paragraph
  </Text>
  <Text
    color="error"
    style={
      Array [
        Object {
          "color": "#EB5757",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Regular",
          "fontSize": 15,
          "lineHeight": 22,
          "textDecorationColor": "#EB5757",
        },
      ]
    }
  >
    Error Paragraph
  </Text>
  <Text
    color="muted"
    style={
      Array [
        Object {
          "color": "#8C8C8C",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Regular",
          "fontSize": 15,
          "lineHeight": 22,
          "textDecorationColor": "#8C8C8C",
        },
      ]
    }
  >
    Muted Paragraph
  </Text>
</View>
`;

exports[`Storyshots Atoms/Typography Link 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <Text
    color="default"
    style={
      Array [
        Object {
          "color": "#1F1F1F",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Regular",
          "fontSize": 15,
          "lineHeight": 22,
          "textDecorationColor": "#1F1F1F",
          "textDecorationLine": "underline",
        },
      ]
    }
    underlined={true}
  >
    Default Link
  </Text>
  <Text
    color="primary"
    style={
      Array [
        Object {
          "color": "#007AFF",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Regular",
          "fontSize": 15,
          "lineHeight": 22,
          "textDecorationColor": "#007AFF",
          "textDecorationLine": "underline",
        },
      ]
    }
    underlined={true}
  >
    Primary Link
  </Text>
  <Text
    color="muted"
    style={
      Array [
        Object {
          "color": "#8C8C8C",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Regular",
          "fontSize": 15,
          "lineHeight": 22,
          "textDecorationColor": "#8C8C8C",
          "textDecorationLine": "underline",
        },
      ]
    }
    underlined={true}
  >
    Muted Link
  </Text>
</View>
`;

exports[`Storyshots Atoms/Typography Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <Text
    color="default"
    size={1}
    style={
      Array [
        Object {
          "color": "#000000",
          "fontFamily": "NotoSansKR-Bold",
          "fontSize": 34,
          "lineHeight": 55,
          "marginBottom": 16,
          "textDecorationColor": "#000000",
        },
      ]
    }
  >
    Heading
  </Text>
</View>
`;

exports[`Storyshots Atoms/Typography Selectable 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <Text
    selectable={true}
    style={
      Array [
        Object {
          "color": "#1F1F1F",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Regular",
          "fontSize": 15,
          "lineHeight": 22,
          "textDecorationColor": "#1F1F1F",
        },
      ]
    }
  >
    Selectable Paragraph
  </Text>
  <Text
    style={
      Array [
        Object {
          "color": "#1F1F1F",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Regular",
          "fontSize": 15,
          "lineHeight": 22,
          "textDecorationColor": "#1F1F1F",
        },
      ]
    }
  >
    Not Selectable Paragraph
  </Text>
</View>
`;

exports[`Storyshots Atoms/Typography Type 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <Text
    size={1}
    style={
      Array [
        Object {
          "color": "#000000",
          "fontFamily": "NotoSansKR-Bold",
          "fontSize": 34,
          "lineHeight": 55,
          "marginBottom": 16,
          "textDecorationColor": "#000000",
        },
      ]
    }
  >
    Heading1
  </Text>
  <Text
    size={2}
    style={
      Array [
        Object {
          "color": "#000000",
          "fontFamily": "NotoSansKR-Bold",
          "fontSize": 28,
          "lineHeight": 40,
          "marginBottom": 12,
          "textDecorationColor": "#000000",
        },
      ]
    }
  >
    Heading2
  </Text>
  <Text
    size={3}
    style={
      Array [
        Object {
          "color": "#000000",
          "fontFamily": "NotoSansKR-Medium",
          "fontSize": 22,
          "lineHeight": 35,
          "marginBottom": 12,
          "textDecorationColor": "#000000",
        },
      ]
    }
  >
    Heading3
  </Text>
  <Text
    size={4}
    style={
      Array [
        Object {
          "color": "#000000",
          "fontFamily": "NotoSansKR-Medium",
          "fontSize": 20,
          "lineHeight": 29,
          "textDecorationColor": "#000000",
        },
      ]
    }
  >
    Heading4
  </Text>
  <Text
    size={5}
    style={
      Array [
        Object {
          "color": "#000000",
          "fontFamily": "NotoSansKR-Medium",
          "fontSize": 18,
          "lineHeight": 26,
          "textDecorationColor": "#000000",
        },
      ]
    }
  >
    Heading5
  </Text>
  <Text
    size="lg"
    style={
      Array [
        Object {
          "color": "#1F1F1F",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Regular",
          "fontSize": 18,
          "lineHeight": 26,
          "textDecorationColor": "#1F1F1F",
        },
      ]
    }
  >
    Paragraph-lg
  </Text>
  <Text
    size="md"
    style={
      Array [
        Object {
          "color": "#1F1F1F",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Regular",
          "fontSize": 15,
          "lineHeight": 22,
          "textDecorationColor": "#1F1F1F",
        },
      ]
    }
  >
    Paragraph-md
  </Text>
  <Text
    size="sm"
    style={
      Array [
        Object {
          "color": "#1F1F1F",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Regular",
          "fontSize": 13,
          "lineHeight": 19,
          "textDecorationColor": "#1F1F1F",
        },
      ]
    }
  >
    Paragraph-s
  </Text>
  <Text
    size="xs"
    style={
      Array [
        Object {
          "color": "#1F1F1F",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Regular",
          "fontSize": 11,
          "lineHeight": 16,
          "textDecorationColor": "#1F1F1F",
        },
      ]
    }
  >
    Paragraph-xs
  </Text>
</View>
`;
