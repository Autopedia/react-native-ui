// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Atoms/Button Color/Solid 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#EEF2F6",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Default
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#007AFF",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#FFFFFF"
      >
        Primary
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#48CF7C",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#FFFFFF"
      >
        Success
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#FA4339",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#FFFFFF"
      >
        Error
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#FFFFFF",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#000000"
      >
        White
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#000000",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#FFFFFF"
      >
        Black
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#123456",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#FFFFFF"
      >
        Custom Color #123456
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Button Color/Text 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": undefined,
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Default
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": undefined,
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#007AFF"
        textDisabledColor="#0056B4"
      >
        Primary
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": undefined,
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#48CF7C",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#48CF7C"
        textDisabledColor="#0FA364"
      >
        Success
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": undefined,
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#FA4339",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#FA4339"
        textDisabledColor="#C5372F"
      >
        Error
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": undefined,
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#CA5CFE",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#CA5CFE"
        textDisabledColor="#953BC0"
      >
        Lavender
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": undefined,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#123456",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#123456"
        textDisabledColor="rgba(18, 52, 86, 0.3)"
      >
        Custom Color #123456
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Button CustomContainerStyle 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#FFFFFF",
        },
        Object {
          "marginBottom": 20,
          "shadowColor": "#000000",
          "shadowOffset": Object {
            "height": 5,
            "width": 0,
          },
          "shadowOpacity": 0.1,
          "shadowRadius": 10,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Image
        color={false}
        size="sm"
        source={
          Object {
            "testUri": "../../../src/assets/icons/google/google.png",
          }
        }
        style={
          Array [
            Object {
              "height": 20,
              "width": 20,
            },
            Object {
              "marginRight": 4,
            },
          ]
        }
      />
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#000000"
      >
        구글로 시작하기
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "khaki",
        },
        Object {
          "marginBottom": 20,
          "shadowColor": "#000000",
          "shadowOffset": Object {
            "height": 5,
            "width": 0,
          },
          "shadowOpacity": 0.1,
          "shadowRadius": 10,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Image
        color={false}
        size="sm"
        source={
          Object {
            "testUri": "../../../src/assets/icons/kakao/kakao.png",
          }
        }
        style={
          Array [
            Object {
              "height": 20,
              "width": 20,
            },
            Object {
              "marginRight": 4,
            },
          ]
        }
      />
      <Text
        color="#000000"
        fontWeight="medium"
        size={1}
        style={
          Array [
            Object {
              "color": "#000000",
              "flexShrink": 1,
              "flexWrap": "wrap",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
            },
          ]
        }
      >
        카카오톡으로 시작하기
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Button Disabled 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#007AFF",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#FFFFFF"
      >
        Default
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#BDDBFF",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        disabled={true}
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#FFFFFF"
      >
        Default Disabled
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    inline={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
        },
        Object {
          "backgroundColor": "#EEF2F6",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Inline
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    inline={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
        },
        Object {
          "backgroundColor": "#F8FAFB",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        disabled={true}
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#C6CACF",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Inline Disabled
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": undefined,
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Text
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": undefined,
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        disabled={true}
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#C6CACF",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Text Disabled
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Button Icon 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#007AFF",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Image
        color="#FFFFFF"
        size="sm"
        source={
          Object {
            "testUri": "../../../src/assets/icons/tire/tire.png",
          }
        }
        style={
          Array [
            Object {
              "height": 20,
              "tintColor": "#FFFFFF",
              "width": 20,
            },
            Object {
              "marginRight": 4,
            },
          ]
        }
      />
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#FFFFFF"
      >
        Icon Left with Primary solid color
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#FFFFFF",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#000000"
      >
        Icon Right with White solid color
      </Text>
      <Image
        color="#000000"
        size="sm"
        source={
          Object {
            "testUri": "../../../src/assets/icons/tire/tire.png",
          }
        }
        style={
          Array [
            Object {
              "height": 20,
              "tintColor": "#000000",
              "width": 20,
            },
            Object {
              "marginLeft": 4,
            },
          ]
        }
      />
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#EEF2F6",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Image
        color="#5F656A"
        size="sm"
        source={
          Object {
            "testUri": "../../../src/assets/icons/tire/tire.png",
          }
        }
        style={
          Array [
            Object {
              "height": 20,
              "tintColor": "#5F656A",
              "width": 20,
            },
            Object {
              "marginRight": 4,
            },
          ]
        }
      />
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Icon Left
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#EEF2F6",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Icon Right
      </Text>
      <Image
        color="#5F656A"
        size="sm"
        source={
          Object {
            "testUri": "../../../src/assets/icons/tire/tire.png",
          }
        }
        style={
          Array [
            Object {
              "height": 20,
              "tintColor": "#5F656A",
              "width": 20,
            },
            Object {
              "marginLeft": 4,
            },
          ]
        }
      />
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    inline={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
        },
        Object {
          "backgroundColor": "#EEF2F6",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Image
        color="#5F656A"
        size="sm"
        source={
          Object {
            "testUri": "../../../src/assets/icons/tire/tire.png",
          }
        }
        style={
          Array [
            Object {
              "height": 20,
              "tintColor": "#5F656A",
              "width": 20,
            },
            Object {
              "marginRight": 4,
            },
          ]
        }
      />
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Inline Icon Left
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    inline={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
        },
        Object {
          "backgroundColor": "#EEF2F6",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Inline Icon Right
      </Text>
      <Image
        color="#5F656A"
        size="sm"
        source={
          Object {
            "testUri": "../../../src/assets/icons/tire/tire.png",
          }
        }
        style={
          Array [
            Object {
              "height": 20,
              "tintColor": "#5F656A",
              "width": 20,
            },
            Object {
              "marginLeft": 4,
            },
          ]
        }
      />
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": undefined,
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Image
        color="#5F656A"
        size="sm"
        source={
          Object {
            "testUri": "../../../src/assets/icons/tire/tire.png",
          }
        }
        style={
          Array [
            Object {
              "height": 20,
              "tintColor": "#5F656A",
              "width": 20,
            },
            Object {
              "marginRight": 4,
            },
          ]
        }
      />
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Text Icon Left
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": undefined,
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Text Icon Right
      </Text>
      <Image
        color="#5F656A"
        size="sm"
        source={
          Object {
            "testUri": "../../../src/assets/icons/tire/tire.png",
          }
        }
        style={
          Array [
            Object {
              "height": 20,
              "tintColor": "#5F656A",
              "width": 20,
            },
            Object {
              "marginLeft": 4,
            },
          ]
        }
      />
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    size="sm"
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 6,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 6,
          "width": "100%",
        },
        Object {
          "backgroundColor": undefined,
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Image
        color="#EB694C"
        size="sm"
        source={
          Object {
            "testUri": "../../../src/assets/icons/tire/tire.png",
          }
        }
        style={
          Array [
            Object {
              "height": 20,
              "tintColor": "#EB694C",
              "width": 20,
            },
            Object {
              "marginRight": 4,
            },
          ]
        }
      />
      <Text
        includeFontPadding={false}
        pressed={false}
        size="sm"
        style={
          Array [
            Object {
              "color": "#EB694C",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
              "lineHeight": 22,
              "textAlign": "center",
            },
          ]
        }
        textColor="#EB694C"
        textDisabledColor="#CA4E33"
      >
        Text Icon Left
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    size="sm"
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 6,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 6,
          "width": "100%",
        },
        Object {
          "backgroundColor": undefined,
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        size="sm"
        style={
          Array [
            Object {
              "color": "#EB694C",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
              "lineHeight": 22,
              "textAlign": "center",
            },
          ]
        }
        textColor="#EB694C"
        textDisabledColor="#CA4E33"
      >
        Text Icon Right
      </Text>
      <Image
        color="#EB694C"
        size="sm"
        source={
          Object {
            "testUri": "../../../src/assets/icons/tire/tire.png",
          }
        }
        style={
          Array [
            Object {
              "height": 20,
              "tintColor": "#EB694C",
              "width": 20,
            },
            Object {
              "marginLeft": 4,
            },
          ]
        }
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Button Inline 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#EEF2F6",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Block
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    inline={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
        },
        Object {
          "backgroundColor": "#EEF2F6",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Inline
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Button Loading 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#007AFF",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#FFFFFF"
      >
        Default
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#007AFF",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "height": 24,
            },
          ]
        }
      >
        <View
          color="#FFFFFF"
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderRadius": 3,
              "height": 6,
              "marginBottom": 0,
              "marginLeft": 3,
              "marginRight": 3,
              "marginTop": 0,
              "opacity": 1,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
              "width": 6,
            }
          }
        />
        <View
          color="#FFFFFF"
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderRadius": 3,
              "height": 6,
              "marginBottom": 0,
              "marginLeft": 3,
              "marginRight": 3,
              "marginTop": 0,
              "opacity": 1,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
              "width": 6,
            }
          }
        />
        <View
          color="#FFFFFF"
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderRadius": 3,
              "height": 6,
              "marginBottom": 0,
              "marginLeft": 3,
              "marginRight": 3,
              "marginTop": 0,
              "opacity": 1,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
              "width": 6,
            }
          }
        />
      </View>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#EEF2F6",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Default
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#EEF2F6",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "height": 24,
            },
          ]
        }
      >
        <View
          color="#5F656A"
          style={
            Object {
              "backgroundColor": "#5F656A",
              "borderRadius": 3,
              "height": 6,
              "marginBottom": 0,
              "marginLeft": 3,
              "marginRight": 3,
              "marginTop": 0,
              "opacity": 1,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
              "width": 6,
            }
          }
        />
        <View
          color="#5F656A"
          style={
            Object {
              "backgroundColor": "#5F656A",
              "borderRadius": 3,
              "height": 6,
              "marginBottom": 0,
              "marginLeft": 3,
              "marginRight": 3,
              "marginTop": 0,
              "opacity": 1,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
              "width": 6,
            }
          }
        />
        <View
          color="#5F656A"
          style={
            Object {
              "backgroundColor": "#5F656A",
              "borderRadius": 3,
              "height": 6,
              "marginBottom": 0,
              "marginLeft": 3,
              "marginRight": 3,
              "marginTop": 0,
              "opacity": 1,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
              "width": 6,
            }
          }
        />
      </View>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    inline={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
        },
        Object {
          "backgroundColor": "#EEF2F6",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Default Inline
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    inline={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
        },
        Object {
          "backgroundColor": "#EEF2F6",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "height": 24,
            },
          ]
        }
      >
        <View
          color="#5F656A"
          style={
            Object {
              "backgroundColor": "#5F656A",
              "borderRadius": 3,
              "height": 6,
              "marginBottom": 0,
              "marginLeft": 3,
              "marginRight": 3,
              "marginTop": 0,
              "opacity": 1,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
              "width": 6,
            }
          }
        />
        <View
          color="#5F656A"
          style={
            Object {
              "backgroundColor": "#5F656A",
              "borderRadius": 3,
              "height": 6,
              "marginBottom": 0,
              "marginLeft": 3,
              "marginRight": 3,
              "marginTop": 0,
              "opacity": 1,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
              "width": 6,
            }
          }
        />
        <View
          color="#5F656A"
          style={
            Object {
              "backgroundColor": "#5F656A",
              "borderRadius": 3,
              "height": 6,
              "marginBottom": 0,
              "marginLeft": 3,
              "marginRight": 3,
              "marginTop": 0,
              "opacity": 1,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
              "width": 6,
            }
          }
        />
      </View>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    inline={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    size="sm"
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 6,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 6,
        },
        Object {
          "backgroundColor": "#EEF2F6",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        size="sm"
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
              "lineHeight": 22,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Inline size small
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    inline={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    size="sm"
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 6,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 6,
        },
        Object {
          "backgroundColor": "#EEF2F6",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "height": 24,
            },
          ]
        }
      >
        <View
          color="#5F656A"
          style={
            Object {
              "backgroundColor": "#5F656A",
              "borderRadius": 3,
              "height": 6,
              "marginBottom": 0,
              "marginLeft": 3,
              "marginRight": 3,
              "marginTop": 0,
              "opacity": 1,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
              "width": 6,
            }
          }
        />
        <View
          color="#5F656A"
          style={
            Object {
              "backgroundColor": "#5F656A",
              "borderRadius": 3,
              "height": 6,
              "marginBottom": 0,
              "marginLeft": 3,
              "marginRight": 3,
              "marginTop": 0,
              "opacity": 1,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
              "width": 6,
            }
          }
        />
        <View
          color="#5F656A"
          style={
            Object {
              "backgroundColor": "#5F656A",
              "borderRadius": 3,
              "height": 6,
              "marginBottom": 0,
              "marginLeft": 3,
              "marginRight": 3,
              "marginTop": 0,
              "opacity": 1,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
              "width": 6,
            }
          }
        />
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Button Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    inline={false}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    size="lg"
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#007AFF",
        },
        undefined,
      ]
    }
    tile={false}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        disabled={false}
        includeFontPadding={false}
        pressed={false}
        size="lg"
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#FFFFFF"
      >
        Button
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Button Size 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    size="lg"
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#EEF2F6",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        size="lg"
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Large
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    size="md"
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 10,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 10,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#EEF2F6",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        size="md"
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Medium
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    size="sm"
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 6,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 6,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#EEF2F6",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        size="sm"
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
              "lineHeight": 22,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Small
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    size="lg"
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": undefined,
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        size="lg"
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Text Large
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    size="md"
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 10,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 10,
          "width": "100%",
        },
        Object {
          "backgroundColor": undefined,
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        size="md"
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Text Large
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    size="sm"
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 6,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 6,
          "width": "100%",
        },
        Object {
          "backgroundColor": undefined,
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        size="sm"
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
              "lineHeight": 22,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Text Large
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Button Tile 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#EEF2F6",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Default
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#EEF2F6",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
    tile={true}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Tile
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Button Type 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#EEF2F6",
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Solid
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": undefined,
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Text
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Checkbox Default 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "opacity": 1,
      }
    }
  >
    <Image
      source={
        Object {
          "testUri": "../../../src/assets/icons/checkbox/checkbox-checked.png",
        }
      }
      style={
        Array [
          Object {
            "height": 24,
            "width": 24,
          },
          Object {
            "marginRight": 4,
          },
        ]
      }
    />
    <Text>
      defaultValue : true
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "opacity": 1,
      }
    }
  >
    <Image
      source={
        Object {
          "testUri": "../../../src/assets/icons/checkbox/checkbox-unchecked.png",
        }
      }
      style={
        Array [
          Object {
            "height": 24,
            "width": 24,
          },
          Object {
            "marginRight": 4,
          },
        ]
      }
    />
    <Text>
      defaultValue : false
    </Text>
  </View>
</View>
`;

exports[`Storyshots Atoms/Checkbox Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "opacity": 1,
      }
    }
  >
    <Image
      source={
        Object {
          "testUri": "../../../src/assets/icons/checkbox/checkbox-unchecked.png",
        }
      }
      style={
        Array [
          Object {
            "height": 24,
            "width": 24,
          },
          Object {
            "marginRight": 4,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`Storyshots Atoms/Divider Margin 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    margin={0}
    style={
      Array [
        Object {
          "borderBottomColor": "#F5F5F5",
          "borderBottomWidth": 1,
          "height": 0,
          "marginBottom": 0,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 0,
          "width": "100%",
        },
      ]
    }
  />
  <View
    style={
      Array [
        Object {
          "borderBottomColor": "#F5F5F5",
          "borderBottomWidth": 1,
          "height": 0,
          "marginBottom": 16,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 16,
          "width": "100%",
        },
      ]
    }
  />
</View>
`;

exports[`Storyshots Atoms/Divider Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    margin={16}
    style={
      Array [
        Object {
          "borderBottomColor": "#F5F5F5",
          "borderBottomWidth": 1,
          "height": 0,
          "marginBottom": 16,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 16,
          "width": "100%",
        },
      ]
    }
  />
</View>
`;

exports[`Storyshots Atoms/FormDivider Invisible 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "borderBottomColor": "#D9D9D9",
          "borderBottomWidth": 1,
          "height": 0,
          "marginBottom": 8,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 8,
          "width": "100%",
        },
      ]
    }
  />
  <View
    invisible={true}
    style={
      Array [
        Object {
          "height": 0,
          "marginBottom": 8,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 8,
          "width": "100%",
        },
      ]
    }
  />
</View>
`;

exports[`Storyshots Atoms/FormDivider Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    invisible={false}
    style={
      Array [
        Object {
          "borderBottomColor": "#D9D9D9",
          "borderBottomWidth": 1,
          "height": 0,
          "marginBottom": 8,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 8,
          "width": "100%",
        },
      ]
    }
  />
</View>
`;

exports[`Storyshots Atoms/FormLabel Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "marginBottom": 3,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 14,
          },
        ]
      }
    >
      FormLabel
    </Text>
  </View>
</View>
`;

exports[`Storyshots Atoms/FormLabel Required 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "marginBottom": 3,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 14,
          },
        ]
      }
    >
      Default FormLabel
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "marginBottom": 3,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 14,
          },
        ]
      }
    >
      Required FormLabel
    </Text>
    <Text
      style={
        Array [
          Object {
            "color": "#FA4339",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 14,
          },
        ]
      }
    >
      *
    </Text>
  </View>
</View>
`;

exports[`Storyshots Atoms/Icon Color 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <Image
    color="#007AFF"
    source={
      Object {
        "testUri": "../../../src/assets/icons/camera/camera.png",
      }
    }
    style={
      Array [
        Object {
          "height": 24,
          "tintColor": "#007AFF",
          "width": 24,
        },
        Object {
          "backgroundColor": "#E3E3E3",
        },
      ]
    }
  />
  <Image
    color="#48CF7C"
    source={
      Object {
        "testUri": "../../../src/assets/icons/camera/camera.png",
      }
    }
    style={
      Array [
        Object {
          "height": 24,
          "tintColor": "#48CF7C",
          "width": 24,
        },
        Object {
          "backgroundColor": "#E3E3E3",
        },
      ]
    }
  />
  <Image
    color="#FA4339"
    source={
      Object {
        "testUri": "../../../src/assets/icons/camera/camera.png",
      }
    }
    style={
      Array [
        Object {
          "height": 24,
          "tintColor": "#FA4339",
          "width": 24,
        },
        Object {
          "backgroundColor": "#E3E3E3",
        },
      ]
    }
  />
  <Image
    color="black"
    source={
      Object {
        "testUri": "../../../src/assets/icons/camera/camera.png",
      }
    }
    style={
      Array [
        Object {
          "height": 24,
          "tintColor": "black",
          "width": 24,
        },
        Object {
          "backgroundColor": "#E3E3E3",
        },
      ]
    }
  />
  <Image
    color="white"
    source={
      Object {
        "testUri": "../../../src/assets/icons/camera/camera.png",
      }
    }
    style={
      Array [
        Object {
          "height": 24,
          "tintColor": "white",
          "width": 24,
        },
        Object {
          "backgroundColor": "#E3E3E3",
        },
      ]
    }
  />
</View>
`;

exports[`Storyshots Atoms/Icon CustomStyle 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <Image
    color="#007AFF"
    source={
      Object {
        "testUri": "../../../src/assets/icons/camera/camera.png",
      }
    }
    style={
      Array [
        Object {
          "height": 24,
          "tintColor": "#007AFF",
          "width": 24,
        },
        Object {
          "backgroundColor": "#E3E3E3",
          "height": 40,
          "marginBottom": 10,
          "width": 40,
        },
      ]
    }
  />
  <Image
    color="#007AFF"
    source={
      Object {
        "testUri": "../../../src/assets/icons/tire/tire.png",
      }
    }
    style={
      Array [
        Object {
          "height": 24,
          "tintColor": "#007AFF",
          "width": 24,
        },
        Object {
          "backgroundColor": "#E3E3E3",
          "height": 40,
          "marginRight": -20,
          "width": 80,
        },
      ]
    }
  />
</View>
`;

exports[`Storyshots Atoms/Icon Disabled 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": -4,
        "marginLeft": -4,
        "marginRight": -4,
        "marginTop": -4,
        "opacity": 1,
        "paddingBottom": 4,
        "paddingLeft": 4,
        "paddingRight": 4,
        "paddingTop": 4,
      }
    }
  >
    <Image
      color="#007AFF"
      disabled={true}
      source={
        Object {
          "testUri": "../../../src/assets/icons/camera/camera.png",
        }
      }
      style={
        Array [
          Object {
            "height": 24,
            "opacity": 0.5,
            "tintColor": "#007AFF",
            "width": 24,
          },
          Object {
            "backgroundColor": "#E3E3E3",
          },
        ]
      }
    />
  </View>
  <View
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": -4,
        "marginLeft": -4,
        "marginRight": -4,
        "marginTop": -4,
        "opacity": 1,
        "paddingBottom": 4,
        "paddingLeft": 4,
        "paddingRight": 4,
        "paddingTop": 4,
      }
    }
  >
    <Image
      color="#48CF7C"
      disabled={true}
      source={
        Object {
          "testUri": "../../../src/assets/icons/camera/camera.png",
        }
      }
      style={
        Array [
          Object {
            "height": 24,
            "opacity": 0.5,
            "tintColor": "#48CF7C",
            "width": 24,
          },
          Object {
            "backgroundColor": "#E3E3E3",
          },
        ]
      }
    />
  </View>
  <View
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": -4,
        "marginLeft": -4,
        "marginRight": -4,
        "marginTop": -4,
        "opacity": 1,
        "paddingBottom": 4,
        "paddingLeft": 4,
        "paddingRight": 4,
        "paddingTop": 4,
      }
    }
  >
    <Image
      color="#FA4339"
      disabled={true}
      source={
        Object {
          "testUri": "../../../src/assets/icons/camera/camera.png",
        }
      }
      style={
        Array [
          Object {
            "height": 24,
            "opacity": 0.5,
            "tintColor": "#FA4339",
            "width": 24,
          },
          Object {
            "backgroundColor": "#E3E3E3",
          },
        ]
      }
    />
  </View>
  <View
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": -4,
        "marginLeft": -4,
        "marginRight": -4,
        "marginTop": -4,
        "opacity": 1,
        "paddingBottom": 4,
        "paddingLeft": 4,
        "paddingRight": 4,
        "paddingTop": 4,
      }
    }
  >
    <Image
      color="black"
      disabled={true}
      source={
        Object {
          "testUri": "../../../src/assets/icons/camera/camera.png",
        }
      }
      style={
        Array [
          Object {
            "height": 24,
            "opacity": 0.5,
            "tintColor": "black",
            "width": 24,
          },
          Object {
            "backgroundColor": "#E3E3E3",
          },
        ]
      }
    />
  </View>
  <View
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": -4,
        "marginLeft": -4,
        "marginRight": -4,
        "marginTop": -4,
        "opacity": 1,
        "paddingBottom": 4,
        "paddingLeft": 4,
        "paddingRight": 4,
        "paddingTop": 4,
      }
    }
  >
    <Image
      color="white"
      disabled={true}
      source={
        Object {
          "testUri": "../../../src/assets/icons/camera/camera.png",
        }
      }
      style={
        Array [
          Object {
            "height": 24,
            "opacity": 0.5,
            "tintColor": "white",
            "width": 24,
          },
          Object {
            "backgroundColor": "#E3E3E3",
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`Storyshots Atoms/Icon Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": -4,
        "marginLeft": -4,
        "marginRight": -4,
        "marginTop": -4,
        "opacity": 1,
        "paddingBottom": 4,
        "paddingLeft": 4,
        "paddingRight": 4,
        "paddingTop": 4,
      }
    }
  >
    <Image
      color="#007AFF"
      disabled={false}
      size="md"
      source={
        Object {
          "testUri": "../../../src/assets/icons/camera/camera.png",
        }
      }
      style={
        Array [
          Object {
            "height": 24,
            "tintColor": "#007AFF",
            "width": 24,
          },
          Object {
            "backgroundColor": "#E3E3E3",
          },
        ]
      }
    />
  </View>
  <Text>
    backgroundColor is set to grey for convienience.
  </Text>
</View>
`;

exports[`Storyshots Atoms/Icon Size 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <Image
    color="#007AFF"
    size="lg"
    source={
      Object {
        "testUri": "../../../src/assets/icons/camera/camera.png",
      }
    }
    style={
      Array [
        Object {
          "height": 32,
          "tintColor": "#007AFF",
          "width": 32,
        },
        Object {
          "backgroundColor": "#E3E3E3",
        },
      ]
    }
  />
  <Image
    color="#48CF7C"
    size="md"
    source={
      Object {
        "testUri": "../../../src/assets/icons/camera/camera.png",
      }
    }
    style={
      Array [
        Object {
          "height": 24,
          "tintColor": "#48CF7C",
          "width": 24,
        },
        Object {
          "backgroundColor": "#E3E3E3",
        },
      ]
    }
  />
  <Image
    color="#FA4339"
    size="sm"
    source={
      Object {
        "testUri": "../../../src/assets/icons/camera/camera.png",
      }
    }
    style={
      Array [
        Object {
          "height": 20,
          "tintColor": "#FA4339",
          "width": 20,
        },
        Object {
          "backgroundColor": "#E3E3E3",
        },
      ]
    }
  />
  <Image
    color="#000000"
    size="xs"
    source={
      Object {
        "testUri": "../../../src/assets/icons/camera/camera.png",
      }
    }
    style={
      Array [
        Object {
          "height": 16,
          "tintColor": "#000000",
          "width": 16,
        },
        Object {
          "backgroundColor": "#E3E3E3",
        },
      ]
    }
  />
</View>
`;

exports[`Storyshots Atoms/Icon Touchable 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <Text>
    With onPress Icon
  </Text>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": -4,
        "marginLeft": -4,
        "marginRight": -4,
        "marginTop": -4,
        "opacity": 1,
        "paddingBottom": 4,
        "paddingLeft": 4,
        "paddingRight": 4,
        "paddingTop": 4,
      }
    }
  >
    <Image
      color="#007AFF"
      source={
        Object {
          "testUri": "../../../src/assets/icons/camera/camera.png",
        }
      }
      style={
        Array [
          Object {
            "height": 24,
            "tintColor": "#007AFF",
            "width": 24,
          },
          Object {
            "backgroundColor": "#E3E3E3",
          },
        ]
      }
    />
  </View>
  <Text>
    Without onPress
  </Text>
  <Image
    color="#007AFF"
    source={
      Object {
        "testUri": "../../../src/assets/icons/camera/camera.png",
      }
    }
    style={
      Array [
        Object {
          "height": 24,
          "tintColor": "#007AFF",
          "width": 24,
        },
        Object {
          "backgroundColor": "#E3E3E3",
        },
      ]
    }
  />
</View>
`;

exports[`Storyshots Atoms/LoadingDots Color 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#ddd",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 24,
          },
        ]
      }
    >
      <View
        color="white"
        style={
          Object {
            "backgroundColor": "white",
            "borderRadius": 3,
            "height": 6,
            "marginBottom": 0,
            "marginLeft": 3,
            "marginRight": 3,
            "marginTop": 0,
            "opacity": 1,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
            "width": 6,
          }
        }
      />
      <View
        color="white"
        style={
          Object {
            "backgroundColor": "white",
            "borderRadius": 3,
            "height": 6,
            "marginBottom": 0,
            "marginLeft": 3,
            "marginRight": 3,
            "marginTop": 0,
            "opacity": 1,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
            "width": 6,
          }
        }
      />
      <View
        color="white"
        style={
          Object {
            "backgroundColor": "white",
            "borderRadius": 3,
            "height": 6,
            "marginBottom": 0,
            "marginLeft": 3,
            "marginRight": 3,
            "marginTop": 0,
            "opacity": 1,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
            "width": 6,
          }
        }
      />
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 24,
          },
        ]
      }
    >
      <View
        color="#007AFF"
        style={
          Object {
            "backgroundColor": "#007AFF",
            "borderRadius": 3,
            "height": 6,
            "marginBottom": 0,
            "marginLeft": 3,
            "marginRight": 3,
            "marginTop": 0,
            "opacity": 1,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
            "width": 6,
          }
        }
      />
      <View
        color="#007AFF"
        style={
          Object {
            "backgroundColor": "#007AFF",
            "borderRadius": 3,
            "height": 6,
            "marginBottom": 0,
            "marginLeft": 3,
            "marginRight": 3,
            "marginTop": 0,
            "opacity": 1,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
            "width": 6,
          }
        }
      />
      <View
        color="#007AFF"
        style={
          Object {
            "backgroundColor": "#007AFF",
            "borderRadius": 3,
            "height": 6,
            "marginBottom": 0,
            "marginLeft": 3,
            "marginRight": 3,
            "marginTop": 0,
            "opacity": 1,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
            "width": 6,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/LoadingDots Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#ddd",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 24,
          },
        ]
      }
    >
      <View
        color="#FFFFFF"
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 3,
            "height": 6,
            "marginBottom": 0,
            "marginLeft": 3,
            "marginRight": 3,
            "marginTop": 0,
            "opacity": 1,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
            "width": 6,
          }
        }
      />
      <View
        color="#FFFFFF"
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 3,
            "height": 6,
            "marginBottom": 0,
            "marginLeft": 3,
            "marginRight": 3,
            "marginTop": 0,
            "opacity": 1,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
            "width": 6,
          }
        }
      />
      <View
        color="#FFFFFF"
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 3,
            "height": 6,
            "marginBottom": 0,
            "marginLeft": 3,
            "marginRight": 3,
            "marginTop": 0,
            "opacity": 1,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
            "width": 6,
          }
        }
      />
    </View>
    <Text>
      backgroundColor is set to grey for convienience.
    </Text>
  </View>
</View>
`;

exports[`Storyshots Atoms/LoadingOverlay Default 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "rgba(0, 0, 0, 0)",
          "bottom": 0,
          "justifyContent": "center",
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "zIndex": 9999999,
        },
      ]
    }
  >
    <ActivityIndicator
      animating={true}
      color="#007AFF"
      hidesWhenStopped={true}
      size="small"
    />
  </View>
</View>
`;

exports[`Storyshots Atoms/Markdown Pattern 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <Text
    selectable={true}
    style={
      Object {
        "color": "#1F1F1F",
        "fontSize": 14,
        "lineHeight": 22,
      }
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontSize": 14,
            "lineHeight": 22,
          },
          undefined,
        ]
      }
    >
      default Markdown
    </Text>
  </Text>
  <Text
    selectable={true}
    style={
      Object {
        "color": "#1F1F1F",
        "fontSize": 14,
        "lineHeight": 22,
      }
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontSize": 14,
            "lineHeight": 22,
          },
          Object {
            "fontWeight": "bold",
          },
        ]
      }
    >
      Bold Markdown
    </Text>
  </Text>
  <Text
    selectable={true}
    style={
      Object {
        "color": "#1F1F1F",
        "fontSize": 14,
        "lineHeight": 22,
      }
    }
  >
    <Text
      onPress={[Function]}
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontSize": 14,
            "lineHeight": 22,
          },
          Object {
            "textDecorationLine": "underline",
          },
        ]
      }
    >
      010-1234-5678
    </Text>
  </Text>
  <Text
    selectable={true}
    style={
      Object {
        "color": "#1F1F1F",
        "fontSize": 14,
        "lineHeight": 22,
      }
    }
  >
    <Text
      onPress={[Function]}
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontSize": 14,
            "lineHeight": 22,
          },
          Object {
            "textDecorationLine": "underline",
          },
        ]
      }
    >
      https://doctor-cha.com/
    </Text>
  </Text>
</View>
`;

exports[`Storyshots Atoms/Markdown Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <Text
    selectable={true}
    style={
      Object {
        "color": "#000000",
        "fontSize": 14,
        "lineHeight": 22,
      }
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#000000",
            "fontSize": 14,
            "lineHeight": 22,
          },
          Object {
            "fontWeight": "bold",
          },
        ]
      }
    >
      Markdown Bold
    </Text>
    <Text
      style={
        Array [
          Object {
            "color": "#000000",
            "fontSize": 14,
            "lineHeight": 22,
          },
          undefined,
        ]
      }
    >
      
Markdown Normal

    </Text>
    <Text
      onPress={[Function]}
      style={
        Array [
          Object {
            "color": "#000000",
            "fontSize": 14,
            "lineHeight": 22,
          },
          Object {
            "textDecorationLine": "underline",
          },
        ]
      }
    >
      010-1234-5678
    </Text>
    <Text
      style={
        Array [
          Object {
            "color": "#000000",
            "fontSize": 14,
            "lineHeight": 22,
          },
          undefined,
        ]
      }
    >
      

    </Text>
    <Text
      onPress={[Function]}
      style={
        Array [
          Object {
            "color": "#000000",
            "fontSize": 14,
            "lineHeight": 22,
          },
          Object {
            "textDecorationLine": "underline",
          },
        ]
      }
    >
      https://doctor-cha.com/
    </Text>
  </Text>
</View>
`;

exports[`Storyshots Atoms/Markdown Selectable 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <Text
    selectable={true}
    style={
      Object {
        "color": "#1F1F1F",
        "fontSize": 14,
        "lineHeight": 22,
      }
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontSize": 14,
            "lineHeight": 22,
          },
          undefined,
        ]
      }
    >
      Selectable Markdown
    </Text>
  </Text>
  <Text
    selectable={false}
    style={
      Object {
        "color": "#1F1F1F",
        "fontSize": 14,
        "lineHeight": 22,
      }
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontSize": 14,
            "lineHeight": 22,
          },
          undefined,
        ]
      }
    >
      Unselectable Markdown
    </Text>
  </Text>
</View>
`;

exports[`Storyshots Atoms/Markdown TextColor 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <Text
    selectable={true}
    style={
      Object {
        "color": "#1F1F1F",
        "fontSize": 14,
        "lineHeight": 22,
      }
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#1F1F1F",
            "fontSize": 14,
            "lineHeight": 22,
          },
          undefined,
        ]
      }
    >
      default Markdown
    </Text>
  </Text>
  <Text
    selectable={true}
    style={
      Object {
        "color": "red",
        "fontSize": 14,
        "lineHeight": 22,
      }
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "red",
            "fontSize": 14,
            "lineHeight": 22,
          },
          undefined,
        ]
      }
    >
      red Markdown
    </Text>
  </Text>
  <Text
    selectable={true}
    style={
      Object {
        "color": "blue",
        "fontSize": 14,
        "lineHeight": 22,
      }
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "blue",
            "fontSize": 14,
            "lineHeight": 22,
          },
          undefined,
        ]
      }
    >
      blue Markdown
    </Text>
  </Text>
  <Text
    selectable={true}
    style={
      Object {
        "color": "#E3E3E3",
        "fontSize": 14,
        "lineHeight": 22,
      }
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#E3E3E3",
            "fontSize": 14,
            "lineHeight": 22,
          },
          undefined,
        ]
      }
    >
      #E3E3E3 Markdown
    </Text>
  </Text>
</View>
`;

exports[`Storyshots Atoms/Message/CardMessage Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Object {
        "backgroundColor": "grey",
        "padding": 10,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 14,
            "overflow": "hidden",
            "paddingBottom": 14,
            "paddingLeft": 14,
            "paddingRight": 14,
            "paddingTop": 14,
            "shadowColor": "rgba(0,0,0,0.1)",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 1,
            "shadowRadius": 2,
            "width": 487.5,
          },
        ]
      }
    >
      <Text
        size={5}
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Bold",
              "fontSize": 16,
              "lineHeight": 26,
            },
          ]
        }
      >
        Title
      </Text>
      <Text
        color="#8C8C8C"
        size={2}
        style={
          Array [
            Object {
              "color": "#8C8C8C",
              "flexShrink": 1,
              "flexWrap": "wrap",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
              "lineHeight": 22,
            },
            Object {
              "marginVertical": 10,
            },
          ]
        }
      >
        Description
      </Text>
      <Text>
        Footer
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Message/CounselCaseMessage Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Object {
        "backgroundColor": "grey",
        "padding": 10,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 14,
            "overflow": "hidden",
            "shadowColor": "rgba(0,0,0,0.1)",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 1,
            "shadowRadius": 2,
            "width": 487.5,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "position": "relative",
            },
          ]
        }
      >
        <BVLinearGradient
          colors={
            Array [
              4294309365,
              4292467161,
            ]
          }
          endPoint={
            Object {
              "x": 0.5,
              "y": 1,
            }
          }
          locations={null}
          startPoint={
            Object {
              "x": 0.5,
              "y": 0,
            }
          }
          style={
            Array [
              Object {
                "height": 72,
                "position": "absolute",
                "width": 72,
                "zIndex": 1,
              },
              Object {
                "height": 130,
                "width": "100%",
              },
            ]
          }
        />
        <View
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Array [
                Object {
                  "height": 130,
                  "width": "100%",
                },
              ],
            ]
          }
        >
          <FastImageView
            onFastImageError={[Function]}
            onFastImageLoad={[Function]}
            resizeMode="cover"
            source={
              Object {
                "uri": "https://picsum.photos/200/200",
              }
            }
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#FFFFFF",
              "paddingBottom": 10,
              "paddingLeft": 10,
              "paddingRight": 10,
              "paddingTop": 10,
            },
          ]
        }
      >
        <Text
          color="#8C8C8C"
          size={2}
          style={
            Array [
              Object {
                "color": "#8C8C8C",
                "flexShrink": 1,
                "flexWrap": "wrap",
                "fontFamily": "NotoSansKR-Regular",
                "fontSize": 14,
                "lineHeight": 22,
              },
            ]
          }
        >
          닥터차 상담사례
        </Text>
        <Text
          size={5}
          style={
            Array [
              Object {
                "color": "black",
                "fontFamily": "NotoSansKR-Bold",
                "fontSize": 16,
                "lineHeight": 26,
              },
            ]
          }
        >
          Title
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Message/EndConfirmedMessage Default 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Object {
        "backgroundColor": "grey",
        "padding": 10,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignSelf": "flex-start",
            "backgroundColor": "#FFFFFF",
            "borderRadius": 14,
            "borderTopLeftRadius": 0,
            "flexDirection": "row",
            "maxWidth": 487.5,
            "overflow": "hidden",
            "paddingBottom": 6,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 6,
            "shadowColor": "rgba(0,0,0,0.1)",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 1,
            "shadowRadius": 2,
          },
        ]
      }
    >
      <Text
        color="#8C8C8C"
        size={2}
        style={
          Array [
            Object {
              "color": "#8C8C8C",
              "flexShrink": 1,
              "flexWrap": "wrap",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
              "lineHeight": 22,
            },
          ]
        }
      >
        상담이 종료되었습니다.
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Message/EndMessage Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Object {
        "backgroundColor": "grey",
        "padding": 10,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 14,
            "overflow": "hidden",
            "paddingBottom": 14,
            "paddingLeft": 14,
            "paddingRight": 14,
            "paddingTop": 14,
            "shadowColor": "rgba(0,0,0,0.1)",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 1,
            "shadowRadius": 2,
            "width": 487.5,
          },
        ]
      }
    >
      <Text
        size={5}
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Bold",
              "fontSize": 16,
              "lineHeight": 26,
            },
          ]
        }
      >
        상담이 종료되었습니다
      </Text>
      <Text
        color="#8C8C8C"
        size={2}
        style={
          Array [
            Object {
              "color": "#8C8C8C",
              "flexShrink": 1,
              "flexWrap": "wrap",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
              "lineHeight": 22,
            },
            Object {
              "marginVertical": 10,
            },
          ]
        }
      >
        상담은 만족스러우셨나요?
24시간 후에 상담이 자동 종료됩니다!
계속 상담을 진행하시면 자동 종료는 취소됩니다.
      </Text>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 1000,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 14,
              "paddingLeft": 24,
              "paddingRight": 24,
              "paddingTop": 14,
              "width": "100%",
            },
            Object {
              "backgroundColor": "#EEF2F6",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            disabled={false}
            includeFontPadding={false}
            pressed={false}
            style={
              Array [
                Object {
                  "color": "#5F656A",
                  "fontFamily": "NotoSansKR-Medium",
                  "fontSize": 16,
                  "lineHeight": 26,
                  "textAlign": "center",
                },
              ]
            }
            textColor="#5F656A"
            textDisabledColor="#C6CACF"
          >
            지금 상담 종료하기
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Message/EventMessage Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#FFFFFF",
          "borderRadius": 14,
          "overflow": "hidden",
          "shadowColor": "rgba(0,0,0,0.1)",
          "shadowOffset": Object {
            "height": 2,
            "width": 0,
          },
          "shadowOpacity": 1,
          "shadowRadius": 2,
          "width": 487.5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "position": "relative",
          },
        ]
      }
    >
      <BVLinearGradient
        colors={
          Array [
            4294309365,
            4292467161,
          ]
        }
        endPoint={
          Object {
            "x": 0.5,
            "y": 1,
          }
        }
        locations={null}
        startPoint={
          Object {
            "x": 0.5,
            "y": 0,
          }
        }
        style={
          Array [
            Object {
              "height": 72,
              "position": "absolute",
              "width": 72,
              "zIndex": 1,
            },
            Object {
              "height": 130,
              "width": "100%",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Array [
              Object {
                "height": 130,
                "width": "100%",
              },
            ],
          ]
        }
      >
        <FastImageView
          onFastImageError={[Function]}
          onFastImageLoad={[Function]}
          resizeMode="cover"
          source={
            Object {
              "uri": "https://picsum.photos/200/200",
            }
          }
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <Text
        color="#8C8C8C"
        size={2}
        style={
          Array [
            Object {
              "color": "#8C8C8C",
              "flexShrink": 1,
              "flexWrap": "wrap",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
              "lineHeight": 22,
            },
          ]
        }
      >
        닥터차 이벤트
      </Text>
      <Text
        size={5}
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Bold",
              "fontSize": 16,
              "lineHeight": 26,
            },
          ]
        }
      >
        Title
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Message/FeedbackMessage Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Object {
        "backgroundColor": "grey",
        "padding": 10,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 14,
            "overflow": "hidden",
            "paddingBottom": 14,
            "paddingLeft": 14,
            "paddingRight": 14,
            "paddingTop": 14,
            "shadowColor": "rgba(0,0,0,0.1)",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 1,
            "shadowRadius": 2,
            "width": 487.5,
          },
        ]
      }
    >
      <Text
        size={5}
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Bold",
              "fontSize": 16,
              "lineHeight": 26,
            },
          ]
        }
      >
        피드백을 남겨주세요!
      </Text>
      <Text
        color="#8C8C8C"
        size={2}
        style={
          Array [
            Object {
              "color": "#8C8C8C",
              "flexShrink": 1,
              "flexWrap": "wrap",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
              "lineHeight": 22,
            },
            Object {
              "marginVertical": 10,
            },
          ]
        }
      >
        상담은 만족스러우셨나요?
상담 내용에 대한 피드백을 바탕으로 더욱 발전하는 닥터차가 되겠습니다!
      </Text>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 1000,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 14,
              "paddingLeft": 24,
              "paddingRight": 24,
              "paddingTop": 14,
              "width": "100%",
            },
            Object {
              "backgroundColor": "#EEF2F6",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            includeFontPadding={false}
            pressed={false}
            style={
              Array [
                Object {
                  "color": "#5F656A",
                  "fontFamily": "NotoSansKR-Medium",
                  "fontSize": 16,
                  "lineHeight": 26,
                  "textAlign": "center",
                },
              ]
            }
            textColor="#5F656A"
            textDisabledColor="#C6CACF"
          >
            피드백 남기기
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Message/ImageMessage Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Object {
        "backgroundColor": "grey",
        "padding": 10,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "position": "relative",
            },
          ]
        }
      >
        <BVLinearGradient
          colors={
            Array [
              4294309365,
              4292467161,
            ]
          }
          endPoint={
            Object {
              "x": 0.5,
              "y": 1,
            }
          }
          locations={null}
          startPoint={
            Object {
              "x": 0.5,
              "y": 0,
            }
          }
          style={
            Array [
              Object {
                "height": 72,
                "position": "absolute",
                "width": 72,
                "zIndex": 1,
              },
              Object {
                "borderRadius": 14,
                "overflow": "hidden",
              },
              Object {
                "height": 487.5,
                "width": 487.5,
              },
            ]
          }
        />
        <View
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Array [
                Object {
                  "borderRadius": 14,
                  "overflow": "hidden",
                },
                Object {
                  "height": 487.5,
                  "width": 487.5,
                },
              ],
            ]
          }
        >
          <FastImageView
            onFastImageError={[Function]}
            onFastImageLoad={[Function]}
            resizeMode="cover"
            source={
              Object {
                "uri": "https://picsum.photos/200/200",
              }
            }
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Message/OutdatedMessage Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Object {
        "backgroundColor": "grey",
        "padding": 10,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 14,
            "overflow": "hidden",
            "paddingBottom": 14,
            "paddingLeft": 14,
            "paddingRight": 14,
            "paddingTop": 14,
            "shadowColor": "rgba(0,0,0,0.1)",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 1,
            "shadowRadius": 2,
            "width": 487.5,
          },
        ]
      }
    >
      <Text
        size={5}
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Bold",
              "fontSize": 16,
              "lineHeight": 26,
            },
          ]
        }
      >
        상담이 자동종료될
예정입니다
      </Text>
      <Text
        color="#8C8C8C"
        size={2}
        style={
          Array [
            Object {
              "color": "#8C8C8C",
              "flexShrink": 1,
              "flexWrap": "wrap",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
              "lineHeight": 22,
            },
            Object {
              "marginVertical": 10,
            },
          ]
        }
      >
        1일 동안 대화기록이 없어 24시간 뒤에 상담이 자동종료될 예정입니다.
상담 진행을 원하시면, 채팅을 해주세요!
      </Text>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 1000,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 14,
              "paddingLeft": 24,
              "paddingRight": 24,
              "paddingTop": 14,
              "width": "100%",
            },
            Object {
              "backgroundColor": "#EEF2F6",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            disabled={false}
            includeFontPadding={false}
            pressed={false}
            style={
              Array [
                Object {
                  "color": "#5F656A",
                  "fontFamily": "NotoSansKR-Medium",
                  "fontSize": 16,
                  "lineHeight": 26,
                  "textAlign": "center",
                },
              ]
            }
            textColor="#5F656A"
            textDisabledColor="#C6CACF"
          >
            지금 상담 종료하기
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Message/PostMessage Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Object {
        "backgroundColor": "grey",
        "padding": 10,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 14,
            "overflow": "hidden",
            "shadowColor": "rgba(0,0,0,0.1)",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 1,
            "shadowRadius": 2,
            "width": 487.5,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "position": "relative",
            },
          ]
        }
      >
        <BVLinearGradient
          colors={
            Array [
              4294309365,
              4292467161,
            ]
          }
          endPoint={
            Object {
              "x": 0.5,
              "y": 1,
            }
          }
          locations={null}
          startPoint={
            Object {
              "x": 0.5,
              "y": 0,
            }
          }
          style={
            Array [
              Object {
                "height": 72,
                "position": "absolute",
                "width": 72,
                "zIndex": 1,
              },
              Object {
                "height": 130,
                "width": "100%",
              },
            ]
          }
        />
        <View
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Array [
                Object {
                  "height": 130,
                  "width": "100%",
                },
              ],
            ]
          }
        >
          <FastImageView
            onFastImageError={[Function]}
            onFastImageLoad={[Function]}
            resizeMode="cover"
            source={
              Object {
                "uri": "https://picsum.photos/200/200",
              }
            }
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#FFFFFF",
              "paddingBottom": 10,
              "paddingLeft": 10,
              "paddingRight": 10,
              "paddingTop": 10,
            },
          ]
        }
      >
        <Text
          color="#8C8C8C"
          size={2}
          style={
            Array [
              Object {
                "color": "#8C8C8C",
                "flexShrink": 1,
                "flexWrap": "wrap",
                "fontFamily": "NotoSansKR-Regular",
                "fontSize": 14,
                "lineHeight": 22,
              },
            ]
          }
        >
          닥터차 포스트
        </Text>
        <Text
          size={5}
          style={
            Array [
              Object {
                "color": "black",
                "fontFamily": "NotoSansKR-Bold",
                "fontSize": 16,
                "lineHeight": 26,
              },
            ]
          }
        >
          Title New Line Title
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Message/ReviewMessage Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Object {
        "backgroundColor": "grey",
        "padding": 10,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 14,
            "overflow": "hidden",
            "paddingBottom": 14,
            "paddingLeft": 14,
            "paddingRight": 14,
            "paddingTop": 14,
            "shadowColor": "rgba(0,0,0,0.1)",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 1,
            "shadowRadius": 2,
            "width": 487.5,
          },
        ]
      }
    >
      <Text
        size={5}
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Bold",
              "fontSize": 16,
              "lineHeight": 26,
            },
          ]
        }
      >
        리뷰를 남겨주세요!
      </Text>
      <Text
        color="#8C8C8C"
        size={2}
        style={
          Array [
            Object {
              "color": "#8C8C8C",
              "flexShrink": 1,
              "flexWrap": "wrap",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
              "lineHeight": 22,
            },
            Object {
              "marginVertical": 10,
            },
          ]
        }
      >
        상담은 만족스러우셨나요?
앱스토어에 리뷰를 남겨주시면 닥터차의 발전에 큰 도움이 됩니다!
      </Text>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 1000,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 14,
              "paddingLeft": 24,
              "paddingRight": 24,
              "paddingTop": 14,
              "width": "100%",
            },
            Object {
              "backgroundColor": "#EEF2F6",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            includeFontPadding={false}
            pressed={false}
            style={
              Array [
                Object {
                  "color": "#5F656A",
                  "fontFamily": "NotoSansKR-Medium",
                  "fontSize": 16,
                  "lineHeight": 26,
                  "textAlign": "center",
                },
              ]
            }
            textColor="#5F656A"
            textDisabledColor="#C6CACF"
          >
            앱스토어 리뷰 남기기
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Message/ShopMessage Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Object {
        "backgroundColor": "grey",
        "padding": 10,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 14,
            "overflow": "hidden",
            "shadowColor": "rgba(0,0,0,0.1)",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 1,
            "shadowRadius": 2,
            "width": 487.5,
          },
        ]
      }
    >
      <AIRMap
        handlePanDrag={false}
        initialRegion={
          Object {
            "latitude": 123,
            "latitudeDelta": 0.01,
            "longitude": 123,
            "longitudeDelta": 0.01,
          }
        }
        onChange={[Function]}
        onLayout={[Function]}
        onMapReady={[Function]}
        onMarkerPress={[Function]}
        pitchEnabled={false}
        region={null}
        rotateEnabled={false}
        scrollEnabled={false}
        style={
          Array [
            Object {
              "height": 130,
              "width": "100%",
            },
          ]
        }
        zoomEnabled={false}
      >
        <AIRMapMarker
          coordinate={
            Object {
              "latitude": 123,
              "longitude": 123,
            }
          }
          description="Seoul, South Korea"
          onPress={[Function]}
          stopPropagation={false}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "position": "absolute",
              },
              undefined,
            ]
          }
          title="Name"
        />
      </AIRMap>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#FFFFFF",
              "paddingBottom": 10,
              "paddingLeft": 10,
              "paddingRight": 10,
              "paddingTop": 10,
            },
          ]
        }
      >
        <Text
          size={5}
          style={
            Array [
              Object {
                "color": "black",
                "fontFamily": "NotoSansKR-Bold",
                "fontSize": 16,
                "lineHeight": 26,
              },
            ]
          }
        >
          Name
        </Text>
        <Text
          color="#8C8C8C"
          size={2}
          style={
            Array [
              Object {
                "color": "#8C8C8C",
                "flexShrink": 1,
                "flexWrap": "wrap",
                "fontFamily": "NotoSansKR-Regular",
                "fontSize": 14,
                "lineHeight": 22,
              },
            ]
          }
        >
          Seoul, South Korea
        </Text>
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
                "marginTop": 12,
              },
            ]
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 1000,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 14,
                  "paddingLeft": 24,
                  "paddingRight": 24,
                  "paddingTop": 14,
                  "width": "100%",
                },
                Object {
                  "backgroundColor": "#EEF2F6",
                },
                Array [
                  Object {
                    "alignItems": "center",
                    "flexBasis": 0,
                    "flexDirection": "row",
                    "flexGrow": 1,
                    "flexShrink": 1,
                    "justifyContent": "center",
                    "marginRight": 10,
                  },
                ],
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <Image
                color="#5F656A"
                size="sm"
                source={
                  Object {
                    "testUri": "../../../src/assets/icons/tire/tire.png",
                  }
                }
                style={
                  Array [
                    Object {
                      "height": 20,
                      "tintColor": "#5F656A",
                      "width": 20,
                    },
                    Object {
                      "marginRight": 4,
                    },
                  ]
                }
              />
              <Text
                includeFontPadding={false}
                pressed={false}
                style={
                  Array [
                    Object {
                      "color": "#5F656A",
                      "fontFamily": "NotoSansKR-Medium",
                      "fontSize": 16,
                      "lineHeight": 26,
                      "textAlign": "center",
                    },
                  ]
                }
                textColor="#5F656A"
                textDisabledColor="#C6CACF"
              >
                상세 정보
              </Text>
            </View>
          </View>
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 1000,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 14,
                  "paddingLeft": 24,
                  "paddingRight": 24,
                  "paddingTop": 14,
                  "width": "100%",
                },
                Object {
                  "backgroundColor": "#EEF2F6",
                },
                Array [
                  Object {
                    "alignItems": "center",
                    "flexBasis": 0,
                    "flexDirection": "row",
                    "flexGrow": 1,
                    "flexShrink": 1,
                    "justifyContent": "center",
                  },
                ],
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <Image
                color="#5F656A"
                size="sm"
                source={
                  Object {
                    "testUri": "../../../src/assets/icons/map/map.png",
                  }
                }
                style={
                  Array [
                    Object {
                      "height": 20,
                      "tintColor": "#5F656A",
                      "width": 20,
                    },
                    Object {
                      "marginRight": 4,
                    },
                  ]
                }
              />
              <Text
                includeFontPadding={false}
                pressed={false}
                style={
                  Array [
                    Object {
                      "color": "#5F656A",
                      "fontFamily": "NotoSansKR-Medium",
                      "fontSize": 16,
                      "lineHeight": 26,
                      "textAlign": "center",
                    },
                  ]
                }
                textColor="#5F656A"
                textDisabledColor="#C6CACF"
              >
                길찾기
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Message/TextMessage Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Object {
        "backgroundColor": "grey",
        "padding": 10,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#0056B4",
            "borderRadius": 14,
            "borderTopRightRadius": 0,
            "flexDirection": "row",
            "maxWidth": 487.5,
            "overflow": "hidden",
            "paddingBottom": 6,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 6,
            "shadowColor": "rgba(0,0,0,0.1)",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 1,
            "shadowRadius": 2,
          },
        ]
      }
    >
      <Text
        selectable={true}
        style={
          Object {
            "color": "#FFFFFF",
            "fontSize": 14,
            "lineHeight": 22,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#FFFFFF",
                "fontSize": 14,
                "lineHeight": 22,
              },
              undefined,
            ]
          }
        >
          Text
        </Text>
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Message/UnhandledMessage Other Unhandle Message 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Object {
        "backgroundColor": "grey",
        "padding": 10,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignSelf": "flex-start",
            "backgroundColor": "#FFFFFF",
            "borderRadius": 14,
            "borderTopLeftRadius": 0,
            "flexDirection": "row",
            "maxWidth": 487.5,
            "overflow": "hidden",
            "paddingBottom": 6,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 6,
            "shadowColor": "rgba(0,0,0,0.1)",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 1,
            "shadowRadius": 2,
          },
        ]
      }
    >
      <Text
        color="#8C8C8C"
        size={2}
        style={
          Array [
            Object {
              "color": "#8C8C8C",
              "flexShrink": 1,
              "flexWrap": "wrap",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
              "lineHeight": 22,
            },
          ]
        }
      >
        지원하지 않는 형태의 메세지입니다.
        

        앱을 최신 버전으로 업데이트 해주세요!
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Message/UnhandledMessage Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Object {
        "backgroundColor": "grey",
        "padding": 10,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#0056B4",
            "borderRadius": 14,
            "borderTopRightRadius": 0,
            "flexDirection": "row",
            "maxWidth": 487.5,
            "overflow": "hidden",
            "paddingBottom": 6,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 6,
            "shadowColor": "rgba(0,0,0,0.1)",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 1,
            "shadowRadius": 2,
          },
        ]
      }
    >
      <Text
        color="primary_extralight"
        size={2}
        style={
          Array [
            Object {
              "color": "transparent",
              "flexShrink": 1,
              "flexWrap": "wrap",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
              "lineHeight": 22,
            },
          ]
        }
      >
        지원하지 않는 형태의 메세지입니다.
        

        앱을 최신 버전으로 업데이트 해주세요!
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/ProgressiveImage Fail 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "position": "relative",
        },
      ]
    }
  >
    <BVLinearGradient
      colors={
        Array [
          4294309365,
          4292467161,
        ]
      }
      endPoint={
        Object {
          "x": 0.5,
          "y": 1,
        }
      }
      locations={null}
      startPoint={
        Object {
          "x": 0.5,
          "y": 0,
        }
      }
      style={
        Array [
          Object {
            "height": 72,
            "position": "absolute",
            "width": 72,
            "zIndex": 1,
          },
          Object {
            "height": 200,
            "width": 200,
          },
        ]
      }
    />
    <View
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Object {
            "height": 200,
            "width": 200,
          },
        ]
      }
    >
      <FastImageView
        onFastImageError={[Function]}
        onFastImageLoad={[Function]}
        resizeMode="cover"
        source={
          Object {
            "uri": "wrong",
          }
        }
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/ProgressiveImage Image 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "position": "relative",
        },
      ]
    }
  >
    <BVLinearGradient
      colors={
        Array [
          4294309365,
          4292467161,
        ]
      }
      endPoint={
        Object {
          "x": 0.5,
          "y": 1,
        }
      }
      locations={null}
      startPoint={
        Object {
          "x": 0.5,
          "y": 0,
        }
      }
      style={
        Array [
          Object {
            "height": 72,
            "position": "absolute",
            "width": 72,
            "zIndex": 1,
          },
          Object {
            "height": 200,
            "width": 200,
          },
        ]
      }
    />
    <View
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Object {
            "height": 200,
            "width": 200,
          },
        ]
      }
    >
      <FastImageView
        onFastImageError={[Function]}
        onFastImageLoad={[Function]}
        resizeMode="cover"
        source={
          Object {
            "testUri": "../../../src/assets/images/shop-thumbnail.png",
          }
        }
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/ProgressiveImage Loading 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "position": "relative",
        },
      ]
    }
  >
    <BVLinearGradient
      colors={
        Array [
          4294309365,
          4292467161,
        ]
      }
      endPoint={
        Object {
          "x": 0.5,
          "y": 1,
        }
      }
      locations={null}
      startPoint={
        Object {
          "x": 0.5,
          "y": 0,
        }
      }
      style={
        Array [
          Object {
            "height": 72,
            "position": "absolute",
            "width": 72,
            "zIndex": 1,
          },
          Object {
            "height": 200,
            "width": 200,
          },
        ]
      }
    />
    <View
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Object {
            "height": 200,
            "width": 200,
          },
        ]
      }
    >
      <FastImageView
        onFastImageError={[Function]}
        onFastImageLoad={[Function]}
        resizeMode="cover"
        source={null}
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/SelectOption Block(Solo) 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "borderColor": "black",
        "borderRadius": 20,
        "borderWidth": 1,
        "marginBottom": 2,
        "marginLeft": 0,
        "marginRight": 0,
        "marginTop": 2,
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 18,
        "paddingRight": 18,
        "paddingTop": 10,
      }
    }
  >
    <Text
      color="black"
      layout="block"
      selected={true}
      style={
        Array [
          Object {
            "color": "black",
            "fontFamily": "NotoSansKR-Medium",
            "fontSize": 16,
            "lineHeight": 26,
          },
        ]
      }
      value="value"
    >
      Block label selected
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "borderColor": "rgba(0, 0, 0, 0.5)",
        "borderRadius": 20,
        "borderWidth": 1,
        "marginBottom": 2,
        "marginLeft": 0,
        "marginRight": 0,
        "marginTop": 2,
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 18,
        "paddingRight": 18,
        "paddingTop": 10,
      }
    }
  >
    <Text
      color="black"
      layout="block"
      selected={false}
      style={
        Array [
          Object {
            "color": "black",
            "fontFamily": "NotoSansKR-Medium",
            "fontSize": 16,
            "lineHeight": 26,
            "opacity": 0.7,
          },
        ]
      }
      value="value"
    >
      Block label unselected
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#F5F5F5",
        "borderColor": "#D9D9D9",
        "borderRadius": 20,
        "borderWidth": 1,
        "marginBottom": 2,
        "marginLeft": 0,
        "marginRight": 0,
        "marginTop": 2,
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 18,
        "paddingRight": 18,
        "paddingTop": 10,
      }
    }
  >
    <Text
      color="black"
      disabled={true}
      layout="block"
      selected={true}
      style={
        Array [
          Object {
            "color": "#8C8C8C",
            "fontFamily": "NotoSansKR-Medium",
            "fontSize": 16,
            "lineHeight": 26,
          },
        ]
      }
      value="value"
    >
      Block label disabled
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "borderColor": "black",
        "borderRadius": 20,
        "borderWidth": 1,
        "marginBottom": 2,
        "marginLeft": 0,
        "marginRight": 0,
        "marginTop": 2,
        "opacity": 1,
        "paddingBottom": 8,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 8,
      }
    }
  >
    <Text
      color="black"
      layout="block"
      selected={true}
      size="sm"
      style={
        Array [
          Object {
            "color": "black",
            "fontFamily": "NotoSansKR-Medium",
            "fontSize": 14,
            "lineHeight": 22,
          },
        ]
      }
      value="value"
    >
      Block small label selected
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "borderColor": "rgba(0, 0, 0, 0.5)",
        "borderRadius": 20,
        "borderWidth": 1,
        "marginBottom": 2,
        "marginLeft": 0,
        "marginRight": 0,
        "marginTop": 2,
        "opacity": 1,
        "paddingBottom": 8,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 8,
      }
    }
  >
    <Text
      color="black"
      layout="block"
      selected={false}
      size="sm"
      style={
        Array [
          Object {
            "color": "black",
            "fontFamily": "NotoSansKR-Medium",
            "fontSize": 14,
            "lineHeight": 22,
            "opacity": 0.7,
          },
        ]
      }
      value="value"
    >
      Block small label unselected
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#F5F5F5",
        "borderColor": "#D9D9D9",
        "borderRadius": 20,
        "borderWidth": 1,
        "marginBottom": 2,
        "marginLeft": 0,
        "marginRight": 0,
        "marginTop": 2,
        "opacity": 1,
        "paddingBottom": 8,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 8,
      }
    }
  >
    <Text
      disabled={true}
      layout="block"
      selected={true}
      size="sm"
      style={
        Array [
          Object {
            "color": "#8C8C8C",
            "fontFamily": "NotoSansKR-Medium",
            "fontSize": 14,
            "lineHeight": 22,
          },
        ]
      }
      value="value"
    >
      Block small label disabled
    </Text>
  </View>
</View>
`;

exports[`Storyshots Atoms/SelectOption Block(Sublabel) 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "borderColor": "black",
        "borderRadius": 20,
        "borderWidth": 1,
        "marginBottom": 2,
        "marginLeft": 0,
        "marginRight": 0,
        "marginTop": 2,
        "opacity": 1,
        "paddingBottom": 12,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 12,
      }
    }
  >
    <Text
      color="black"
      layout="block"
      selected={true}
      style={
        Array [
          Object {
            "color": "black",
            "fontFamily": "NotoSansKR-Medium",
            "fontSize": 16,
            "lineHeight": 26,
          },
        ]
      }
      value="value"
    >
      Block label selected
    </Text>
    <Text
      color="black"
      layout="block"
      selected={true}
      style={
        Array [
          Object {
            "color": "black",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 12,
            "lineHeight": 19,
          },
        ]
      }
      value="value"
    >
      Block sublabel selected
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "borderColor": "rgba(0, 0, 0, 0.5)",
        "borderRadius": 20,
        "borderWidth": 1,
        "marginBottom": 2,
        "marginLeft": 0,
        "marginRight": 0,
        "marginTop": 2,
        "opacity": 1,
        "paddingBottom": 12,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 12,
      }
    }
  >
    <Text
      color="black"
      layout="block"
      selected={false}
      style={
        Array [
          Object {
            "color": "black",
            "fontFamily": "NotoSansKR-Medium",
            "fontSize": 16,
            "lineHeight": 26,
            "opacity": 0.7,
          },
        ]
      }
      value="value"
    >
      Block label unselected
    </Text>
    <Text
      color="black"
      layout="block"
      selected={false}
      style={
        Array [
          Object {
            "color": "black",
            "fontFamily": "NotoSansKR-Light",
            "fontSize": 12,
            "lineHeight": 19,
            "opacity": 0.5,
          },
        ]
      }
      value="value"
    >
      Block sublabel unselected
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#F5F5F5",
        "borderColor": "#D9D9D9",
        "borderRadius": 20,
        "borderWidth": 1,
        "marginBottom": 2,
        "marginLeft": 0,
        "marginRight": 0,
        "marginTop": 2,
        "opacity": 1,
        "paddingBottom": 12,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 12,
      }
    }
  >
    <Text
      color="black"
      disabled={true}
      layout="block"
      selected={true}
      style={
        Array [
          Object {
            "color": "#8C8C8C",
            "fontFamily": "NotoSansKR-Medium",
            "fontSize": 16,
            "lineHeight": 26,
          },
        ]
      }
      value="value"
    >
      Block label disabled
    </Text>
    <Text
      color="black"
      disabled={true}
      layout="block"
      selected={true}
      style={
        Array [
          Object {
            "color": "#8C8C8C",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 12,
            "lineHeight": 19,
          },
        ]
      }
      value="value"
    >
      Block sublabel disabled
    </Text>
  </View>
</View>
`;

exports[`Storyshots Atoms/SelectOption InLine 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "borderColor": "black",
        "borderRadius": 20,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginRight": 4,
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 18,
        "paddingRight": 18,
        "paddingTop": 10,
      }
    }
  >
    <Text
      color="black"
      layout="inline"
      selected={true}
      style={
        Array [
          Object {
            "color": "black",
            "fontFamily": "NotoSansKR-Medium",
            "fontSize": 14,
            "lineHeight": 22,
          },
        ]
      }
      value="value"
    >
      Inline label selected
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "borderColor": "rgba(0, 0, 0, 0.5)",
        "borderRadius": 20,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginRight": 4,
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 18,
        "paddingRight": 18,
        "paddingTop": 10,
      }
    }
  >
    <Text
      color="black"
      layout="inline"
      selected={false}
      style={
        Array [
          Object {
            "color": "black",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 14,
            "lineHeight": 22,
            "opacity": 0.7,
          },
        ]
      }
      value="value"
    >
      Inline label unselected
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#F5F5F5",
        "borderColor": "#D9D9D9",
        "borderRadius": 20,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginRight": 4,
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 18,
        "paddingRight": 18,
        "paddingTop": 10,
      }
    }
  >
    <Text
      color="black"
      disabled={true}
      layout="inline"
      selected={false}
      style={
        Array [
          Object {
            "color": "#8C8C8C",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 14,
            "lineHeight": 22,
            "opacity": 0.7,
          },
        ]
      }
      value="value"
    >
      Inline label disabled
    </Text>
  </View>
</View>
`;

exports[`Storyshots Atoms/SelectOption Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "borderColor": "rgba(0, 0, 0, 0.5)",
        "borderRadius": 20,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginRight": 4,
        "opacity": 1,
        "paddingBottom": 10,
        "paddingLeft": 18,
        "paddingRight": 18,
        "paddingTop": 10,
      }
    }
  >
    <Text
      color="black"
      disabled={false}
      layout="inline"
      selected={false}
      size="md"
      style={
        Array [
          Object {
            "color": "black",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 14,
            "lineHeight": 22,
            "opacity": 0.7,
          },
        ]
      }
      textColor="black"
      value="value"
    >
      Label
    </Text>
  </View>
</View>
`;

exports[`Storyshots Atoms/Sign Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "alignSelf": "center",
          "backgroundColor": "#E0ECFA",
          "borderRadius": 20,
          "paddingBottom": 4,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 4,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#0056B4",
            "fontFamily": "NotoSansKR-Regular",
            "fontSize": 12,
          },
        ]
      }
    >
      Sign
    </Text>
  </View>
</View>
`;

exports[`Storyshots Atoms/Switch Disabled 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <RCTSwitch
    accessibilityRole="switch"
    disabled={true}
    onChange={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTintColor="#007AFF"
    style={
      Array [
        Object {
          "height": 31,
          "width": 51,
        },
        Object {
          "transform": Array [
            Object {
              "scaleX": 0.75,
            },
            Object {
              "scaleY": 0.75,
            },
          ],
        },
      ]
    }
    thumbTintColor="#FFFFFF"
    tintColor="#F5F5F5"
    value={false}
  />
</View>
`;

exports[`Storyshots Atoms/Switch Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <RCTSwitch
    accessibilityRole="switch"
    disabled={false}
    onChange={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTintColor="#007AFF"
    style={
      Array [
        Object {
          "height": 31,
          "width": 51,
        },
        Object {
          "transform": Array [
            Object {
              "scaleX": 0.75,
            },
            Object {
              "scaleY": 0.75,
            },
          ],
        },
      ]
    }
    thumbTintColor="#FFFFFF"
    tintColor="#F5F5F5"
    value={false}
  />
</View>
`;

exports[`Storyshots Atoms/Switch Value 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <RCTSwitch
    accessibilityRole="switch"
    disabled={false}
    onChange={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTintColor="#007AFF"
    style={
      Array [
        Object {
          "height": 31,
          "width": 51,
        },
        Object {
          "transform": Array [
            Object {
              "scaleX": 0.75,
            },
            Object {
              "scaleY": 0.75,
            },
          ],
        },
      ]
    }
    thumbTintColor="#FFFFFF"
    tintColor="#F5F5F5"
    value={true}
  />
  <RCTSwitch
    accessibilityRole="switch"
    disabled={false}
    onChange={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTintColor="#007AFF"
    style={
      Array [
        Object {
          "height": 31,
          "width": 51,
        },
        Object {
          "transform": Array [
            Object {
              "scaleX": 0.75,
            },
            Object {
              "scaleY": 0.75,
            },
          ],
        },
      ]
    }
    thumbTintColor="#FFFFFF"
    tintColor="#F5F5F5"
    value={false}
  />
</View>
`;

exports[`Storyshots Atoms/TextInput Error 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "shadowColor": "rgba(0, 0, 0, 0.1)",
          "shadowOffset": Object {
            "height": 8,
            "width": 0,
          },
          "shadowOpacity": 1,
          "shadowRadius": 24,
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 16,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 14,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 14,
            "position": "relative",
          },
        ]
      }
    >
      <TextInput
        allowFontScaling={true}
        defaultValue="No Error"
        editable={true}
        onChangeText={[Function]}
        placeholderTextColor="#C6CACF"
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "fontSize": 14,
              "height": 22,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
            Object {},
          ]
        }
        textAlignVertical="center"
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "shadowColor": "rgba(0, 0, 0, 0.1)",
          "shadowOffset": Object {
            "height": 8,
            "width": 0,
          },
          "shadowOpacity": 1,
          "shadowRadius": 24,
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 16,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 14,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 14,
            "position": "relative",
          },
        ]
      }
    >
      <Text
        error={
          Object {
            "message": "Only error",
            "type": "max",
          }
        }
        style={
          Array [
            Object {
              "color": "#FA4339",
              "fontFamily": "NotoSansKR-Medium",
              "marginBottom": 10,
            },
          ]
        }
      >
        Only error
      </Text>
      <TextInput
        allowFontScaling={true}
        editable={true}
        error={
          Object {
            "message": "Only error",
            "type": "max",
          }
        }
        onChangeText={[Function]}
        placeholderTextColor="#C6CACF"
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "fontSize": 14,
              "height": 22,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
            Object {},
          ]
        }
        textAlignVertical="center"
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "shadowColor": "rgba(0, 0, 0, 0.1)",
          "shadowOffset": Object {
            "height": 8,
            "width": 0,
          },
          "shadowOpacity": 1,
          "shadowRadius": 24,
        },
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 16,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 14,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 14,
            "position": "relative",
          },
        ]
      }
    >
      <Text
        error={
          Object {
            "message": "Error with label",
            "type": "max",
          }
        }
        label="label"
        style={
          Array [
            Object {
              "color": "#FA4339",
              "fontFamily": "NotoSansKR-Medium",
              "marginBottom": 10,
            },
          ]
        }
      >
        Error with label
      </Text>
      <TextInput
        allowFontScaling={true}
        editable={true}
        error={
          Object {
            "message": "Error with label",
            "type": "max",
          }
        }
        label="label"
        onChangeText={[Function]}
        placeholderTextColor="#C6CACF"
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "fontSize": 14,
              "height": 22,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
            Object {},
          ]
        }
        textAlignVertical="center"
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/TextInput Label 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "shadowColor": "rgba(0, 0, 0, 0.1)",
          "shadowOffset": Object {
            "height": 8,
            "width": 0,
          },
          "shadowOpacity": 1,
          "shadowRadius": 24,
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 16,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 14,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 14,
            "position": "relative",
          },
        ]
      }
    >
      <Text
        label="Label"
        style={
          Array [
            Object {
              "color": "#C6CACF",
              "fontFamily": "NotoSansKR-Medium",
              "marginBottom": 10,
            },
          ]
        }
      >
        Label
      </Text>
      <TextInput
        allowFontScaling={true}
        defaultValue="With label"
        editable={true}
        label="Label"
        onChangeText={[Function]}
        placeholderTextColor="#C6CACF"
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "fontSize": 14,
              "height": 22,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
            Object {},
          ]
        }
        textAlignVertical="center"
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "shadowColor": "rgba(0, 0, 0, 0.1)",
          "shadowOffset": Object {
            "height": 8,
            "width": 0,
          },
          "shadowOpacity": 1,
          "shadowRadius": 24,
        },
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 16,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 14,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 14,
            "position": "relative",
          },
        ]
      }
    >
      <Text
        error={
          Object {
            "message": "Error",
            "type": "max",
          }
        }
        style={
          Array [
            Object {
              "color": "#FA4339",
              "fontFamily": "NotoSansKR-Medium",
              "marginBottom": 10,
            },
          ]
        }
      >
        Error
      </Text>
      <TextInput
        allowFontScaling={true}
        defaultValue="No label"
        editable={true}
        error={
          Object {
            "message": "Error",
            "type": "max",
          }
        }
        onChangeText={[Function]}
        placeholderTextColor="#C6CACF"
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "fontSize": 14,
              "height": 22,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
            Object {},
          ]
        }
        textAlignVertical="center"
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/TextInput Multiline 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "shadowColor": "rgba(0, 0, 0, 0.1)",
          "shadowOffset": Object {
            "height": 8,
            "width": 0,
          },
          "shadowOpacity": 1,
          "shadowRadius": 24,
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 16,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 14,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 14,
            "position": "relative",
          },
        ]
      }
    >
      <Text
        label="Single line"
        style={
          Array [
            Object {
              "color": "#C6CACF",
              "fontFamily": "NotoSansKR-Medium",
              "marginBottom": 10,
            },
          ]
        }
      >
        Single line
      </Text>
      <TextInput
        allowFontScaling={true}
        defaultValue="Single Line"
        editable={true}
        label="Single line"
        onChangeText={[Function]}
        placeholderTextColor="#C6CACF"
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "fontSize": 14,
              "height": 22,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
            Object {},
          ]
        }
        textAlignVertical="center"
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "shadowColor": "rgba(0, 0, 0, 0.1)",
          "shadowOffset": Object {
            "height": 8,
            "width": 0,
          },
          "shadowOpacity": 1,
          "shadowRadius": 24,
        },
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 16,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 14,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 14,
            "position": "relative",
          },
        ]
      }
    >
      <Text
        label="Multi line"
        style={
          Array [
            Object {
              "color": "#C6CACF",
              "fontFamily": "NotoSansKR-Medium",
              "marginBottom": 10,
            },
          ]
        }
      >
        Multi line
      </Text>
      <TextInput
        allowFontScaling={true}
        defaultValue="Multi Line Long Text Multi Line Long Text Multi Line Long Text Multi Line Long Text Multi Line Long Text "
        editable={true}
        label="Multi line"
        multiline={true}
        numberOfLines={3}
        onChangeText={[Function]}
        placeholderTextColor="#C6CACF"
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "fontSize": 14,
              "height": 66,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "textAlignVertical": "top",
            },
            Object {},
          ]
        }
        textAlignVertical="center"
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/TextInput Placeholder 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "shadowColor": "rgba(0, 0, 0, 0.1)",
          "shadowOffset": Object {
            "height": 8,
            "width": 0,
          },
          "shadowOpacity": 1,
          "shadowRadius": 24,
        },
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 16,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 14,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 14,
            "position": "relative",
          },
        ]
      }
    >
      <Text
        label="Placeholder"
        style={
          Array [
            Object {
              "color": "#C6CACF",
              "fontFamily": "NotoSansKR-Medium",
              "marginBottom": 10,
            },
          ]
        }
      >
        Placeholder
      </Text>
      <TextInput
        allowFontScaling={true}
        editable={true}
        label="Placeholder"
        onChangeText={[Function]}
        placeholder="Placeholder"
        placeholderTextColor="#C6CACF"
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "fontSize": 14,
              "height": 22,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
            Object {},
          ]
        }
        textAlignVertical="center"
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/TextInput Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "shadowColor": "rgba(0, 0, 0, 0.1)",
          "shadowOffset": Object {
            "height": 8,
            "width": 0,
          },
          "shadowOpacity": 1,
          "shadowRadius": 24,
        },
        Object {},
      ]
    }
  >
    <View
      disabled={false}
      secureTextEntry={false}
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 16,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 14,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 14,
            "position": "relative",
          },
        ]
      }
      suffix={false}
    >
      <Text
        label="Label"
        style={
          Array [
            Object {
              "color": "#C6CACF",
              "fontFamily": "NotoSansKR-Medium",
              "marginBottom": 10,
            },
          ]
        }
      >
        Label
      </Text>
      <TextInput
        allowFontScaling={true}
        defaultValue="Text Input"
        disabled={false}
        editable={true}
        label="Label"
        multiline={false}
        numberOfLines={3}
        onChangeText={[Function]}
        placeholder="placeholder"
        placeholderTextColor="#C6CACF"
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "fontSize": 14,
              "height": 22,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
            Object {},
          ]
        }
        suffix={false}
        textAlignVertical="center"
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/TextInput SecureTextEntry 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "shadowColor": "rgba(0, 0, 0, 0.1)",
          "shadowOffset": Object {
            "height": 8,
            "width": 0,
          },
          "shadowOpacity": 1,
          "shadowRadius": 24,
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 16,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 14,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 14,
            "position": "relative",
          },
        ]
      }
    >
      <Text
        label="Default"
        style={
          Array [
            Object {
              "color": "#C6CACF",
              "fontFamily": "NotoSansKR-Medium",
              "marginBottom": 10,
            },
          ]
        }
      >
        Default
      </Text>
      <TextInput
        allowFontScaling={true}
        defaultValue="Example Text"
        editable={true}
        label="Default"
        onChangeText={[Function]}
        placeholderTextColor="#C6CACF"
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "fontSize": 14,
              "height": 22,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
            Object {},
          ]
        }
        textAlignVertical="center"
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "shadowColor": "rgba(0, 0, 0, 0.1)",
          "shadowOffset": Object {
            "height": 8,
            "width": 0,
          },
          "shadowOpacity": 1,
          "shadowRadius": 24,
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      secureTextEntry={true}
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 16,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 14,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 14,
            "position": "relative",
          },
        ]
      }
    >
      <Text
        label="SecureTextEntry"
        style={
          Array [
            Object {
              "color": "#C6CACF",
              "fontFamily": "NotoSansKR-Medium",
              "marginBottom": 10,
            },
          ]
        }
      >
        SecureTextEntry
      </Text>
      <TextInput
        allowFontScaling={true}
        defaultValue="Example Text"
        editable={true}
        label="SecureTextEntry"
        onChangeText={[Function]}
        placeholderTextColor="#C6CACF"
        rejectResponderTermination={true}
        secureTextEntry={true}
        style={
          Array [
            Object {
              "fontSize": 14,
              "height": 22,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
            Object {},
          ]
        }
        textAlignVertical="center"
        underlineColorAndroid="transparent"
      />
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": -4,
            "marginLeft": -4,
            "marginRight": -4,
            "marginTop": -4,
            "opacity": 1,
            "paddingBottom": 4,
            "paddingLeft": 4,
            "paddingRight": 4,
            "paddingTop": 4,
            "position": "absolute",
            "right": 8,
          }
        }
      >
        <Image
          disabled={false}
          source={
            Object {
              "testUri": "../../../src/assets/icons/eye/eye-opened.png",
            }
          }
          style={
            Array [
              Object {
                "height": 24,
                "width": 24,
              },
              Object {},
            ]
          }
        />
      </View>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "shadowColor": "rgba(0, 0, 0, 0.1)",
          "shadowOffset": Object {
            "height": 8,
            "width": 0,
          },
          "shadowOpacity": 1,
          "shadowRadius": 24,
        },
        Object {},
      ]
    }
  >
    <View
      disabled={true}
      secureTextEntry={true}
      style={
        Array [
          Object {
            "backgroundColor": "#F5F5F5",
            "borderColor": "#D9D9D9",
            "borderRadius": 16,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 14,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 14,
            "position": "relative",
          },
        ]
      }
    >
      <Text
        label="SecureTextEntry Disabled"
        style={
          Array [
            Object {
              "color": "#C6CACF",
              "fontFamily": "NotoSansKR-Medium",
              "marginBottom": 10,
            },
          ]
        }
      >
        SecureTextEntry Disabled
      </Text>
      <TextInput
        allowFontScaling={true}
        defaultValue="Example Text"
        disabled={true}
        editable={false}
        label="SecureTextEntry Disabled"
        onChangeText={[Function]}
        placeholderTextColor="#C6CACF"
        rejectResponderTermination={true}
        secureTextEntry={true}
        style={
          Array [
            Object {
              "color": "#8C8C8C",
              "fontSize": 14,
              "height": 22,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
            Object {},
          ]
        }
        textAlignVertical="center"
        underlineColorAndroid="transparent"
      />
      <View
        accessible={true}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": -4,
            "marginLeft": -4,
            "marginRight": -4,
            "marginTop": -4,
            "opacity": 1,
            "paddingBottom": 4,
            "paddingLeft": 4,
            "paddingRight": 4,
            "paddingTop": 4,
            "position": "absolute",
            "right": 8,
          }
        }
      >
        <Image
          disabled={true}
          source={
            Object {
              "testUri": "../../../src/assets/icons/eye/eye-opened.png",
            }
          }
          style={
            Array [
              Object {
                "height": 24,
                "opacity": 0.5,
                "width": 24,
              },
              Object {},
            ]
          }
        />
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/TextInput Success 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "shadowColor": "rgba(0, 0, 0, 0.1)",
          "shadowOffset": Object {
            "height": 8,
            "width": 0,
          },
          "shadowOpacity": 1,
          "shadowRadius": 24,
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 16,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 14,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 14,
            "position": "relative",
          },
        ]
      }
    >
      <TextInput
        allowFontScaling={true}
        defaultValue="No success"
        editable={true}
        onChangeText={[Function]}
        placeholderTextColor="#C6CACF"
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "fontSize": 14,
              "height": 22,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
            Object {},
          ]
        }
        textAlignVertical="center"
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "shadowColor": "rgba(0, 0, 0, 0.1)",
          "shadowOffset": Object {
            "height": 8,
            "width": 0,
          },
          "shadowOpacity": 1,
          "shadowRadius": 24,
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 16,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 14,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 14,
            "position": "relative",
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#48CF7C",
              "fontFamily": "NotoSansKR-Medium",
              "marginBottom": 10,
            },
          ]
        }
        success="Only success"
      >
        Only success
      </Text>
      <TextInput
        allowFontScaling={true}
        editable={true}
        onChangeText={[Function]}
        placeholderTextColor="#C6CACF"
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "fontSize": 14,
              "height": 22,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
            Object {},
          ]
        }
        success="Only success"
        textAlignVertical="center"
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "shadowColor": "rgba(0, 0, 0, 0.1)",
          "shadowOffset": Object {
            "height": 8,
            "width": 0,
          },
          "shadowOpacity": 1,
          "shadowRadius": 24,
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 16,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 14,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 14,
            "position": "relative",
          },
        ]
      }
    >
      <Text
        label="label"
        style={
          Array [
            Object {
              "color": "#48CF7C",
              "fontFamily": "NotoSansKR-Medium",
              "marginBottom": 10,
            },
          ]
        }
        success="Success with label"
      >
        Success with label
      </Text>
      <TextInput
        allowFontScaling={true}
        editable={true}
        label="label"
        onChangeText={[Function]}
        placeholderTextColor="#C6CACF"
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "fontSize": 14,
              "height": 22,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
            Object {},
          ]
        }
        success="Success with label"
        textAlignVertical="center"
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "shadowColor": "rgba(0, 0, 0, 0.1)",
          "shadowOffset": Object {
            "height": 8,
            "width": 0,
          },
          "shadowOpacity": 1,
          "shadowRadius": 24,
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 16,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 14,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 14,
            "position": "relative",
          },
        ]
      }
    >
      <Text
        error={
          Object {
            "message": "error",
            "type": "max",
          }
        }
        style={
          Array [
            Object {
              "color": "#48CF7C",
              "fontFamily": "NotoSansKR-Medium",
              "marginBottom": 10,
            },
          ]
        }
        success="Success with error"
      >
        Success with error
      </Text>
      <TextInput
        allowFontScaling={true}
        editable={true}
        error={
          Object {
            "message": "error",
            "type": "max",
          }
        }
        onChangeText={[Function]}
        placeholderTextColor="#C6CACF"
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "fontSize": 14,
              "height": 22,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
            Object {},
          ]
        }
        success="Success with error"
        textAlignVertical="center"
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "shadowColor": "rgba(0, 0, 0, 0.1)",
          "shadowOffset": Object {
            "height": 8,
            "width": 0,
          },
          "shadowOpacity": 1,
          "shadowRadius": 24,
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 16,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 14,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 14,
            "position": "relative",
          },
        ]
      }
    >
      <Text
        error={
          Object {
            "message": "error",
            "type": "max",
          }
        }
        label="label"
        style={
          Array [
            Object {
              "color": "#48CF7C",
              "fontFamily": "NotoSansKR-Medium",
              "marginBottom": 10,
            },
          ]
        }
        success="Success with label, error"
      >
        Success with label, error
      </Text>
      <TextInput
        allowFontScaling={true}
        editable={true}
        error={
          Object {
            "message": "error",
            "type": "max",
          }
        }
        label="label"
        onChangeText={[Function]}
        placeholderTextColor="#C6CACF"
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "fontSize": 14,
              "height": 22,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
            Object {},
          ]
        }
        success="Success with label, error"
        textAlignVertical="center"
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/TextInput Suffix 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "shadowColor": "rgba(0, 0, 0, 0.1)",
          "shadowOffset": Object {
            "height": 8,
            "width": 0,
          },
          "shadowOpacity": 1,
          "shadowRadius": 24,
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderBottomRightRadius": 0,
            "borderRadius": 16,
            "borderTopRightRadius": 0,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 14,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 14,
            "position": "relative",
          },
        ]
      }
      suffix="Suffix"
    >
      <Text
        label="String Suffix"
        style={
          Array [
            Object {
              "color": "#C6CACF",
              "fontFamily": "NotoSansKR-Medium",
              "marginBottom": 10,
            },
          ]
        }
      >
        String Suffix
      </Text>
      <TextInput
        allowFontScaling={true}
        defaultValue="Text Input with Suffix"
        editable={true}
        label="String Suffix"
        onChangeText={[Function]}
        placeholderTextColor="#C6CACF"
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "fontSize": 14,
              "height": 22,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
            Object {},
          ]
        }
        suffix="Suffix"
        textAlignVertical="center"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderBottomRightRadius": 16,
            "borderTopRightRadius": 16,
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 24,
            "paddingRight": 24,
            "paddingTop": 8,
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#1F1F1F",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
            },
          ]
        }
      >
        Suffix
      </Text>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "shadowColor": "rgba(0, 0, 0, 0.1)",
          "shadowOffset": Object {
            "height": 8,
            "width": 0,
          },
          "shadowOpacity": 1,
          "shadowRadius": 24,
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderBottomRightRadius": 0,
            "borderRadius": 16,
            "borderTopRightRadius": 0,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 14,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 14,
            "position": "relative",
          },
        ]
      }
      suffix={<Checkbox />}
    >
      <Text
        label="ReactNode Suffix"
        style={
          Array [
            Object {
              "color": "#C6CACF",
              "fontFamily": "NotoSansKR-Medium",
              "marginBottom": 10,
            },
          ]
        }
      >
        ReactNode Suffix
      </Text>
      <TextInput
        allowFontScaling={true}
        defaultValue="Text Input with Suffix"
        editable={true}
        label="ReactNode Suffix"
        onChangeText={[Function]}
        placeholderTextColor="#C6CACF"
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "fontSize": 14,
              "height": 22,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
            Object {},
          ]
        }
        suffix={<Checkbox />}
        textAlignVertical="center"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "borderBottomRightRadius": 16,
            "borderTopRightRadius": 16,
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 24,
            "paddingRight": 24,
            "paddingTop": 8,
          },
        ]
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "opacity": 1,
          }
        }
      >
        <Image
          source={
            Object {
              "testUri": "../../../src/assets/icons/checkbox/checkbox-unchecked.png",
            }
          }
          style={
            Array [
              Object {
                "height": 24,
                "width": 24,
              },
              Object {
                "marginRight": 4,
              },
            ]
          }
        />
      </View>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "shadowColor": "rgba(0, 0, 0, 0.1)",
          "shadowOffset": Object {
            "height": 8,
            "width": 0,
          },
          "shadowOpacity": 1,
          "shadowRadius": 24,
        },
        Object {},
      ]
    }
  >
    <View
      disabled={true}
      style={
        Array [
          Object {
            "backgroundColor": "#F5F5F5",
            "borderBottomRightRadius": 0,
            "borderColor": "#D9D9D9",
            "borderRadius": 16,
            "borderTopRightRadius": 0,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 14,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 14,
            "position": "relative",
          },
        ]
      }
      suffix="Suffix"
    >
      <Text
        label="String Suffix Disabled"
        style={
          Array [
            Object {
              "color": "#C6CACF",
              "fontFamily": "NotoSansKR-Medium",
              "marginBottom": 10,
            },
          ]
        }
      >
        String Suffix Disabled
      </Text>
      <TextInput
        allowFontScaling={true}
        defaultValue="Text Input with Suffix"
        disabled={true}
        editable={false}
        label="String Suffix Disabled"
        onChangeText={[Function]}
        placeholderTextColor="#C6CACF"
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "color": "#8C8C8C",
              "fontSize": 14,
              "height": 22,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
            Object {},
          ]
        }
        suffix="Suffix"
        textAlignVertical="center"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      disabled={true}
      style={
        Array [
          Object {
            "backgroundColor": "#F5F5F5",
            "borderBottomRightRadius": 16,
            "borderTopRightRadius": 16,
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 24,
            "paddingRight": 24,
            "paddingTop": 8,
          },
        ]
      }
    >
      <Text
        disabled={true}
        style={
          Array [
            Object {
              "color": "#8C8C8C",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
            },
          ]
        }
      >
        Suffix
      </Text>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "shadowColor": "rgba(0, 0, 0, 0.1)",
          "shadowOffset": Object {
            "height": 8,
            "width": 0,
          },
          "shadowOpacity": 1,
          "shadowRadius": 24,
        },
        Object {
          "marginBottom": 5,
        },
      ]
    }
  >
    <View
      disabled={true}
      style={
        Array [
          Object {
            "backgroundColor": "#F5F5F5",
            "borderBottomRightRadius": 0,
            "borderColor": "#D9D9D9",
            "borderRadius": 16,
            "borderTopRightRadius": 0,
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 14,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 14,
            "position": "relative",
          },
        ]
      }
      suffix={<Checkbox />}
    >
      <Text
        label="ReactNode Suffix Disabled"
        style={
          Array [
            Object {
              "color": "#C6CACF",
              "fontFamily": "NotoSansKR-Medium",
              "marginBottom": 10,
            },
          ]
        }
      >
        ReactNode Suffix Disabled
      </Text>
      <TextInput
        allowFontScaling={true}
        defaultValue="Text Input with Suffix"
        disabled={true}
        editable={false}
        label="ReactNode Suffix Disabled"
        onChangeText={[Function]}
        placeholderTextColor="#C6CACF"
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "color": "#8C8C8C",
              "fontSize": 14,
              "height": 22,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
            Object {},
          ]
        }
        suffix={<Checkbox />}
        textAlignVertical="center"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      disabled={true}
      style={
        Array [
          Object {
            "backgroundColor": "#F5F5F5",
            "borderBottomRightRadius": 16,
            "borderTopRightRadius": 16,
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 24,
            "paddingRight": 24,
            "paddingTop": 8,
          },
        ]
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "opacity": 1,
          }
        }
      >
        <Image
          source={
            Object {
              "testUri": "../../../src/assets/icons/checkbox/checkbox-unchecked.png",
            }
          }
          style={
            Array [
              Object {
                "height": 24,
                "width": 24,
              },
              Object {
                "marginRight": 4,
              },
            ]
          }
        />
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Toast Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        Array [
          Object {
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
            "width": "100%",
          },
        ],
      ]
    }
  />
</View>
`;

exports[`Storyshots Atoms/Toast ToastPosition 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        Array [
          Object {
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
            "width": "100%",
          },
        ],
      ]
    }
  />
</View>
`;

exports[`Storyshots Atoms/Tooltip Offset 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "position": "relative",
        },
      ]
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderRadius": 1000,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 14,
            "paddingLeft": 24,
            "paddingRight": 24,
            "paddingTop": 14,
            "width": "100%",
          },
          Object {
            "backgroundColor": "#EEF2F6",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          includeFontPadding={false}
          pressed={false}
          style={
            Array [
              Object {
                "color": "#5F656A",
                "fontFamily": "NotoSansKR-Medium",
                "fontSize": 16,
                "lineHeight": 26,
                "textAlign": "center",
              },
            ]
          }
          textColor="#5F656A"
          textDisabledColor="#C6CACF"
        >
          Sample Button
        </Text>
      </View>
    </View>
    <View
      layoutHeight={0}
      layoutWidth={0}
      location="top"
      offset={10}
      style={
        Array [
          Object {
            "alignSelf": "center",
            "bottom": 10,
            "position": "absolute",
          },
        ]
      }
      tailPosition="center"
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#2E3032",
              "borderRadius": 20,
              "paddingBottom": 10,
              "paddingLeft": 10,
              "paddingRight": 10,
              "paddingTop": 10,
            },
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#FFFFFF",
              },
            ]
          }
        >
          Tooltip
        </Text>
      </View>
      <View
        location="top"
        style={
          Array [
            Object {
              "alignSelf": "center",
              "borderBottomWidth": 0,
              "borderColor": "transparent",
              "borderLeftWidth": 6,
              "borderRightWidth": 6,
              "borderTopColor": "#2E3032",
              "borderTopWidth": 12,
              "bottom": -10,
              "height": 0,
              "position": "absolute",
              "width": 0,
            },
          ]
        }
        tailPosition="center"
      />
    </View>
  </View>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "position": "relative",
        },
      ]
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderRadius": 1000,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 14,
            "paddingLeft": 24,
            "paddingRight": 24,
            "paddingTop": 14,
            "width": "100%",
          },
          Object {
            "backgroundColor": "#EEF2F6",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          includeFontPadding={false}
          pressed={false}
          style={
            Array [
              Object {
                "color": "#5F656A",
                "fontFamily": "NotoSansKR-Medium",
                "fontSize": 16,
                "lineHeight": 26,
                "textAlign": "center",
              },
            ]
          }
          textColor="#5F656A"
          textDisabledColor="#C6CACF"
        >
          Sample Button
        </Text>
      </View>
    </View>
    <View
      layoutHeight={0}
      layoutWidth={0}
      location="bottom"
      offset={20}
      style={
        Array [
          Object {
            "alignSelf": "center",
            "position": "absolute",
            "top": 20,
          },
        ]
      }
      tailPosition="center"
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#2E3032",
              "borderRadius": 20,
              "paddingBottom": 10,
              "paddingLeft": 10,
              "paddingRight": 10,
              "paddingTop": 10,
            },
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#FFFFFF",
              },
            ]
          }
        >
          Tooltip with larger offset
        </Text>
      </View>
      <View
        location="bottom"
        style={
          Array [
            Object {
              "alignSelf": "center",
              "borderBottomColor": "#2E3032",
              "borderBottomWidth": 12,
              "borderColor": "transparent",
              "borderLeftWidth": 6,
              "borderRightWidth": 6,
              "borderTopWidth": 0,
              "height": 0,
              "position": "absolute",
              "top": -10,
              "width": 0,
            },
          ]
        }
        tailPosition="center"
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Tooltip Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "position": "relative",
        },
      ]
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderRadius": 1000,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 14,
            "paddingLeft": 24,
            "paddingRight": 24,
            "paddingTop": 14,
            "width": "100%",
          },
          Object {
            "backgroundColor": "#EEF2F6",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          includeFontPadding={false}
          pressed={false}
          style={
            Array [
              Object {
                "color": "#5F656A",
                "fontFamily": "NotoSansKR-Medium",
                "fontSize": 16,
                "lineHeight": 26,
                "textAlign": "center",
              },
            ]
          }
          textColor="#5F656A"
          textDisabledColor="#C6CACF"
        >
          Sample Button
        </Text>
      </View>
    </View>
    <View
      layoutHeight={0}
      layoutWidth={0}
      location="bottom"
      offset={10}
      style={
        Array [
          Object {
            "alignSelf": "center",
            "position": "absolute",
            "top": 10,
          },
        ]
      }
      tailPosition="center"
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#2E3032",
              "borderRadius": 20,
              "paddingBottom": 10,
              "paddingLeft": 10,
              "paddingRight": 10,
              "paddingTop": 10,
            },
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#FFFFFF",
              },
            ]
          }
        >
          Tooltip
        </Text>
      </View>
      <View
        location="bottom"
        style={
          Array [
            Object {
              "alignSelf": "center",
              "borderBottomColor": "#2E3032",
              "borderBottomWidth": 12,
              "borderColor": "transparent",
              "borderLeftWidth": 6,
              "borderRightWidth": 6,
              "borderTopWidth": 0,
              "height": 0,
              "position": "absolute",
              "top": -10,
              "width": 0,
            },
          ]
        }
        tailPosition="center"
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Tooltip Position 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "position": "relative",
        },
      ]
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderRadius": 1000,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 14,
            "paddingLeft": 24,
            "paddingRight": 24,
            "paddingTop": 14,
            "width": "100%",
          },
          Object {
            "backgroundColor": "#EEF2F6",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          includeFontPadding={false}
          pressed={false}
          style={
            Array [
              Object {
                "color": "#5F656A",
                "fontFamily": "NotoSansKR-Medium",
                "fontSize": 16,
                "lineHeight": 26,
                "textAlign": "center",
              },
            ]
          }
          textColor="#5F656A"
          textDisabledColor="#C6CACF"
        >
          Sample Button
        </Text>
      </View>
    </View>
    <View
      layoutHeight={0}
      layoutWidth={0}
      location="top"
      offset={10}
      style={
        Array [
          Object {
            "alignSelf": "center",
            "bottom": 10,
            "position": "absolute",
          },
        ]
      }
      tailPosition="center"
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#2E3032",
              "borderRadius": 20,
              "paddingBottom": 10,
              "paddingLeft": 10,
              "paddingRight": 10,
              "paddingTop": 10,
            },
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#FFFFFF",
              },
            ]
          }
        >
          Top Tooltip
        </Text>
      </View>
      <View
        location="top"
        style={
          Array [
            Object {
              "alignSelf": "center",
              "borderBottomWidth": 0,
              "borderColor": "transparent",
              "borderLeftWidth": 6,
              "borderRightWidth": 6,
              "borderTopColor": "#2E3032",
              "borderTopWidth": 12,
              "bottom": -10,
              "height": 0,
              "position": "absolute",
              "width": 0,
            },
          ]
        }
        tailPosition="center"
      />
    </View>
  </View>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "position": "relative",
        },
      ]
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderRadius": 1000,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 14,
            "paddingLeft": 24,
            "paddingRight": 24,
            "paddingTop": 14,
            "width": "100%",
          },
          Object {
            "backgroundColor": "#EEF2F6",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          includeFontPadding={false}
          pressed={false}
          style={
            Array [
              Object {
                "color": "#5F656A",
                "fontFamily": "NotoSansKR-Medium",
                "fontSize": 16,
                "lineHeight": 26,
                "textAlign": "center",
              },
            ]
          }
          textColor="#5F656A"
          textDisabledColor="#C6CACF"
        >
          Sample Button
        </Text>
      </View>
    </View>
    <View
      layoutHeight={0}
      layoutWidth={0}
      location="right"
      offset={10}
      style={
        Array [
          Object {
            "height": 0,
            "justifyContent": "center",
            "left": 10,
            "position": "absolute",
          },
        ]
      }
      tailPosition="center"
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#2E3032",
              "borderRadius": 20,
              "paddingBottom": 10,
              "paddingLeft": 10,
              "paddingRight": 10,
              "paddingTop": 10,
            },
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#FFFFFF",
              },
            ]
          }
        >
          Right Tooltip
        </Text>
      </View>
      <View
        location="right"
        style={
          Array [
            Object {
              "height": "100%",
              "justifyContent": "center",
              "left": -10,
              "position": "absolute",
            },
          ]
        }
        tailPosition="center"
      >
        <View
          location="right"
          style={
            Array [
              Object {
                "borderBottomWidth": 6,
                "borderColor": "transparent",
                "borderLeftWidth": 0,
                "borderRightColor": "#2E3032",
                "borderRightWidth": 12,
                "borderTopWidth": 6,
                "height": 0,
                "width": 0,
              },
            ]
          }
          tailPosition="center"
        />
      </View>
    </View>
  </View>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "position": "relative",
        },
      ]
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderRadius": 1000,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 14,
            "paddingLeft": 24,
            "paddingRight": 24,
            "paddingTop": 14,
            "width": "100%",
          },
          Object {
            "backgroundColor": "#EEF2F6",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          includeFontPadding={false}
          pressed={false}
          style={
            Array [
              Object {
                "color": "#5F656A",
                "fontFamily": "NotoSansKR-Medium",
                "fontSize": 16,
                "lineHeight": 26,
                "textAlign": "center",
              },
            ]
          }
          textColor="#5F656A"
          textDisabledColor="#C6CACF"
        >
          Sample Button
        </Text>
      </View>
    </View>
    <View
      layoutHeight={0}
      layoutWidth={0}
      location="left"
      offset={10}
      style={
        Array [
          Object {
            "height": 0,
            "justifyContent": "center",
            "position": "absolute",
            "right": 10,
          },
        ]
      }
      tailPosition="center"
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#2E3032",
              "borderRadius": 20,
              "paddingBottom": 10,
              "paddingLeft": 10,
              "paddingRight": 10,
              "paddingTop": 10,
            },
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#FFFFFF",
              },
            ]
          }
        >
          Left Tooltip
        </Text>
      </View>
      <View
        location="left"
        style={
          Array [
            Object {
              "height": "100%",
              "justifyContent": "center",
              "position": "absolute",
              "right": -10,
            },
          ]
        }
        tailPosition="center"
      >
        <View
          location="left"
          style={
            Array [
              Object {
                "borderBottomWidth": 6,
                "borderColor": "transparent",
                "borderLeftColor": "#2E3032",
                "borderLeftWidth": 12,
                "borderRightWidth": 0,
                "borderTopWidth": 6,
                "height": 0,
                "width": 0,
              },
            ]
          }
          tailPosition="center"
        />
      </View>
    </View>
  </View>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "position": "relative",
        },
      ]
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderRadius": 1000,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 14,
            "paddingLeft": 24,
            "paddingRight": 24,
            "paddingTop": 14,
            "width": "100%",
          },
          Object {
            "backgroundColor": "#EEF2F6",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          includeFontPadding={false}
          pressed={false}
          style={
            Array [
              Object {
                "color": "#5F656A",
                "fontFamily": "NotoSansKR-Medium",
                "fontSize": 16,
                "lineHeight": 26,
                "textAlign": "center",
              },
            ]
          }
          textColor="#5F656A"
          textDisabledColor="#C6CACF"
        >
          Sample Button
        </Text>
      </View>
    </View>
    <View
      layoutHeight={0}
      layoutWidth={0}
      location="bottom"
      offset={10}
      style={
        Array [
          Object {
            "alignSelf": "center",
            "position": "absolute",
            "top": 10,
          },
        ]
      }
      tailPosition="center"
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#2E3032",
              "borderRadius": 20,
              "paddingBottom": 10,
              "paddingLeft": 10,
              "paddingRight": 10,
              "paddingTop": 10,
            },
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#FFFFFF",
              },
            ]
          }
        >
          Bottom Tooltip
        </Text>
      </View>
      <View
        location="bottom"
        style={
          Array [
            Object {
              "alignSelf": "center",
              "borderBottomColor": "#2E3032",
              "borderBottomWidth": 12,
              "borderColor": "transparent",
              "borderLeftWidth": 6,
              "borderRightWidth": 6,
              "borderTopWidth": 0,
              "height": 0,
              "position": "absolute",
              "top": -10,
              "width": 0,
            },
          ]
        }
        tailPosition="center"
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Tooltip TailPosition 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-around",
        "width": "100%",
      }
    }
  >
    <View
      onLayout={[Function]}
      style={
        Array [
          Object {
            "position": "relative",
          },
        ]
      }
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 1000,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 14,
              "paddingLeft": 24,
              "paddingRight": 24,
              "paddingTop": 14,
              "width": "100%",
            },
            Object {
              "backgroundColor": "#EEF2F6",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            includeFontPadding={false}
            pressed={false}
            style={
              Array [
                Object {
                  "color": "#5F656A",
                  "fontFamily": "NotoSansKR-Medium",
                  "fontSize": 16,
                  "lineHeight": 26,
                  "textAlign": "center",
                },
              ]
            }
            textColor="#5F656A"
            textDisabledColor="#C6CACF"
          >
            Button
          </Text>
        </View>
      </View>
      <View
        layoutHeight={0}
        layoutWidth={0}
        location="top"
        offset={10}
        style={
          Array [
            Object {
              "alignSelf": "center",
              "bottom": 10,
              "position": "absolute",
            },
          ]
        }
        tailPosition="left"
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#2E3032",
                "borderRadius": 20,
                "paddingBottom": 10,
                "paddingLeft": 10,
                "paddingRight": 10,
                "paddingTop": 10,
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                },
              ]
            }
          >
            TopLeft Tooltip
          </Text>
        </View>
        <View
          location="top"
          style={
            Array [
              Object {
                "borderBottomWidth": 0,
                "borderColor": "transparent",
                "borderLeftWidth": 6,
                "borderRightWidth": 6,
                "borderTopColor": "#2E3032",
                "borderTopWidth": 12,
                "bottom": -10,
                "height": 0,
                "left": 18,
                "position": "absolute",
                "width": 0,
              },
            ]
          }
          tailPosition="left"
        />
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={
        Array [
          Object {
            "position": "relative",
          },
        ]
      }
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 1000,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 14,
              "paddingLeft": 24,
              "paddingRight": 24,
              "paddingTop": 14,
              "width": "100%",
            },
            Object {
              "backgroundColor": "#EEF2F6",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            includeFontPadding={false}
            pressed={false}
            style={
              Array [
                Object {
                  "color": "#5F656A",
                  "fontFamily": "NotoSansKR-Medium",
                  "fontSize": 16,
                  "lineHeight": 26,
                  "textAlign": "center",
                },
              ]
            }
            textColor="#5F656A"
            textDisabledColor="#C6CACF"
          >
            Button
          </Text>
        </View>
      </View>
      <View
        layoutHeight={0}
        layoutWidth={0}
        location="top"
        offset={10}
        style={
          Array [
            Object {
              "alignSelf": "center",
              "bottom": 10,
              "position": "absolute",
            },
          ]
        }
        tailPosition="center"
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#2E3032",
                "borderRadius": 20,
                "paddingBottom": 10,
                "paddingLeft": 10,
                "paddingRight": 10,
                "paddingTop": 10,
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                },
              ]
            }
          >
            TopCenter Tooltip
          </Text>
        </View>
        <View
          location="top"
          style={
            Array [
              Object {
                "alignSelf": "center",
                "borderBottomWidth": 0,
                "borderColor": "transparent",
                "borderLeftWidth": 6,
                "borderRightWidth": 6,
                "borderTopColor": "#2E3032",
                "borderTopWidth": 12,
                "bottom": -10,
                "height": 0,
                "position": "absolute",
                "width": 0,
              },
            ]
          }
          tailPosition="center"
        />
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={
        Array [
          Object {
            "position": "relative",
          },
        ]
      }
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 1000,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 14,
              "paddingLeft": 24,
              "paddingRight": 24,
              "paddingTop": 14,
              "width": "100%",
            },
            Object {
              "backgroundColor": "#EEF2F6",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            includeFontPadding={false}
            pressed={false}
            style={
              Array [
                Object {
                  "color": "#5F656A",
                  "fontFamily": "NotoSansKR-Medium",
                  "fontSize": 16,
                  "lineHeight": 26,
                  "textAlign": "center",
                },
              ]
            }
            textColor="#5F656A"
            textDisabledColor="#C6CACF"
          >
            Button
          </Text>
        </View>
      </View>
      <View
        layoutHeight={0}
        layoutWidth={0}
        location="top"
        offset={10}
        style={
          Array [
            Object {
              "alignSelf": "center",
              "bottom": 10,
              "position": "absolute",
            },
          ]
        }
        tailPosition="right"
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#2E3032",
                "borderRadius": 20,
                "paddingBottom": 10,
                "paddingLeft": 10,
                "paddingRight": 10,
                "paddingTop": 10,
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                },
              ]
            }
          >
            TopRight Tooltip
          </Text>
        </View>
        <View
          location="top"
          style={
            Array [
              Object {
                "borderBottomWidth": 0,
                "borderColor": "transparent",
                "borderLeftWidth": 6,
                "borderRightWidth": 6,
                "borderTopColor": "#2E3032",
                "borderTopWidth": 12,
                "bottom": -10,
                "height": 0,
                "position": "absolute",
                "right": 18,
                "width": 0,
              },
            ]
          }
          tailPosition="right"
        />
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-around",
        "width": "100%",
      }
    }
  >
    <View
      onLayout={[Function]}
      style={
        Array [
          Object {
            "position": "relative",
          },
        ]
      }
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 1000,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 14,
              "paddingLeft": 24,
              "paddingRight": 24,
              "paddingTop": 14,
              "width": "100%",
            },
            Object {
              "backgroundColor": "#EEF2F6",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            includeFontPadding={false}
            pressed={false}
            style={
              Array [
                Object {
                  "color": "#5F656A",
                  "fontFamily": "NotoSansKR-Medium",
                  "fontSize": 16,
                  "lineHeight": 26,
                  "textAlign": "center",
                },
              ]
            }
            textColor="#5F656A"
            textDisabledColor="#C6CACF"
          >
            Button
          </Text>
        </View>
      </View>
      <View
        layoutHeight={0}
        layoutWidth={0}
        location="bottom"
        offset={10}
        style={
          Array [
            Object {
              "alignSelf": "center",
              "position": "absolute",
              "top": 10,
            },
          ]
        }
        tailPosition="left"
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#2E3032",
                "borderRadius": 20,
                "paddingBottom": 10,
                "paddingLeft": 10,
                "paddingRight": 10,
                "paddingTop": 10,
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                },
              ]
            }
          >
            BottomLeft Tooltip
          </Text>
        </View>
        <View
          location="bottom"
          style={
            Array [
              Object {
                "borderBottomColor": "#2E3032",
                "borderBottomWidth": 12,
                "borderColor": "transparent",
                "borderLeftWidth": 6,
                "borderRightWidth": 6,
                "borderTopWidth": 0,
                "height": 0,
                "left": 18,
                "position": "absolute",
                "top": -10,
                "width": 0,
              },
            ]
          }
          tailPosition="left"
        />
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={
        Array [
          Object {
            "position": "relative",
          },
        ]
      }
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 1000,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 14,
              "paddingLeft": 24,
              "paddingRight": 24,
              "paddingTop": 14,
              "width": "100%",
            },
            Object {
              "backgroundColor": "#EEF2F6",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            includeFontPadding={false}
            pressed={false}
            style={
              Array [
                Object {
                  "color": "#5F656A",
                  "fontFamily": "NotoSansKR-Medium",
                  "fontSize": 16,
                  "lineHeight": 26,
                  "textAlign": "center",
                },
              ]
            }
            textColor="#5F656A"
            textDisabledColor="#C6CACF"
          >
            Button
          </Text>
        </View>
      </View>
      <View
        layoutHeight={0}
        layoutWidth={0}
        location="bottom"
        offset={10}
        style={
          Array [
            Object {
              "alignSelf": "center",
              "position": "absolute",
              "top": 10,
            },
          ]
        }
        tailPosition="center"
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#2E3032",
                "borderRadius": 20,
                "paddingBottom": 10,
                "paddingLeft": 10,
                "paddingRight": 10,
                "paddingTop": 10,
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                },
              ]
            }
          >
            BottomCenter Tooltip
          </Text>
        </View>
        <View
          location="bottom"
          style={
            Array [
              Object {
                "alignSelf": "center",
                "borderBottomColor": "#2E3032",
                "borderBottomWidth": 12,
                "borderColor": "transparent",
                "borderLeftWidth": 6,
                "borderRightWidth": 6,
                "borderTopWidth": 0,
                "height": 0,
                "position": "absolute",
                "top": -10,
                "width": 0,
              },
            ]
          }
          tailPosition="center"
        />
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={
        Array [
          Object {
            "position": "relative",
          },
        ]
      }
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 1000,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 14,
              "paddingLeft": 24,
              "paddingRight": 24,
              "paddingTop": 14,
              "width": "100%",
            },
            Object {
              "backgroundColor": "#EEF2F6",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            includeFontPadding={false}
            pressed={false}
            style={
              Array [
                Object {
                  "color": "#5F656A",
                  "fontFamily": "NotoSansKR-Medium",
                  "fontSize": 16,
                  "lineHeight": 26,
                  "textAlign": "center",
                },
              ]
            }
            textColor="#5F656A"
            textDisabledColor="#C6CACF"
          >
            Button
          </Text>
        </View>
      </View>
      <View
        layoutHeight={0}
        layoutWidth={0}
        location="bottom"
        offset={10}
        style={
          Array [
            Object {
              "alignSelf": "center",
              "position": "absolute",
              "top": 10,
            },
          ]
        }
        tailPosition="right"
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#2E3032",
                "borderRadius": 20,
                "paddingBottom": 10,
                "paddingLeft": 10,
                "paddingRight": 10,
                "paddingTop": 10,
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                },
              ]
            }
          >
            BottomRight Tooltip
          </Text>
        </View>
        <View
          location="bottom"
          style={
            Array [
              Object {
                "borderBottomColor": "#2E3032",
                "borderBottomWidth": 12,
                "borderColor": "transparent",
                "borderLeftWidth": 6,
                "borderRightWidth": 6,
                "borderTopWidth": 0,
                "height": 0,
                "position": "absolute",
                "right": 18,
                "top": -10,
                "width": 0,
              },
            ]
          }
          tailPosition="right"
        />
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Typography Color 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <Text
    size={3}
    style={
      Array [
        Object {
          "color": "black",
          "fontFamily": "NotoSansKR-Bold",
          "fontSize": 24,
          "lineHeight": 35,
        },
      ]
    }
  >
    Default Heading
  </Text>
  <Text
    color="#007AFF"
    size={3}
    style={
      Array [
        Object {
          "color": "#007AFF",
          "fontFamily": "NotoSansKR-Bold",
          "fontSize": 24,
          "lineHeight": 35,
        },
      ]
    }
  >
    Primary Heading
  </Text>
  <Text
    color="#48CF7C"
    size={3}
    style={
      Array [
        Object {
          "color": "#48CF7C",
          "fontFamily": "NotoSansKR-Bold",
          "fontSize": 24,
          "lineHeight": 35,
        },
      ]
    }
  >
    Success Heading
  </Text>
  <Text
    color="#FA4339"
    size={3}
    style={
      Array [
        Object {
          "color": "#FA4339",
          "fontFamily": "NotoSansKR-Bold",
          "fontSize": 24,
          "lineHeight": 35,
        },
      ]
    }
  >
    Error Heading
  </Text>
  <Text
    color="black"
    size={1}
    style={
      Array [
        Object {
          "color": "black",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Regular",
          "fontSize": 16,
          "lineHeight": 26,
        },
      ]
    }
  >
    Default Paragraph
  </Text>
  <Text
    color="#007AFF"
    size={1}
    style={
      Array [
        Object {
          "color": "#007AFF",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Regular",
          "fontSize": 16,
          "lineHeight": 26,
        },
      ]
    }
  >
    Primary Paragraph
  </Text>
  <Text
    color="#48CF7C"
    size={1}
    style={
      Array [
        Object {
          "color": "#48CF7C",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Regular",
          "fontSize": 16,
          "lineHeight": 26,
        },
      ]
    }
  >
    Success Paragraph
  </Text>
  <Text
    color="#FA4339"
    size={1}
    style={
      Array [
        Object {
          "color": "#FA4339",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Regular",
          "fontSize": 16,
          "lineHeight": 26,
        },
      ]
    }
  >
    Error Paragraph
  </Text>
  <Text
    color="black"
    style={
      Array [
        Object {
          "color": "black",
          "fontFamily": "NotoSansKR-Medium",
          "fontSize": 12,
          "lineHeight": 19,
        },
      ]
    }
  >
    Default Caption
  </Text>
  <Text
    color="#007AFF"
    style={
      Array [
        Object {
          "color": "#007AFF",
          "fontFamily": "NotoSansKR-Medium",
          "fontSize": 12,
          "lineHeight": 19,
        },
      ]
    }
  >
    Primary Caption
  </Text>
  <Text
    color="#48CF7C"
    style={
      Array [
        Object {
          "color": "#48CF7C",
          "fontFamily": "NotoSansKR-Medium",
          "fontSize": 12,
          "lineHeight": 19,
        },
      ]
    }
  >
    Success Caption
  </Text>
  <Text
    color="#FA4339"
    style={
      Array [
        Object {
          "color": "#FA4339",
          "fontFamily": "NotoSansKR-Medium",
          "fontSize": 12,
          "lineHeight": 19,
        },
      ]
    }
  >
    Error Caption
  </Text>
</View>
`;

exports[`Storyshots Atoms/Typography Link 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <Text
    size={1}
    style={
      Array [
        Object {
          "color": "black",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Regular",
          "fontSize": 16,
          "lineHeight": 26,
          "textDecorationLine": "underline",
        },
      ]
    }
    underlined={true}
  >
    Default Link
  </Text>
  <Text
    color="#007AFF"
    size={1}
    style={
      Array [
        Object {
          "color": "#007AFF",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Regular",
          "fontSize": 16,
          "lineHeight": 26,
          "textDecorationLine": "underline",
        },
      ]
    }
    underlined={true}
  >
    Primary Link
  </Text>
  <Text
    color="#48CF7C"
    size={1}
    style={
      Array [
        Object {
          "color": "#48CF7C",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Regular",
          "fontSize": 16,
          "lineHeight": 26,
          "textDecorationLine": "underline",
        },
      ]
    }
    underlined={true}
  >
    Success Link
  </Text>
  <Text
    color="#FA4339"
    size={1}
    style={
      Array [
        Object {
          "color": "#FA4339",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Regular",
          "fontSize": 16,
          "lineHeight": 26,
          "textDecorationLine": "underline",
        },
      ]
    }
    underlined={true}
  >
    Error Link
  </Text>
</View>
`;

exports[`Storyshots Atoms/Typography Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <Text
    color="#000000"
    size={1}
    style={
      Array [
        Object {
          "color": "#000000",
          "fontFamily": "NotoSansKR-Bold",
          "fontSize": 32,
          "lineHeight": 55,
        },
      ]
    }
  >
    Heading
  </Text>
</View>
`;

exports[`Storyshots Atoms/Typography Selectable 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <Text
    selectable={true}
    size={1}
    style={
      Array [
        Object {
          "color": "black",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Regular",
          "fontSize": 16,
          "lineHeight": 26,
        },
      ]
    }
  >
    Selectable Paragraph
  </Text>
  <Text
    size={1}
    style={
      Array [
        Object {
          "color": "black",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Regular",
          "fontSize": 16,
          "lineHeight": 26,
        },
      ]
    }
  >
    Not Selectable Paragraph
  </Text>
</View>
`;

exports[`Storyshots Atoms/Typography Type 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <Text
    size={1}
    style={
      Array [
        Object {
          "color": "black",
          "fontFamily": "NotoSansKR-Bold",
          "fontSize": 32,
          "lineHeight": 55,
        },
      ]
    }
  >
    Heading1
  </Text>
  <Text
    size={2}
    style={
      Array [
        Object {
          "color": "black",
          "fontFamily": "NotoSansKR-Bold",
          "fontSize": 28,
          "lineHeight": 40,
        },
      ]
    }
  >
    Heading2
  </Text>
  <Text
    size={3}
    style={
      Array [
        Object {
          "color": "black",
          "fontFamily": "NotoSansKR-Bold",
          "fontSize": 24,
          "lineHeight": 35,
        },
      ]
    }
  >
    Heading3
  </Text>
  <Text
    size={4}
    style={
      Array [
        Object {
          "color": "black",
          "fontFamily": "NotoSansKR-Bold",
          "fontSize": 20,
          "lineHeight": 29,
        },
      ]
    }
  >
    Heading4
  </Text>
  <Text
    size={5}
    style={
      Array [
        Object {
          "color": "black",
          "fontFamily": "NotoSansKR-Bold",
          "fontSize": 16,
          "lineHeight": 26,
        },
      ]
    }
  >
    Heading5
  </Text>
  <Text
    size={1}
    style={
      Array [
        Object {
          "color": "black",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Regular",
          "fontSize": 16,
          "lineHeight": 26,
        },
      ]
    }
  >
    Paragraph1
  </Text>
  <Text
    size={2}
    style={
      Array [
        Object {
          "color": "black",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Regular",
          "fontSize": 14,
          "lineHeight": 22,
        },
      ]
    }
  >
    Paragraph2
  </Text>
  <Text
    style={
      Array [
        Object {
          "color": "black",
          "fontFamily": "NotoSansKR-Medium",
          "fontSize": 12,
          "lineHeight": 19,
        },
      ]
    }
  >
    Caption
  </Text>
</View>
`;

exports[`Storyshots Atoms/Typography fontWeight 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <Text
    fontWeight="bold"
    size={1}
    style={
      Array [
        Object {
          "color": "black",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Bold",
          "fontSize": 16,
          "lineHeight": 26,
        },
      ]
    }
  >
    Bold Paragraph
  </Text>
  <Text
    size={1}
    style={
      Array [
        Object {
          "color": "black",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Regular",
          "fontSize": 16,
          "lineHeight": 26,
        },
      ]
    }
  >
    Normal Paragraph
  </Text>
  <Text
    fontWeight="light"
    size={1}
    style={
      Array [
        Object {
          "color": "black",
          "flexShrink": 1,
          "flexWrap": "wrap",
          "fontFamily": "NotoSansKR-Light",
          "fontSize": 16,
          "lineHeight": 26,
        },
      ]
    }
  >
    Light Paragraph
  </Text>
</View>
`;

exports[`Storyshots Molecules/Alert Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#EEF2F6",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Open Alert
      </Text>
    </View>
  </View>
  <Modal
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(0, 0, 0, 0.7)",
            "bottom": 0,
            "justifyContent": "center",
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#FFFFFF",
              "borderRadius": 20,
              "width": 690,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "paddingBottom": 32,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 32,
              },
            ]
          }
        >
          <Text
            size={1}
            style={
              Array [
                Object {
                  "color": "black",
                  "flexShrink": 1,
                  "flexWrap": "wrap",
                  "fontFamily": "NotoSansKR-Regular",
                  "fontSize": 16,
                  "lineHeight": 26,
                },
                Object {
                  "textAlign": "center",
                },
              ]
            }
          >
            땡땡땡이 완료되지 않았습니다.
그래도 나가시겠습니까?
          </Text>
        </View>
        <View
          margin={0}
          style={
            Array [
              Object {
                "borderBottomColor": "#F5F5F5",
                "borderBottomWidth": 1,
                "height": 0,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "width": "100%",
              },
            ]
          }
        />
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
                "width": "100%",
              },
            ]
          }
          vertical={false}
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "center",
                "opacity": 1,
                "paddingBottom": 15,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 15,
              }
            }
          >
            <Text
              size={1}
              style={
                Array [
                  Object {
                    "color": "black",
                    "flexShrink": 1,
                    "flexWrap": "wrap",
                    "fontFamily": "NotoSansKR-Regular",
                    "fontSize": 16,
                    "lineHeight": 26,
                  },
                  Object {
                    "color": "#000",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              확인
            </Text>
          </View>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Storyshots Molecules/Alert ReactNode Contents Alert 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#EEF2F6",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Open Alert
      </Text>
    </View>
  </View>
  <Modal
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(0, 0, 0, 0.7)",
            "bottom": 0,
            "justifyContent": "center",
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#FFFFFF",
              "borderRadius": 20,
              "width": 690,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "paddingBottom": 32,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 32,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Image
              source={
                Object {
                  "testUri": "../../../src/assets/icons/camera/camera.png",
                }
              }
              style={
                Array [
                  Object {
                    "height": 24,
                    "width": 24,
                  },
                  Object {},
                ]
              }
            />
            <Text>
              아이콘 내용
            </Text>
          </View>
        </View>
        <View
          margin={0}
          style={
            Array [
              Object {
                "borderBottomColor": "#F5F5F5",
                "borderBottomWidth": 1,
                "height": 0,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "width": "100%",
              },
            ]
          }
        />
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
                "width": "100%",
              },
            ]
          }
          vertical={false}
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "center",
                "opacity": 1,
                "paddingBottom": 15,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 15,
              }
            }
          >
            <Text
              size={1}
              style={
                Array [
                  Object {
                    "color": "black",
                    "flexShrink": 1,
                    "flexWrap": "wrap",
                    "fontFamily": "NotoSansKR-Regular",
                    "fontSize": 16,
                    "lineHeight": 26,
                  },
                  Object {
                    "color": "#000",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              확인
            </Text>
          </View>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Storyshots Molecules/Alert ReactNode Title Alert 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#EEF2F6",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Open Alert
      </Text>
    </View>
  </View>
  <Modal
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(0, 0, 0, 0.7)",
            "bottom": 0,
            "justifyContent": "center",
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#FFFFFF",
              "borderRadius": 20,
              "width": 690,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "paddingBottom": 32,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 32,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <Image
                source={
                  Object {
                    "testUri": "../../../src/assets/icons/camera/camera.png",
                  }
                }
                style={
                  Array [
                    Object {
                      "height": 24,
                      "width": 24,
                    },
                    Object {},
                  ]
                }
              />
              <Text>
                아이콘 타이틀
              </Text>
            </View>
          </View>
          <Text
            size={1}
            style={
              Array [
                Object {
                  "color": "black",
                  "flexShrink": 1,
                  "flexWrap": "wrap",
                  "fontFamily": "NotoSansKR-Regular",
                  "fontSize": 16,
                  "lineHeight": 26,
                },
                Object {
                  "textAlign": "center",
                },
              ]
            }
          >
            땡땡땡이 완료되지 않았습니다.
그래도 나가시겠습니까?
          </Text>
        </View>
        <View
          margin={0}
          style={
            Array [
              Object {
                "borderBottomColor": "#F5F5F5",
                "borderBottomWidth": 1,
                "height": 0,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "width": "100%",
              },
            ]
          }
        />
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
                "width": "100%",
              },
            ]
          }
          vertical={false}
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "center",
                "opacity": 1,
                "paddingBottom": 15,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 15,
              }
            }
          >
            <Text
              size={1}
              style={
                Array [
                  Object {
                    "color": "black",
                    "flexShrink": 1,
                    "flexWrap": "wrap",
                    "fontFamily": "NotoSansKR-Regular",
                    "fontSize": 16,
                    "lineHeight": 26,
                  },
                  Object {
                    "color": "#000",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              확인
            </Text>
          </View>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Storyshots Molecules/Alert Title Alert 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#EEF2F6",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Open Alert
      </Text>
    </View>
  </View>
  <Modal
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(0, 0, 0, 0.7)",
            "bottom": 0,
            "justifyContent": "center",
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#FFFFFF",
              "borderRadius": 20,
              "width": 690,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "paddingBottom": 32,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 32,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                },
              ]
            }
          >
            <Text
              size={5}
              style={
                Array [
                  Object {
                    "color": "black",
                    "fontFamily": "NotoSansKR-Bold",
                    "fontSize": 16,
                    "lineHeight": 26,
                  },
                  Object {},
                ]
              }
            >
              타이틀
            </Text>
          </View>
          <Text
            size={1}
            style={
              Array [
                Object {
                  "color": "black",
                  "flexShrink": 1,
                  "flexWrap": "wrap",
                  "fontFamily": "NotoSansKR-Regular",
                  "fontSize": 16,
                  "lineHeight": 26,
                },
                Object {
                  "textAlign": "center",
                },
              ]
            }
          >
            땡땡땡이 완료되지 않았습니다.
그래도 나가시겠습니까?
          </Text>
        </View>
        <View
          margin={0}
          style={
            Array [
              Object {
                "borderBottomColor": "#F5F5F5",
                "borderBottomWidth": 1,
                "height": 0,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "width": "100%",
              },
            ]
          }
        />
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
                "width": "100%",
              },
            ]
          }
          vertical={false}
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "center",
                "opacity": 1,
                "paddingBottom": 15,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 15,
              }
            }
          >
            <Text
              size={1}
              style={
                Array [
                  Object {
                    "color": "black",
                    "flexShrink": 1,
                    "flexWrap": "wrap",
                    "fontFamily": "NotoSansKR-Regular",
                    "fontSize": 16,
                    "lineHeight": 26,
                  },
                  Object {
                    "color": "#000",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              확인
            </Text>
          </View>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Storyshots Molecules/Alert Two Button Alert 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#EEF2F6",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Open Alert
      </Text>
    </View>
  </View>
  <Modal
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(0, 0, 0, 0.7)",
            "bottom": 0,
            "justifyContent": "center",
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#FFFFFF",
              "borderRadius": 20,
              "width": 690,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "paddingBottom": 32,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 32,
              },
            ]
          }
        >
          <Text
            size={1}
            style={
              Array [
                Object {
                  "color": "black",
                  "flexShrink": 1,
                  "flexWrap": "wrap",
                  "fontFamily": "NotoSansKR-Regular",
                  "fontSize": 16,
                  "lineHeight": 26,
                },
                Object {
                  "textAlign": "center",
                },
              ]
            }
          >
            땡땡땡이 완료되지 않았습니다.
그래도 나가시겠습니까?
          </Text>
        </View>
        <View
          margin={0}
          style={
            Array [
              Object {
                "borderBottomColor": "#F5F5F5",
                "borderBottomWidth": 1,
                "height": 0,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "width": "100%",
              },
            ]
          }
        />
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
                "width": "100%",
              },
            ]
          }
          vertical={false}
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "center",
                "opacity": 1,
                "paddingBottom": 15,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 15,
              }
            }
          >
            <Text
              size={1}
              style={
                Array [
                  Object {
                    "color": "black",
                    "flexShrink": 1,
                    "flexWrap": "wrap",
                    "fontFamily": "NotoSansKR-Regular",
                    "fontSize": 16,
                    "lineHeight": 26,
                  },
                  Object {
                    "color": "#000",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              아니오
            </Text>
          </View>
          <View
            style={
              Array [
                Object {
                  "borderRightColor": "#F5F5F5",
                  "borderRightWidth": 1,
                },
              ]
            }
          />
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "center",
                "opacity": 1,
                "paddingBottom": 15,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 15,
              }
            }
          >
            <Text
              color="#007AFF"
              size={1}
              strong={true}
              style={
                Array [
                  Object {
                    "color": "#007AFF",
                    "flexShrink": 1,
                    "flexWrap": "wrap",
                    "fontFamily": "NotoSansKR-Regular",
                    "fontSize": 16,
                    "lineHeight": 26,
                  },
                  Object {
                    "color": "#007AFF",
                    "fontWeight": "bold",
                  },
                ]
              }
            >
              네
            </Text>
          </View>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Storyshots Molecules/Alert Vertical Button Alert 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#EEF2F6",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Open Alert
      </Text>
    </View>
  </View>
  <Modal
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(0, 0, 0, 0.7)",
            "bottom": 0,
            "justifyContent": "center",
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#FFFFFF",
              "borderRadius": 20,
              "width": 690,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "paddingBottom": 32,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 32,
              },
            ]
          }
        >
          <Text
            size={1}
            style={
              Array [
                Object {
                  "color": "black",
                  "flexShrink": 1,
                  "flexWrap": "wrap",
                  "fontFamily": "NotoSansKR-Regular",
                  "fontSize": 16,
                  "lineHeight": 26,
                },
                Object {
                  "textAlign": "center",
                },
              ]
            }
          >
            땡땡땡이 완료되지 않았습니다.
그래도 나가시겠습니까?
          </Text>
        </View>
        <View
          margin={0}
          style={
            Array [
              Object {
                "borderBottomColor": "#F5F5F5",
                "borderBottomWidth": 1,
                "height": 0,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "width": "100%",
              },
            ]
          }
        />
        <View
          style={
            Array [
              Object {
                "flexDirection": "column-reverse",
                "width": "100%",
              },
            ]
          }
          vertical={true}
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "opacity": 1,
                "paddingBottom": 15,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 15,
              }
            }
          >
            <Text
              color="#007AFF"
              size={1}
              strong={true}
              style={
                Array [
                  Object {
                    "color": "#007AFF",
                    "flexShrink": 1,
                    "flexWrap": "wrap",
                    "fontFamily": "NotoSansKR-Regular",
                    "fontSize": 16,
                    "lineHeight": 26,
                  },
                  Object {
                    "color": "#007AFF",
                    "fontWeight": "bold",
                  },
                ]
              }
            >
              닫기
            </Text>
          </View>
          <View
            margin={0}
            style={
              Array [
                Object {
                  "borderBottomColor": "#F5F5F5",
                  "borderBottomWidth": 1,
                  "height": 0,
                  "marginBottom": 0,
                  "marginLeft": 0,
                  "marginRight": 0,
                  "marginTop": 0,
                  "width": "100%",
                },
              ]
            }
          />
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "opacity": 1,
                "paddingBottom": 15,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 15,
              }
            }
          >
            <Text
              size={1}
              style={
                Array [
                  Object {
                    "color": "black",
                    "flexShrink": 1,
                    "flexWrap": "wrap",
                    "fontFamily": "NotoSansKR-Regular",
                    "fontSize": 16,
                    "lineHeight": 26,
                  },
                  Object {
                    "color": "#000",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              자세히 알아보기
            </Text>
          </View>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Storyshots Molecules/FormItem Children 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "marginBottom": 8,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 8,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "marginBottom": 3,
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#1F1F1F",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
            },
          ]
        }
      >
        TextInput FormItem
      </Text>
    </View>
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "shadowColor": "rgba(0, 0, 0, 0.1)",
            "shadowOffset": Object {
              "height": 8,
              "width": 0,
            },
            "shadowOpacity": 1,
            "shadowRadius": 24,
          },
          Object {},
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#FFFFFF",
              "borderRadius": 16,
              "flexGrow": 1,
              "justifyContent": "center",
              "paddingBottom": 14,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 14,
              "position": "relative",
            },
          ]
        }
      >
        <TextInput
          allowFontScaling={true}
          editable={true}
          onChangeText={[Function]}
          placeholderTextColor="#C6CACF"
          rejectResponderTermination={true}
          secureTextEntry={false}
          style={
            Array [
              Object {
                "fontSize": 14,
                "height": 22,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
              },
              Object {},
            ]
          }
          textAlignVertical="center"
          underlineColorAndroid="transparent"
        />
      </View>
    </View>
    <View
      style={
        Object {
          "marginTop": 1,
          "transform": Array [
            Object {
              "translateY": -13,
            },
          ],
          "zIndex": -1,
        }
      }
    />
  </View>
  <View
    style={
      Array [
        Object {
          "marginBottom": 8,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 8,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "marginBottom": 3,
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#1F1F1F",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
            },
          ]
        }
      >
        Select FormItem
      </Text>
    </View>
    <View
      layout="inline"
      style={
        Array [
          Object {
            "flexDirection": "row",
            "flexWrap": "wrap",
          },
        ]
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "borderColor": "rgba(0, 0, 0, 0.5)",
            "borderRadius": 20,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginRight": 4,
            "opacity": 1,
            "paddingBottom": 10,
            "paddingLeft": 18,
            "paddingRight": 18,
            "paddingTop": 10,
          }
        }
      >
        <Text
          first={true}
          last={false}
          layout="inline"
          selected={false}
          style={
            Array [
              Object {
                "color": "black",
                "fontFamily": "NotoSansKR-Regular",
                "fontSize": 14,
                "lineHeight": 22,
                "opacity": 0.7,
              },
            ]
          }
          value="Option 1"
        >
          Option 1
        </Text>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "borderColor": "rgba(0, 0, 0, 0.5)",
            "borderRadius": 20,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginRight": 4,
            "opacity": 1,
            "paddingBottom": 10,
            "paddingLeft": 18,
            "paddingRight": 18,
            "paddingTop": 10,
          }
        }
      >
        <Text
          first={false}
          last={false}
          layout="inline"
          selected={false}
          style={
            Array [
              Object {
                "color": "black",
                "fontFamily": "NotoSansKR-Regular",
                "fontSize": 14,
                "lineHeight": 22,
                "opacity": 0.7,
              },
            ]
          }
          value="Option 2"
        >
          Option 2 With LOOOONG NAME
        </Text>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "borderColor": "rgba(0, 0, 0, 0.5)",
            "borderRadius": 20,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginRight": 4,
            "opacity": 1,
            "paddingBottom": 10,
            "paddingLeft": 18,
            "paddingRight": 18,
            "paddingTop": 10,
          }
        }
      >
        <Text
          first={false}
          last={false}
          layout="inline"
          selected={false}
          style={
            Array [
              Object {
                "color": "black",
                "fontFamily": "NotoSansKR-Regular",
                "fontSize": 14,
                "lineHeight": 22,
                "opacity": 0.7,
              },
            ]
          }
          value="Option 3"
        >
          Option 3
        </Text>
      </View>
    </View>
    <View
      style={
        Object {
          "marginTop": 1,
          "transform": Array [
            Object {
              "translateY": -13,
            },
          ],
          "zIndex": -1,
        }
      }
    />
  </View>
  <View
    style={
      Array [
        Object {
          "marginBottom": 8,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 8,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "marginBottom": 3,
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#1F1F1F",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
            },
          ]
        }
      >
        Checkbox FormItem
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "opacity": 1,
        }
      }
    >
      <Image
        source={
          Object {
            "testUri": "../../../src/assets/icons/checkbox/checkbox-unchecked.png",
          }
        }
        style={
          Array [
            Object {
              "height": 24,
              "width": 24,
            },
            Object {
              "marginRight": 4,
            },
          ]
        }
      />
    </View>
    <View
      style={
        Object {
          "marginTop": 1,
          "transform": Array [
            Object {
              "translateY": -13,
            },
          ],
          "zIndex": -1,
        }
      }
    />
  </View>
</View>
`;

exports[`Storyshots Molecules/FormItem Error 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "marginBottom": 8,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 8,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "marginBottom": 3,
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#1F1F1F",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
            },
          ]
        }
      >
        Error
      </Text>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#e9e9e9",
            "borderColor": "darkgrey",
            "borderStyle": "solid",
            "borderWidth": 1,
            "height": 40,
            "justifyContent": "center",
            "width": 750,
          },
        ]
      }
    >
      <Text>
        FormItem Children
      </Text>
    </View>
    <View
      style={
        Object {
          "marginTop": 1,
          "transform": Array [
            Object {
              "translateY": -13,
            },
          ],
          "zIndex": -1,
        }
      }
    >
      <Text
        color="error"
        size={2}
        style={
          Array [
            Object {
              "color": "transparent",
              "flexShrink": 1,
              "flexWrap": "wrap",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
              "lineHeight": 22,
            },
            Object {},
          ]
        }
      >
        Error message
      </Text>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "marginBottom": 8,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 8,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "marginBottom": 3,
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#1F1F1F",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
            },
          ]
        }
      >
        No error
      </Text>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#e9e9e9",
            "borderColor": "darkgrey",
            "borderStyle": "solid",
            "borderWidth": 1,
            "height": 40,
            "justifyContent": "center",
            "width": 750,
          },
        ]
      }
    >
      <Text>
        FormItem Children
      </Text>
    </View>
    <View
      style={
        Object {
          "marginTop": 1,
          "transform": Array [
            Object {
              "translateY": -13,
            },
          ],
          "zIndex": -1,
        }
      }
    />
  </View>
</View>
`;

exports[`Storyshots Molecules/FormItem Footer 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "marginBottom": 8,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 8,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "marginBottom": 3,
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#1F1F1F",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
            },
          ]
        }
      >
        FormItem without footer
      </Text>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#e9e9e9",
            "borderColor": "darkgrey",
            "borderStyle": "solid",
            "borderWidth": 1,
            "height": 40,
            "justifyContent": "center",
            "width": 750,
          },
        ]
      }
    >
      <Text>
        FormItem Children
      </Text>
    </View>
    <View
      style={
        Object {
          "marginTop": 1,
          "transform": Array [
            Object {
              "translateY": -13,
            },
          ],
          "zIndex": -1,
        }
      }
    />
  </View>
  <View
    style={
      Array [
        Object {
          "marginBottom": 8,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 8,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "marginBottom": 3,
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#1F1F1F",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
            },
          ]
        }
      >
        FormItem with footer
      </Text>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#e9e9e9",
            "borderColor": "darkgrey",
            "borderStyle": "solid",
            "borderWidth": 1,
            "height": 40,
            "justifyContent": "center",
            "width": 750,
          },
        ]
      }
    >
      <Text>
        FormItem Children
      </Text>
    </View>
    <View
      style={
        Object {
          "marginTop": 1,
          "transform": Array [
            Object {
              "translateY": -13,
            },
          ],
          "zIndex": -1,
        }
      }
    />
    <View
      style={
        Array [
          Object {
            "marginTop": 4,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#e9e9e9",
              "borderColor": "darkgrey",
              "borderStyle": "solid",
              "borderWidth": 1,
              "height": 40,
              "justifyContent": "center",
              "width": 750,
            },
          ]
        }
      >
        <Text>
          FormItem Footer
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "marginBottom": 8,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 8,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "marginBottom": 3,
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#1F1F1F",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
            },
          ]
        }
      >
        FormItem with string footer
      </Text>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#e9e9e9",
            "borderColor": "darkgrey",
            "borderStyle": "solid",
            "borderWidth": 1,
            "height": 40,
            "justifyContent": "center",
            "width": 750,
          },
        ]
      }
    >
      <Text>
        FormItem Children
      </Text>
    </View>
    <View
      style={
        Object {
          "marginTop": 1,
          "transform": Array [
            Object {
              "translateY": -13,
            },
          ],
          "zIndex": -1,
        }
      }
    />
    <View
      style={
        Array [
          Object {
            "marginTop": 4,
          },
        ]
      }
    >
      <Text
        color="#8C8C8C"
        size={2}
        style={
          Array [
            Object {
              "color": "#8C8C8C",
              "flexShrink": 1,
              "flexWrap": "wrap",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
              "lineHeight": 22,
            },
            Object {},
          ]
        }
      >
        string footer
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Molecules/FormItem Label 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "marginBottom": 8,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 8,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "marginBottom": 3,
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#1F1F1F",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
            },
          ]
        }
      >
        FormItem Label
      </Text>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#e9e9e9",
            "borderColor": "darkgrey",
            "borderStyle": "solid",
            "borderWidth": 1,
            "height": 40,
            "justifyContent": "center",
            "width": 750,
          },
        ]
      }
    >
      <Text>
        FormItem Children
      </Text>
    </View>
    <View
      style={
        Object {
          "marginTop": 1,
          "transform": Array [
            Object {
              "translateY": -13,
            },
          ],
          "zIndex": -1,
        }
      }
    />
  </View>
</View>
`;

exports[`Storyshots Molecules/FormItem Rules 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "marginBottom": 8,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 8,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "marginBottom": 3,
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#1F1F1F",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
            },
          ]
        }
      >
        Required
      </Text>
      <Text
        style={
          Array [
            Object {
              "color": "#FA4339",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
            },
          ]
        }
      >
        *
      </Text>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#e9e9e9",
            "borderColor": "darkgrey",
            "borderStyle": "solid",
            "borderWidth": 1,
            "height": 40,
            "justifyContent": "center",
            "width": 750,
          },
        ]
      }
    >
      <Text>
        FormItem Children
      </Text>
    </View>
    <View
      style={
        Object {
          "marginTop": 1,
          "transform": Array [
            Object {
              "translateY": -13,
            },
          ],
          "zIndex": -1,
        }
      }
    />
  </View>
  <View
    style={
      Array [
        Object {
          "marginBottom": 8,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 8,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "marginBottom": 3,
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#1F1F1F",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
            },
          ]
        }
      >
        Not required
      </Text>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#e9e9e9",
            "borderColor": "darkgrey",
            "borderStyle": "solid",
            "borderWidth": 1,
            "height": 40,
            "justifyContent": "center",
            "width": 750,
          },
        ]
      }
    >
      <Text>
        FormItem Children
      </Text>
    </View>
    <View
      style={
        Object {
          "marginTop": 1,
          "transform": Array [
            Object {
              "translateY": -13,
            },
          ],
          "zIndex": -1,
        }
      }
    />
  </View>
</View>
`;

exports[`Storyshots Molecules/ListItem Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "width": "50%",
        },
      ]
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#F8FAFB",
            "flexDirection": "row",
            "paddingBottom": 14,
            "paddingLeft": 20,
            "paddingRight": 20,
            "paddingTop": 14,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          color="#8C8C8C"
          size={2}
          style={
            Array [
              Object {
                "color": "#8C8C8C",
                "flexShrink": 1,
                "flexWrap": "wrap",
                "fontFamily": "NotoSansKR-Regular",
                "fontSize": 14,
                "lineHeight": 22,
              },
            ]
          }
        >
          sublabel
        </Text>
        <Text
          size={2}
          style={
            Array [
              Object {
                "color": "black",
                "flexShrink": 1,
                "flexWrap": "wrap",
                "fontFamily": "NotoSansKR-Regular",
                "fontSize": 14,
                "lineHeight": 22,
              },
            ]
          }
        >
          label
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots Molecules/ListItem SublabelPosition 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "width": "50%",
        },
      ]
    }
  >
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#F8FAFB",
            "flexDirection": "row",
            "paddingBottom": 14,
            "paddingLeft": 20,
            "paddingRight": 20,
            "paddingTop": 14,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          color="#8C8C8C"
          size={2}
          style={
            Array [
              Object {
                "color": "#8C8C8C",
                "flexShrink": 1,
                "flexWrap": "wrap",
                "fontFamily": "NotoSansKR-Regular",
                "fontSize": 14,
                "lineHeight": 22,
              },
            ]
          }
        >
          sublabel top
        </Text>
        <Text
          size={2}
          style={
            Array [
              Object {
                "color": "black",
                "flexShrink": 1,
                "flexWrap": "wrap",
                "fontFamily": "NotoSansKR-Regular",
                "fontSize": 14,
                "lineHeight": 22,
              },
            ]
          }
        >
          label
        </Text>
      </View>
    </View>
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#F8FAFB",
            "flexDirection": "row",
            "paddingBottom": 14,
            "paddingLeft": 20,
            "paddingRight": 20,
            "paddingTop": 14,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          size={2}
          style={
            Array [
              Object {
                "color": "black",
                "flexShrink": 1,
                "flexWrap": "wrap",
                "fontFamily": "NotoSansKR-Regular",
                "fontSize": 14,
                "lineHeight": 22,
              },
            ]
          }
        >
          label
        </Text>
        <Text
          color="#8C8C8C"
          size={2}
          style={
            Array [
              Object {
                "color": "#8C8C8C",
                "flexShrink": 1,
                "flexWrap": "wrap",
                "fontFamily": "NotoSansKR-Regular",
                "fontSize": 14,
                "lineHeight": 22,
              },
            ]
          }
        >
          sublabel bottom
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots Molecules/ListItem Suffix 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "width": "50%",
        },
      ]
    }
  >
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#F8FAFB",
            "flexDirection": "row",
            "paddingBottom": 14,
            "paddingLeft": 20,
            "paddingRight": 20,
            "paddingTop": 14,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          size={2}
          style={
            Array [
              Object {
                "color": "black",
                "flexShrink": 1,
                "flexWrap": "wrap",
                "fontFamily": "NotoSansKR-Regular",
                "fontSize": 14,
                "lineHeight": 22,
              },
            ]
          }
        >
          label
        </Text>
        <Text
          color="#8C8C8C"
          size={2}
          style={
            Array [
              Object {
                "color": "#8C8C8C",
                "flexShrink": 1,
                "flexWrap": "wrap",
                "fontFamily": "NotoSansKR-Regular",
                "fontSize": 14,
                "lineHeight": 22,
              },
            ]
          }
        >
          default suffix
        </Text>
      </View>
    </View>
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#F8FAFB",
            "flexDirection": "row",
            "paddingBottom": 14,
            "paddingLeft": 20,
            "paddingRight": 20,
            "paddingTop": 14,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          size={2}
          style={
            Array [
              Object {
                "color": "black",
                "flexShrink": 1,
                "flexWrap": "wrap",
                "fontFamily": "NotoSansKR-Regular",
                "fontSize": 14,
                "lineHeight": 22,
              },
            ]
          }
        >
          label
        </Text>
        <Text
          color="#8C8C8C"
          size={2}
          style={
            Array [
              Object {
                "color": "#8C8C8C",
                "flexShrink": 1,
                "flexWrap": "wrap",
                "fontFamily": "NotoSansKR-Regular",
                "fontSize": 14,
                "lineHeight": 22,
              },
            ]
          }
        >
          custom suffix
        </Text>
      </View>
      <Text>
        Suffix
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Molecules/ListItem Underline 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "width": "50%",
        },
      ]
    }
  >
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#F8FAFB",
            "borderBottomColor": "#EEF2F6",
            "borderBottomWidth": 1,
            "flexDirection": "row",
            "paddingBottom": 14,
            "paddingLeft": 20,
            "paddingRight": 20,
            "paddingTop": 14,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          size={2}
          style={
            Array [
              Object {
                "color": "black",
                "flexShrink": 1,
                "flexWrap": "wrap",
                "fontFamily": "NotoSansKR-Regular",
                "fontSize": 14,
                "lineHeight": 22,
              },
            ]
          }
        >
          label
        </Text>
        <Text
          color="#8C8C8C"
          size={2}
          style={
            Array [
              Object {
                "color": "#8C8C8C",
                "flexShrink": 1,
                "flexWrap": "wrap",
                "fontFamily": "NotoSansKR-Regular",
                "fontSize": 14,
                "lineHeight": 22,
              },
            ]
          }
        >
          underlined item
        </Text>
      </View>
    </View>
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#F8FAFB",
            "flexDirection": "row",
            "paddingBottom": 14,
            "paddingLeft": 20,
            "paddingRight": 20,
            "paddingTop": 14,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          size={2}
          style={
            Array [
              Object {
                "color": "black",
                "flexShrink": 1,
                "flexWrap": "wrap",
                "fontFamily": "NotoSansKR-Regular",
                "fontSize": 14,
                "lineHeight": 22,
              },
            ]
          }
        >
          label
        </Text>
        <Text
          color="#8C8C8C"
          size={2}
          style={
            Array [
              Object {
                "color": "#8C8C8C",
                "flexShrink": 1,
                "flexWrap": "wrap",
                "fontFamily": "NotoSansKR-Regular",
                "fontSize": 14,
                "lineHeight": 22,
              },
            ]
          }
        >
          not underlined item
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots Molecules/Modal Default 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 1000,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 14,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 14,
          "width": "100%",
        },
        Object {
          "backgroundColor": "#EEF2F6",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        includeFontPadding={false}
        pressed={false}
        style={
          Array [
            Object {
              "color": "#5F656A",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "textAlign": "center",
            },
          ]
        }
        textColor="#5F656A"
        textDisabledColor="#C6CACF"
      >
        Open Modal
      </Text>
    </View>
  </View>
  <Modal
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(0, 0, 0, 0.7)",
            "bottom": 0,
            "justifyContent": "center",
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#FFFFFF",
              "borderRadius": 8,
              "paddingBottom": 20,
              "paddingLeft": 20,
              "paddingRight": 20,
              "paddingTop": 20,
              "width": 690,
            },
          ]
        }
      >
        <Text>
          This is a Modal
        </Text>
      </View>
      <Text
        color="white"
        fontWeight="bold"
        onPress={[Function]}
        size={1}
        style={
          Array [
            Object {
              "color": "white",
              "flexShrink": 1,
              "flexWrap": "wrap",
              "fontFamily": "NotoSansKR-Bold",
              "fontSize": 16,
              "lineHeight": 26,
              "textDecorationLine": "underline",
            },
            Object {
              "marginTop": 20,
            },
          ]
        }
      >
        닫기
      </Text>
    </View>
  </Modal>
</View>
`;

exports[`Storyshots Molecules/Select Layout 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <Text>
    Inline Layout
  </Text>
  <View
    layout="inline"
    style={
      Array [
        Object {
          "flexDirection": "row",
          "flexWrap": "wrap",
        },
      ]
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderColor": "rgba(0, 0, 0, 0.5)",
          "borderRadius": 20,
          "borderWidth": 1,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginRight": 4,
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 18,
          "paddingRight": 18,
          "paddingTop": 10,
        }
      }
    >
      <Text
        first={true}
        last={false}
        layout="inline"
        selected={false}
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
              "lineHeight": 22,
              "opacity": 0.7,
            },
          ]
        }
        value="Option 1"
      >
        Option 1
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderColor": "rgba(0, 0, 0, 0.5)",
          "borderRadius": 20,
          "borderWidth": 1,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginRight": 4,
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 18,
          "paddingRight": 18,
          "paddingTop": 10,
        }
      }
    >
      <Text
        first={false}
        last={false}
        layout="inline"
        selected={false}
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
              "lineHeight": 22,
              "opacity": 0.7,
            },
          ]
        }
        value="Option 2"
      >
        Option 2 With LOOOONG NAME
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderColor": "rgba(0, 0, 0, 0.5)",
          "borderRadius": 20,
          "borderWidth": 1,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginRight": 4,
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 18,
          "paddingRight": 18,
          "paddingTop": 10,
        }
      }
    >
      <Text
        first={false}
        last={false}
        layout="inline"
        selected={false}
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
              "lineHeight": 22,
              "opacity": 0.7,
            },
          ]
        }
        value="Option 3"
      >
        Option 3
      </Text>
    </View>
  </View>
  <Text>
    Block Layout
  </Text>
  <View
    layout="block"
    style={
      Array [
        Object {
          "flexWrap": "wrap",
        },
      ]
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderColor": "rgba(0, 0, 0, 0.5)",
          "borderRadius": 20,
          "borderWidth": 1,
          "marginBottom": 2,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 0,
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 18,
          "paddingRight": 18,
          "paddingTop": 10,
        }
      }
    >
      <Text
        first={true}
        last={false}
        layout="block"
        selected={false}
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "opacity": 0.7,
            },
          ]
        }
        value="Option 1"
      >
        Option 1
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderColor": "rgba(0, 0, 0, 0.5)",
          "borderRadius": 20,
          "borderWidth": 1,
          "marginBottom": 2,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 2,
          "opacity": 1,
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
        }
      }
    >
      <Text
        first={false}
        last={false}
        layout="block"
        selected={false}
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "opacity": 0.7,
            },
          ]
        }
        value="Option 2"
      >
        Option 2 With LOOOONG NAME
      </Text>
      <Text
        first={false}
        last={false}
        layout="block"
        selected={false}
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Light",
              "fontSize": 12,
              "lineHeight": 19,
              "opacity": 0.5,
            },
          ]
        }
        value="Option 2"
      >
        With Sublabel
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderColor": "rgba(0, 0, 0, 0.5)",
          "borderRadius": 20,
          "borderWidth": 1,
          "marginBottom": 2,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 2,
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 18,
          "paddingRight": 18,
          "paddingTop": 10,
        }
      }
    >
      <Text
        first={false}
        last={false}
        layout="block"
        selected={false}
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "opacity": 0.7,
            },
          ]
        }
        value="Option 3"
      >
        Option 3
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Molecules/Select Options 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    layout="inline"
    style={
      Array [
        Object {
          "flexDirection": "row",
          "flexWrap": "wrap",
        },
      ]
    }
  />
  <View
    layout="inline"
    style={
      Array [
        Object {
          "flexDirection": "row",
          "flexWrap": "wrap",
        },
      ]
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderColor": "rgba(0, 0, 0, 0.5)",
          "borderRadius": 20,
          "borderWidth": 1,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginRight": 4,
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 18,
          "paddingRight": 18,
          "paddingTop": 10,
        }
      }
    >
      <Text
        first={true}
        last={false}
        layout="inline"
        selected={false}
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
              "lineHeight": 22,
              "opacity": 0.7,
            },
          ]
        }
        value="Option 1"
      >
        Option 1
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderColor": "rgba(0, 0, 0, 0.5)",
          "borderRadius": 20,
          "borderWidth": 1,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginRight": 4,
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 18,
          "paddingRight": 18,
          "paddingTop": 10,
        }
      }
    >
      <Text
        first={false}
        last={false}
        layout="inline"
        selected={false}
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
              "lineHeight": 22,
              "opacity": 0.7,
            },
          ]
        }
        value="Option 2"
      >
        Option 2 With LOOOONG NAME
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderColor": "rgba(0, 0, 0, 0.5)",
          "borderRadius": 20,
          "borderWidth": 1,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginRight": 4,
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 18,
          "paddingRight": 18,
          "paddingTop": 10,
        }
      }
    >
      <Text
        first={false}
        last={false}
        layout="inline"
        selected={false}
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
              "lineHeight": 22,
              "opacity": 0.7,
            },
          ]
        }
        value="Option 3"
      >
        Option 3
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Molecules/Select Playground 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    layout="inline"
    style={
      Array [
        Object {
          "flexDirection": "row",
          "flexWrap": "wrap",
        },
      ]
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderColor": "black",
          "borderRadius": 20,
          "borderWidth": 1,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginRight": 4,
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 18,
          "paddingRight": 18,
          "paddingTop": 10,
        }
      }
    >
      <Text
        defaultValue="Option 1"
        disabled={false}
        first={true}
        last={false}
        layout="inline"
        onChange={[Function]}
        selected={true}
        size="md"
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 14,
              "lineHeight": 22,
            },
          ]
        }
        value="Option 1"
      >
        Option 1
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderColor": "rgba(0, 0, 0, 0.5)",
          "borderRadius": 20,
          "borderWidth": 1,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginRight": 4,
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 18,
          "paddingRight": 18,
          "paddingTop": 10,
        }
      }
    >
      <Text
        defaultValue="Option 1"
        disabled={false}
        first={false}
        last={false}
        layout="inline"
        onChange={[Function]}
        selected={false}
        size="md"
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
              "lineHeight": 22,
              "opacity": 0.7,
            },
          ]
        }
        value="Option 2"
      >
        Option 2 With LOOOONG NAME
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderColor": "rgba(0, 0, 0, 0.5)",
          "borderRadius": 20,
          "borderWidth": 1,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginRight": 4,
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 18,
          "paddingRight": 18,
          "paddingTop": 10,
        }
      }
    >
      <Text
        defaultValue="Option 1"
        disabled={false}
        first={false}
        last={false}
        layout="inline"
        onChange={[Function]}
        selected={false}
        size="md"
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Regular",
              "fontSize": 14,
              "lineHeight": 22,
              "opacity": 0.7,
            },
          ]
        }
        value="Option 3"
      >
        Option 3
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Molecules/Select Size 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <Text>
    Size : sm
  </Text>
  <View
    layout="block"
    style={
      Array [
        Object {
          "flexWrap": "wrap",
        },
      ]
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderColor": "rgba(0, 0, 0, 0.5)",
          "borderRadius": 20,
          "borderWidth": 1,
          "marginBottom": 2,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 0,
          "opacity": 1,
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <Text
        first={true}
        last={false}
        layout="block"
        selected={false}
        size="sm"
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 14,
              "lineHeight": 22,
              "opacity": 0.7,
            },
          ]
        }
        value="Option 1"
      >
        Option 1
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderColor": "rgba(0, 0, 0, 0.5)",
          "borderRadius": 20,
          "borderWidth": 1,
          "marginBottom": 2,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 2,
          "opacity": 1,
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <Text
        first={false}
        last={false}
        layout="block"
        selected={false}
        size="sm"
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 14,
              "lineHeight": 22,
              "opacity": 0.7,
            },
          ]
        }
        value="Option 2"
      >
        Option 2 With LOOOONG NAME
      </Text>
      <Text
        first={false}
        last={false}
        layout="block"
        selected={false}
        size="sm"
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Light",
              "fontSize": 12,
              "lineHeight": 19,
              "opacity": 0.5,
            },
          ]
        }
        value="Option 2"
      >
        With Sublabel
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderColor": "rgba(0, 0, 0, 0.5)",
          "borderRadius": 20,
          "borderWidth": 1,
          "marginBottom": 2,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 2,
          "opacity": 1,
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <Text
        first={false}
        last={false}
        layout="block"
        selected={false}
        size="sm"
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 14,
              "lineHeight": 22,
              "opacity": 0.7,
            },
          ]
        }
        value="Option 3"
      >
        Option 3
      </Text>
    </View>
  </View>
  <Text>
    Size : md
  </Text>
  <View
    layout="block"
    style={
      Array [
        Object {
          "flexWrap": "wrap",
        },
      ]
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderColor": "rgba(0, 0, 0, 0.5)",
          "borderRadius": 20,
          "borderWidth": 1,
          "marginBottom": 2,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 0,
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 18,
          "paddingRight": 18,
          "paddingTop": 10,
        }
      }
    >
      <Text
        first={true}
        last={false}
        layout="block"
        selected={false}
        size="md"
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "opacity": 0.7,
            },
          ]
        }
        value="Option 1"
      >
        Option 1
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderColor": "rgba(0, 0, 0, 0.5)",
          "borderRadius": 20,
          "borderWidth": 1,
          "marginBottom": 2,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 2,
          "opacity": 1,
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
        }
      }
    >
      <Text
        first={false}
        last={false}
        layout="block"
        selected={false}
        size="md"
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "opacity": 0.7,
            },
          ]
        }
        value="Option 2"
      >
        Option 2 With LOOOONG NAME
      </Text>
      <Text
        first={false}
        last={false}
        layout="block"
        selected={false}
        size="md"
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Light",
              "fontSize": 12,
              "lineHeight": 19,
              "opacity": 0.5,
            },
          ]
        }
        value="Option 2"
      >
        With Sublabel
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderColor": "rgba(0, 0, 0, 0.5)",
          "borderRadius": 20,
          "borderWidth": 1,
          "marginBottom": 2,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 2,
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 18,
          "paddingRight": 18,
          "paddingTop": 10,
        }
      }
    >
      <Text
        first={false}
        last={false}
        layout="block"
        selected={false}
        size="md"
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "opacity": 0.7,
            },
          ]
        }
        value="Option 3"
      >
        Option 3
      </Text>
    </View>
  </View>
  <Text>
    Size : lg
  </Text>
  <View
    layout="block"
    style={
      Array [
        Object {
          "flexWrap": "wrap",
        },
      ]
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderColor": "rgba(0, 0, 0, 0.5)",
          "borderRadius": 20,
          "borderWidth": 1,
          "marginBottom": 2,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 0,
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 18,
          "paddingRight": 18,
          "paddingTop": 10,
        }
      }
    >
      <Text
        first={true}
        last={false}
        layout="block"
        selected={false}
        size="lg"
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "opacity": 0.7,
            },
          ]
        }
        value="Option 1"
      >
        Option 1
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderColor": "rgba(0, 0, 0, 0.5)",
          "borderRadius": 20,
          "borderWidth": 1,
          "marginBottom": 2,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 2,
          "opacity": 1,
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
        }
      }
    >
      <Text
        first={false}
        last={false}
        layout="block"
        selected={false}
        size="lg"
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "opacity": 0.7,
            },
          ]
        }
        value="Option 2"
      >
        Option 2 With LOOOONG NAME
      </Text>
      <Text
        first={false}
        last={false}
        layout="block"
        selected={false}
        size="lg"
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Light",
              "fontSize": 12,
              "lineHeight": 19,
              "opacity": 0.5,
            },
          ]
        }
        value="Option 2"
      >
        With Sublabel
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderColor": "rgba(0, 0, 0, 0.5)",
          "borderRadius": 20,
          "borderWidth": 1,
          "marginBottom": 2,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 2,
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 18,
          "paddingRight": 18,
          "paddingTop": 10,
        }
      }
    >
      <Text
        first={false}
        last={false}
        layout="block"
        selected={false}
        size="lg"
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "NotoSansKR-Medium",
              "fontSize": 16,
              "lineHeight": 26,
              "opacity": 0.7,
            },
          ]
        }
        value="Option 3"
      >
        Option 3
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Organisms/Form Default 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingLeft": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {},
        Object {
          "width": "80%",
        },
      ]
    }
  >
    <Text
      size={1}
      style={
        Array [
          Object {
            "color": "black",
            "fontFamily": "NotoSansKR-Bold",
            "fontSize": 32,
            "lineHeight": 55,
          },
        ]
      }
    >
      Sign Up
    </Text>
    <View
      first={false}
      last={false}
      style={
        Array [
          Object {
            "marginBottom": 8,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 8,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "marginBottom": 3,
            },
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#1F1F1F",
                "fontFamily": "NotoSansKR-Regular",
                "fontSize": 14,
              },
            ]
          }
        >
          Email
        </Text>
        <Text
          style={
            Array [
              Object {
                "color": "#FA4339",
                "fontFamily": "NotoSansKR-Regular",
                "fontSize": 14,
              },
            ]
          }
        >
          *
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
              "shadowColor": "rgba(0, 0, 0, 0.1)",
              "shadowOffset": Object {
                "height": 8,
                "width": 0,
              },
              "shadowOpacity": 1,
              "shadowRadius": 24,
            },
            Object {},
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#FFFFFF",
                "borderRadius": 16,
                "flexGrow": 1,
                "justifyContent": "center",
                "paddingBottom": 14,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 14,
                "position": "relative",
              },
            ]
          }
        >
          <TextInput
            allowFontScaling={true}
            defaultValue="test@drcha.com"
            editable={true}
            onChangeText={[Function]}
            placeholder="example@drcha.com"
            placeholderTextColor="#C6CACF"
            rejectResponderTermination={true}
            secureTextEntry={false}
            style={
              Array [
                Object {
                  "fontSize": 14,
                  "height": 22,
                  "marginBottom": 0,
                  "marginLeft": 0,
                  "marginRight": 0,
                  "marginTop": 0,
                  "paddingBottom": 0,
                  "paddingLeft": 0,
                  "paddingRight": 0,
                  "paddingTop": 0,
                },
                Object {},
              ]
            }
            textAlignVertical="center"
            underlineColorAndroid="transparent"
          />
        </View>
      </View>
      <View
        style={
          Object {
            "marginTop": 1,
            "transform": Array [
              Object {
                "translateY": -13,
              },
            ],
            "zIndex": -1,
          }
        }
      />
    </View>
    <View
      first={false}
      last={false}
      style={
        Array [
          Object {
            "marginBottom": 8,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 8,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "marginBottom": 3,
            },
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#1F1F1F",
                "fontFamily": "NotoSansKR-Regular",
                "fontSize": 14,
              },
            ]
          }
        >
          Password
        </Text>
        <Text
          style={
            Array [
              Object {
                "color": "#FA4339",
                "fontFamily": "NotoSansKR-Regular",
                "fontSize": 14,
              },
            ]
          }
        >
          *
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
              "shadowColor": "rgba(0, 0, 0, 0.1)",
              "shadowOffset": Object {
                "height": 8,
                "width": 0,
              },
              "shadowOpacity": 1,
              "shadowRadius": 24,
            },
            Object {},
          ]
        }
      >
        <View
          secureTextEntry={true}
          style={
            Array [
              Object {
                "backgroundColor": "#FFFFFF",
                "borderRadius": 16,
                "flexGrow": 1,
                "justifyContent": "center",
                "paddingBottom": 14,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 14,
                "position": "relative",
              },
            ]
          }
        >
          <TextInput
            allowFontScaling={true}
            defaultValue="1234"
            editable={true}
            onChangeText={[Function]}
            placeholder="****"
            placeholderTextColor="#C6CACF"
            rejectResponderTermination={true}
            secureTextEntry={true}
            style={
              Array [
                Object {
                  "fontSize": 14,
                  "height": 22,
                  "marginBottom": 0,
                  "marginLeft": 0,
                  "marginRight": 0,
                  "marginTop": 0,
                  "paddingBottom": 0,
                  "paddingLeft": 0,
                  "paddingRight": 0,
                  "paddingTop": 0,
                },
                Object {},
              ]
            }
            textAlignVertical="center"
            underlineColorAndroid="transparent"
          />
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": -4,
                "marginLeft": -4,
                "marginRight": -4,
                "marginTop": -4,
                "opacity": 1,
                "paddingBottom": 4,
                "paddingLeft": 4,
                "paddingRight": 4,
                "paddingTop": 4,
                "position": "absolute",
                "right": 8,
              }
            }
          >
            <Image
              disabled={false}
              source={
                Object {
                  "testUri": "../../../src/assets/icons/eye/eye-opened.png",
                }
              }
              style={
                Array [
                  Object {
                    "height": 24,
                    "width": 24,
                  },
                  Object {},
                ]
              }
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "marginTop": 1,
            "transform": Array [
              Object {
                "translateY": -13,
              },
            ],
            "zIndex": -1,
          }
        }
      />
    </View>
    <View
      first={false}
      last={false}
      style={
        Array [
          Object {
            "marginBottom": 8,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 8,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "marginBottom": 3,
            },
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#1F1F1F",
                "fontFamily": "NotoSansKR-Regular",
                "fontSize": 14,
              },
            ]
          }
        >
          Gender
        </Text>
        <Text
          style={
            Array [
              Object {
                "color": "#FA4339",
                "fontFamily": "NotoSansKR-Regular",
                "fontSize": 14,
              },
            ]
          }
        >
          *
        </Text>
      </View>
      <View
        layout="inline"
        style={
          Array [
            Object {
              "flexDirection": "row",
              "flexWrap": "wrap",
            },
          ]
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "borderColor": "black",
              "borderRadius": 20,
              "borderWidth": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginRight": 4,
              "opacity": 1,
              "paddingBottom": 10,
              "paddingLeft": 18,
              "paddingRight": 18,
              "paddingTop": 10,
            }
          }
        >
          <Text
            defaultValue="male"
            first={true}
            last={false}
            layout="inline"
            onChange={[Function]}
            selected={true}
            style={
              Array [
                Object {
                  "color": "black",
                  "fontFamily": "NotoSansKR-Medium",
                  "fontSize": 14,
                  "lineHeight": 22,
                },
              ]
            }
            value="male"
          >
            Male
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "borderColor": "rgba(0, 0, 0, 0.5)",
              "borderRadius": 20,
              "borderWidth": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginRight": 4,
              "opacity": 1,
              "paddingBottom": 10,
              "paddingLeft": 18,
              "paddingRight": 18,
              "paddingTop": 10,
            }
          }
        >
          <Text
            defaultValue="male"
            first={false}
            last={false}
            layout="inline"
            onChange={[Function]}
            selected={false}
            style={
              Array [
                Object {
                  "color": "black",
                  "fontFamily": "NotoSansKR-Regular",
                  "fontSize": 14,
                  "lineHeight": 22,
                  "opacity": 0.7,
                },
              ]
            }
            value="female"
          >
            Female
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "borderColor": "rgba(0, 0, 0, 0.5)",
              "borderRadius": 20,
              "borderWidth": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginRight": 4,
              "opacity": 1,
              "paddingBottom": 10,
              "paddingLeft": 18,
              "paddingRight": 18,
              "paddingTop": 10,
            }
          }
        >
          <Text
            defaultValue="male"
            first={false}
            last={false}
            layout="inline"
            onChange={[Function]}
            selected={false}
            style={
              Array [
                Object {
                  "color": "black",
                  "fontFamily": "NotoSansKR-Regular",
                  "fontSize": 14,
                  "lineHeight": 22,
                  "opacity": 0.7,
                },
              ]
            }
            value="others"
          >
            Others
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "marginTop": 1,
            "transform": Array [
              Object {
                "translateY": -13,
              },
            ],
            "zIndex": -1,
          }
        }
      />
    </View>
    <View
      first={false}
      last={true}
      style={
        Array [
          Object {
            "marginBottom": 8,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 8,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "marginBottom": 3,
            },
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#1F1F1F",
                "fontFamily": "NotoSansKR-Regular",
                "fontSize": 14,
              },
            ]
          }
        >
          Marketing Agreement
        </Text>
        <Text
          style={
            Array [
              Object {
                "color": "#FA4339",
                "fontFamily": "NotoSansKR-Regular",
                "fontSize": 14,
              },
            ]
          }
        >
          *
        </Text>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "opacity": 1,
          }
        }
      >
        <Image
          source={
            Object {
              "testUri": "../../../src/assets/icons/checkbox/checkbox-unchecked.png",
            }
          }
          style={
            Array [
              Object {
                "height": 24,
                "width": 24,
              },
              Object {
                "marginRight": 4,
              },
            ]
          }
        />
      </View>
      <View
        style={
          Object {
            "marginTop": 1,
            "transform": Array [
              Object {
                "translateY": -13,
              },
            ],
            "zIndex": -1,
          }
        }
      />
    </View>
  </View>
</View>
`;
